/**
 BitPacking.h
 Purpose: BitPacking implementation
 
 @author Abrar Sheikh
 @version 1.0
 */

#include "BitPacking.h"

void BitPacking::fastpack(const unsigned int* in, unsigned int* out, const int bit) {
    switch (bit) {
        case 0:
            fastpack0(in, out);
            break;
        case 1:
            fastpack1(in, out);
            break;
        case 2:
            fastpack2(in, out);
            break;
        case 3:
            fastpack3(in, out);
            break;
        case 4:
            fastpack4(in, out);
            break;
        case 5:
            fastpack5(in, out);
            break;
        case 6:
            fastpack6(in, out);
            break;
        case 7:
            fastpack7(in, out);
            break;
        case 8:
            fastpack8(in, out);
            break;
        case 9:
            fastpack9(in, out);
            break;
        case 10:
            fastpack10(in, out);
            break;
        case 11:
            fastpack11(in, out);
            break;
        case 12:
            fastpack12(in, out);
            break;
        case 13:
            fastpack13(in, out);
            break;
        case 14:
            fastpack14(in, out);
            break;
        case 15:
            fastpack15(in, out);
            break;
        case 16:
            fastpack16(in, out);
            break;
        case 17:
            fastpack17(in, out);
            break;
        case 18:
            fastpack18(in, out);
            break;
        case 19:
            fastpack19(in, out);
            break;
        case 20:
            fastpack20(in, out);
            break;
        case 21:
            fastpack21(in, out);
            break;
        case 22:
            fastpack22(in, out);
            break;
        case 23:
            fastpack23(in, out);
            break;
        case 24:
            fastpack24(in, out);
            break;
        case 25:
            fastpack25(in, out);
            break;
        case 26:
            fastpack26(in, out);
            break;
        case 27:
            fastpack27(in, out);
            break;
        case 28:
            fastpack28(in, out);
            break;
        case 29:
            fastpack29(in, out);
            break;
        case 30:
            fastpack30(in, out);
            break;
        case 31:
            fastpack31(in, out);
            break;
        case 32:
            fastpack32(in, out);
            break;
        default:
            throw std::runtime_error(
                                     "Unsupported bit width.");
    }
}


void BitPacking::fastpackwithoutmask(const unsigned int* in,  unsigned int* out, const int bit) {
    switch (bit) {
        case 0:
            fastpackwithoutmask0(in, out);
            break;
        case 1:
            fastpackwithoutmask1(in, out);
            break;
        case 2:
            fastpackwithoutmask2(in, out);
            break;
        case 3:
            fastpackwithoutmask3(in, out);
            break;
        case 4:
            fastpackwithoutmask4(in, out);
            break;
        case 5:
            fastpackwithoutmask5(in, out);
            break;
        case 6:
            fastpackwithoutmask6(in, out);
            break;
        case 7:
            fastpackwithoutmask7(in, out);
            break;
        case 8:
            fastpackwithoutmask8(in, out);
            break;
        case 9:
            fastpackwithoutmask9(in, out);
            break;
        case 10:
            fastpackwithoutmask10(in, out);
            break;
        case 11:
            fastpackwithoutmask11(in, out);
            break;
        case 12:
            fastpackwithoutmask12(in, out);
            break;
        case 13:
            fastpackwithoutmask13(in, out);
            break;
        case 14:
            fastpackwithoutmask14(in, out);
            break;
        case 15:
            fastpackwithoutmask15(in, out);
            break;
        case 16:
            fastpackwithoutmask16(in, out);
            break;
        case 17:
            fastpackwithoutmask17(in, out);
            break;
        case 18:
            fastpackwithoutmask18(in, out);
            break;
        case 19:
            fastpackwithoutmask19(in, out);
            break;
        case 20:
            fastpackwithoutmask20(in, out);
            break;
        case 21:
            fastpackwithoutmask21(in, out);
            break;
        case 22:
            fastpackwithoutmask22(in, out);
            break;
        case 23:
            fastpackwithoutmask23(in, out);
            break;
        case 24:
            fastpackwithoutmask24(in, out);
            break;
        case 25:
            fastpackwithoutmask25(in, out);
            break;
        case 26:
            fastpackwithoutmask26(in, out);
            break;
        case 27:
            fastpackwithoutmask27(in, out);
            break;
        case 28:
            fastpackwithoutmask28(in, out);
            break;
        case 29:
            fastpackwithoutmask29(in, out);
            break;
        case 30:
            fastpackwithoutmask30(in, out);
            break;
        case 31:
            fastpackwithoutmask31(in, out);
            break;
        case 32:
            fastpackwithoutmask32(in, out);
            break;
        default:
            throw std::runtime_error(
                                     "Unsupported bit width.");
    }
}


void BitPacking::fastunpack(const unsigned int* in, unsigned int* out, const int bit) {
    switch (bit) {
        case 0:
            fastunpack0(in, out);
            break;
        case 1:
            fastunpack1(in, out);
            break;
        case 2:
            fastunpack2(in, out);
            break;
        case 3:
            fastunpack3(in, out);
            break;
        case 4:
            fastunpack4(in, out);
            break;
        case 5:
            fastunpack5(in, out);
            break;
        case 6:
            fastunpack6(in, out);
            break;
        case 7:
            fastunpack7(in, out);
            break;
        case 8:
            fastunpack8(in, out);
            break;
        case 9:
            fastunpack9(in, out);
            break;
        case 10:
            fastunpack10(in, out);
            break;
        case 11:
            fastunpack11(in, out);
            break;
        case 12:
            fastunpack12(in, out);
            break;
        case 13:
            fastunpack13(in, out);
            break;
        case 14:
            fastunpack14(in, out);
            break;
        case 15:
            fastunpack15(in, out);
            break;
        case 16:
            fastunpack16(in, out);
            break;
        case 17:
            fastunpack17(in, out);
            break;
        case 18:
            fastunpack18(in, out);
            break;
        case 19:
            fastunpack19(in, out);
            break;
        case 20:
            fastunpack20(in, out);
            break;
        case 21:
            fastunpack21(in, out);
            break;
        case 22:
            fastunpack22(in, out);
            break;
        case 23:
            fastunpack23(in, out);
            break;
        case 24:
            fastunpack24(in, out);
            break;
        case 25:
            fastunpack25(in, out);
            break;
        case 26:
            fastunpack26(in, out);
            break;
        case 27:
            fastunpack27(in, out);
            break;
        case 28:
            fastunpack28(in, out);
            break;
        case 29:
            fastunpack29(in, out);
            break;
        case 30:
            fastunpack30(in, out);
            break;
        case 31:
            fastunpack31(in, out);
            break;
        case 32:
            fastunpack32(in, out);
            break;
        default:
            throw std::runtime_error(
                                     "Unsupported bit width.");
    }
}

void BitPacking::fastpack0(const unsigned int* in, unsigned int* out) {
    // nothing
}

void BitPacking::fastpack1(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 1)
    | ((*(1 + in) & 1) << 1)
    | ((*(2 + in) & 1) << 2)
    | ((*(3 + in) & 1) << 3)
    | ((*(4 + in) & 1) << 4)
    | ((*(5 + in) & 1) << 5)
    | ((*(6 + in) & 1) << 6)
    | ((*(7 + in) & 1) << 7)
    | ((*(8 + in) & 1) << 8)
    | ((*(9 + in) & 1) << 9)
    | ((*(10 + in) & 1) << 10)
    | ((*(11 + in) & 1) << 11)
    | ((*(12 + in) & 1) << 12)
    | ((*(13 + in) & 1) << 13)
    | ((*(14 + in) & 1) << 14)
    | ((*(15 + in) & 1) << 15)
    | ((*(16 + in) & 1) << 16)
    | ((*(17 + in) & 1) << 17)
    | ((*(18 + in) & 1) << 18)
    | ((*(19 + in) & 1) << 19)
    | ((*(20 + in) & 1) << 20)
    | ((*(21 + in) & 1) << 21)
    | ((*(22 + in) & 1) << 22)
    | ((*(23 + in) & 1) << 23)
    | ((*(24 + in) & 1) << 24)
    | ((*(25 + in) & 1) << 25)
    | ((*(26 + in) & 1) << 26)
    | ((*(27 + in) & 1) << 27)
    | ((*(28 + in) & 1) << 28)
    | ((*(29 + in) & 1) << 29)
    | ((*(30 + in) & 1) << 30)
    | ((*(31 + in)) << 31);
    
}

void BitPacking::fastpack10(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 1023)
    | ((*(1 + in) & 1023) << 10)
    | ((*(2 + in) & 1023) << 20)
    | ((*(3 + in)) << 30);
    *(1 + out) = ((*(3 + in) & 1023) >> (10 - 8))
    | ((*(4 + in) & 1023) << 8)
    | ((*(5 + in) & 1023) << 18)
    | ((*(6 + in)) << 28);
    *(2 + out) = ((*(6 + in) & 1023) >> (10 - 6))
    | ((*(7 + in) & 1023) << 6)
    | ((*(8 + in) & 1023) << 16)
    | ((*(9 + in)) << 26);
    *(3 + out) = ((*(9 + in) & 1023) >> (10 - 4))
    | ((*(10 + in) & 1023) << 4)
    | ((*(11 + in) & 1023) << 14)
    | ((*(12 + in)) << 24);
    *(4 + out) = ((*(12 + in) & 1023) >> (10 - 2))
    | ((*(13 + in) & 1023) << 2)
    | ((*(14 + in) & 1023) << 12)
    | ((*(15 + in)) << 22);
    *(5 + out) = (*(16 + in) & 1023)
    | ((*(17 + in) & 1023) << 10)
    | ((*(18 + in) & 1023) << 20)
    | ((*(19 + in)) << 30);
    *(6 + out) = ((*(19 + in) & 1023) >> (10 - 8))
    | ((*(20 + in) & 1023) << 8)
    | ((*(21 + in) & 1023) << 18)
    | ((*(22 + in)) << 28);
    *(7 + out) = ((*(22 + in) & 1023) >> (10 - 6))
    | ((*(23 + in) & 1023) << 6)
    | ((*(24 + in) & 1023) << 16)
    | ((*(25 + in)) << 26);
    *(8 + out) = ((*(25 + in) & 1023) >> (10 - 4))
    | ((*(26 + in) & 1023) << 4)
    | ((*(27 + in) & 1023) << 14)
    | ((*(28 + in)) << 24);
    *(9 + out) = ((*(28 + in) & 1023) >> (10 - 2))
    | ((*(29 + in) & 1023) << 2)
    | ((*(30 + in) & 1023) << 12)
    | ((*(31 + in)) << 22);
}

void BitPacking::fastpack11(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 2047)
    | ((*(1 + in) & 2047) << 11)
    | ((*(2 + in)) << 22);
    *(1 + out) = ((*(2 + in) & 2047) >> (11 - 1))
    | ((*(3 + in) & 2047) << 1)
    | ((*(4 + in) & 2047) << 12)
    | ((*(5 + in)) << 23);
    *(2 + out) = ((*(5 + in) & 2047) >> (11 - 2))
    | ((*(6 + in) & 2047) << 2)
    | ((*(7 + in) & 2047) << 13)
    | ((*(8 + in)) << 24);
    *(3 + out) = ((*(8 + in) & 2047) >> (11 - 3))
    | ((*(9 + in) & 2047) << 3)
    | ((*(10 + in) & 2047) << 14)
    | ((*(11 + in)) << 25);
    *(4 + out) = ((*(11 + in) & 2047) >> (11 - 4))
    | ((*(12 + in) & 2047) << 4)
    | ((*(13 + in) & 2047) << 15)
    | ((*(14 + in)) << 26);
    *(5 + out) = ((*(14 + in) & 2047) >> (11 - 5))
    | ((*(15 + in) & 2047) << 5)
    | ((*(16 + in) & 2047) << 16)
    | ((*(17 + in)) << 27);
    *(6 + out) = ((*(17 + in) & 2047) >> (11 - 6))
    | ((*(18 + in) & 2047) << 6)
    | ((*(19 + in) & 2047) << 17)
    | ((*(20 + in)) << 28);
    *(7 + out) = ((*(20 + in) & 2047) >> (11 - 7))
    | ((*(21 + in) & 2047) << 7)
    | ((*(22 + in) & 2047) << 18)
    | ((*(23 + in)) << 29);
    *(8 + out) = ((*(23 + in) & 2047) >> (11 - 8))
    | ((*(24 + in) & 2047) << 8)
    | ((*(25 + in) & 2047) << 19)
    | ((*(26 + in)) << 30);
    *(9 + out) = ((*(26 + in) & 2047) >> (11 - 9))
    | ((*(27 + in) & 2047) << 9)
    | ((*(28 + in) & 2047) << 20)
    | ((*(29 + in)) << 31);
    *(10 + out) = ((*(29 + in) & 2047) >> (11 - 10))
    | ((*(30 + in) & 2047) << 10)
    | ((*(31 + in)) << 21);
}

void BitPacking::fastpack12(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 4095)
    | ((*(1 + in) & 4095) << 12)
    | ((*(2 + in)) << 24);
    *(1 + out) = ((*(2 + in) & 4095) >> (12 - 4))
    | ((*(3 + in) & 4095) << 4)
    | ((*(4 + in) & 4095) << 16)
    | ((*(5 + in)) << 28);
    *(2 + out) = ((*(5 + in) & 4095) >> (12 - 8))
    | ((*(6 + in) & 4095) << 8)
    | ((*(7 + in)) << 20);
    *(3 + out) = (*(8 + in) & 4095)
    | ((*(9 + in) & 4095) << 12)
    | ((*(10 + in)) << 24);
    *(4 + out) = ((*(10 + in) & 4095) >> (12 - 4))
    | ((*(11 + in) & 4095) << 4)
    | ((*(12 + in) & 4095) << 16)
    | ((*(13 + in)) << 28);
    *(5 + out) = ((*(13 + in) & 4095) >> (12 - 8))
    | ((*(14 + in) & 4095) << 8)
    | ((*(15 + in)) << 20);
    *(6 + out) = (*(16 + in) & 4095)
    | ((*(17 + in) & 4095) << 12)
    | ((*(18 + in)) << 24);
    *(7 + out) = ((*(18 + in) & 4095) >> (12 - 4))
    | ((*(19 + in) & 4095) << 4)
    | ((*(20 + in) & 4095) << 16)
    | ((*(21 + in)) << 28);
    *(8 + out) = ((*(21 + in) & 4095) >> (12 - 8))
    | ((*(22 + in) & 4095) << 8)
    | ((*(23 + in)) << 20);
    *(9 + out) = (*(24 + in) & 4095)
    | ((*(25 + in) & 4095) << 12)
    | ((*(26 + in)) << 24);
    *(10 + out) = ((*(26 + in) & 4095) >> (12 - 4))
    | ((*(27 + in) & 4095) << 4)
    | ((*(28 + in) & 4095) << 16)
    | ((*(29 + in)) << 28);
    *(11 + out) = ((*(29 + in) & 4095) >> (12 - 8))
    | ((*(30 + in) & 4095) << 8)
    | ((*(31 + in)) << 20);
}

void BitPacking::fastpack13(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 8191)
    | ((*(1 + in) & 8191) << 13)
    | ((*(2 + in)) << 26);
    *(1 + out) = ((*(2 + in) & 8191) >> (13 - 7))
    | ((*(3 + in) & 8191) << 7)
    | ((*(4 + in)) << 20);
    *(2 + out) = ((*(4 + in) & 8191) >> (13 - 1))
    | ((*(5 + in) & 8191) << 1)
    | ((*(6 + in) & 8191) << 14)
    | ((*(7 + in)) << 27);
    *(3 + out) = ((*(7 + in) & 8191) >> (13 - 8))
    | ((*(8 + in) & 8191) << 8)
    | ((*(9 + in)) << 21);
    *(4 + out) = ((*(9 + in) & 8191) >> (13 - 2))
    | ((*(10 + in) & 8191) << 2)
    | ((*(11 + in) & 8191) << 15)
    | ((*(12 + in)) << 28);
    *(5 + out) = ((*(12 + in) & 8191) >> (13 - 9))
    | ((*(13 + in) & 8191) << 9)
    | ((*(14 + in)) << 22);
    *(6 + out) = ((*(14 + in) & 8191) >> (13 - 3))
    | ((*(15 + in) & 8191) << 3)
    | ((*(16 + in) & 8191) << 16)
    | ((*(17 + in)) << 29);
    *(7 + out) = ((*(17 + in) & 8191) >> (13 - 10))
    | ((*(18 + in) & 8191) << 10)
    | ((*(19 + in)) << 23);
    *(8 + out) = ((*(19 + in) & 8191) >> (13 - 4))
    | ((*(20 + in) & 8191) << 4)
    | ((*(21 + in) & 8191) << 17)
    | ((*(22 + in)) << 30);
    *(9 + out) = ((*(22 + in) & 8191) >> (13 - 11))
    | ((*(23 + in) & 8191) << 11)
    | ((*(24 + in)) << 24);
    *(10 + out) = ((*(24 + in) & 8191) >> (13 - 5))
    | ((*(25 + in) & 8191) << 5)
    | ((*(26 + in) & 8191) << 18)
    | ((*(27 + in)) << 31);
    *(11 + out) = ((*(27 + in) & 8191) >> (13 - 12))
    | ((*(28 + in) & 8191) << 12)
    | ((*(29 + in)) << 25);
    *(12 + out) = ((*(29 + in) & 8191) >> (13 - 6))
    | ((*(30 + in) & 8191) << 6)
    | ((*(31 + in)) << 19);
}

void BitPacking::fastpack14(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 16383)
    | ((*(1 + in) & 16383) << 14)
    | ((*(2 + in)) << 28);
    *(1 + out) = ((*(2 + in) & 16383) >> (14 - 10))
    | ((*(3 + in) & 16383) << 10)
    | ((*(4 + in)) << 24);
    *(2 + out) = ((*(4 + in) & 16383) >> (14 - 6))
    | ((*(5 + in) & 16383) << 6)
    | ((*(6 + in)) << 20);
    *(3 + out) = ((*(6 + in) & 16383) >> (14 - 2))
    | ((*(7 + in) & 16383) << 2)
    | ((*(8 + in) & 16383) << 16)
    | ((*(9 + in)) << 30);
    *(4 + out) = ((*(9 + in) & 16383) >> (14 - 12))
    | ((*(10 + in) & 16383) << 12)
    | ((*(11 + in)) << 26);
    *(5 + out) = ((*(11 + in) & 16383) >> (14 - 8))
    | ((*(12 + in) & 16383) << 8)
    | ((*(13 + in)) << 22);
    *(6 + out) = ((*(13 + in) & 16383) >> (14 - 4))
    | ((*(14 + in) & 16383) << 4)
    | ((*(15 + in)) << 18);
    *(7 + out) = (*(16 + in) & 16383)
    | ((*(17 + in) & 16383) << 14)
    | ((*(18 + in)) << 28);
    *(8 + out) = ((*(18 + in) & 16383) >> (14 - 10))
    | ((*(19 + in) & 16383) << 10)
    | ((*(20 + in)) << 24);
    *(9 + out) = ((*(20 + in) & 16383) >> (14 - 6))
    | ((*(21 + in) & 16383) << 6)
    | ((*(22 + in)) << 20);
    *(10 + out) = ((*(22 + in) & 16383) >> (14 - 2))
    | ((*(23 + in) & 16383) << 2)
    | ((*(24 + in) & 16383) << 16)
    | ((*(25 + in)) << 30);
    *(11 + out) = ((*(25 + in) & 16383) >> (14 - 12))
    | ((*(26 + in) & 16383) << 12)
    | ((*(27 + in)) << 26);
    *(12 + out) = ((*(27 + in) & 16383) >> (14 - 8))
    | ((*(28 + in) & 16383) << 8)
    | ((*(29 + in)) << 22);
    *(13 + out) = ((*(29 + in) & 16383) >> (14 - 4))
    | ((*(30 + in) & 16383) << 4)
    | ((*(31 + in)) << 18);
}

void BitPacking::fastpack15(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 32767)
    | ((*(1 + in) & 32767) << 15)
    | ((*(2 + in)) << 30);
    *(1 + out) = ((*(2 + in) & 32767) >> (15 - 13))
    | ((*(3 + in) & 32767) << 13)
    | ((*(4 + in)) << 28);
    *(2 + out) = ((*(4 + in) & 32767) >> (15 - 11))
    | ((*(5 + in) & 32767) << 11)
    | ((*(6 + in)) << 26);
    *(3 + out) = ((*(6 + in) & 32767) >> (15 - 9))
    | ((*(7 + in) & 32767) << 9)
    | ((*(8 + in)) << 24);
    *(4 + out) = ((*(8 + in) & 32767) >> (15 - 7))
    | ((*(9 + in) & 32767) << 7)
    | ((*(10 + in)) << 22);
    *(5 + out) = ((*(10 + in) & 32767) >> (15 - 5))
    | ((*(11 + in) & 32767) << 5)
    | ((*(12 + in)) << 20);
    *(6 + out) = ((*(12 + in) & 32767) >> (15 - 3))
    | ((*(13 + in) & 32767) << 3)
    | ((*(14 + in)) << 18);
    *(7 + out) = ((*(14 + in) & 32767) >> (15 - 1))
    | ((*(15 + in) & 32767) << 1)
    | ((*(16 + in) & 32767) << 16)
    | ((*(17 + in)) << 31);
    *(8 + out) = ((*(17 + in) & 32767) >> (15 - 14))
    | ((*(18 + in) & 32767) << 14)
    | ((*(19 + in)) << 29);
    *(9 + out) = ((*(19 + in) & 32767) >> (15 - 12))
    | ((*(20 + in) & 32767) << 12)
    | ((*(21 + in)) << 27);
    *(10 + out) = ((*(21 + in) & 32767) >> (15 - 10))
    | ((*(22 + in) & 32767) << 10)
    | ((*(23 + in)) << 25);
    *(11 + out) = ((*(23 + in) & 32767) >> (15 - 8))
    | ((*(24 + in) & 32767) << 8)
    | ((*(25 + in)) << 23);
    *(12 + out) = ((*(25 + in) & 32767) >> (15 - 6))
    | ((*(26 + in) & 32767) << 6)
    | ((*(27 + in)) << 21);
    *(13 + out) = ((*(27 + in) & 32767) >> (15 - 4))
    | ((*(28 + in) & 32767) << 4)
    | ((*(29 + in)) << 19);
    *(14 + out) = ((*(29 + in) & 32767) >> (15 - 2))
    | ((*(30 + in) & 32767) << 2)
    | ((*(31 + in)) << 17);
}

void BitPacking::fastpack16(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 65535)
    | ((*(1 + in)) << 16);
    *(1 + out) = (*(2 + in) & 65535)
    | ((*(3 + in)) << 16);
    *(2 + out) = (*(4 + in) & 65535)
    | ((*(5 + in)) << 16);
    *(3 + out) = (*(6 + in) & 65535)
    | ((*(7 + in)) << 16);
    *(4 + out) = (*(8 + in) & 65535)
    | ((*(9 + in)) << 16);
    *(5 + out) = (*(10 + in) & 65535)
    | ((*(11 + in)) << 16);
    *(6 + out) = (*(12 + in) & 65535)
    | ((*(13 + in)) << 16);
    *(7 + out) = (*(14 + in) & 65535)
    | ((*(15 + in)) << 16);
    *(8 + out) = (*(16 + in) & 65535)
    | ((*(17 + in)) << 16);
    *(9 + out) = (*(18 + in) & 65535)
    | ((*(19 + in)) << 16);
    *(10 + out) = (*(20 + in) & 65535)
    | ((*(21 + in)) << 16);
    *(11 + out) = (*(22 + in) & 65535)
    | ((*(23 + in)) << 16);
    *(12 + out) = (*(24 + in) & 65535)
    | ((*(25 + in)) << 16);
    *(13 + out) = (*(26 + in) & 65535)
    | ((*(27 + in)) << 16);
    *(14 + out) = (*(28 + in) & 65535)
    | ((*(29 + in)) << 16);
    *(15 + out) = (*(30 + in) & 65535)
    | ((*(31 + in)) << 16);
}

void BitPacking::fastpack17(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 131071)
    | ((*(1 + in)) << 17);
    *(1 + out) = ((*(1 + in) & 131071) >> (17 - 2))
    | ((*(2 + in) & 131071) << 2)
    | ((*(3 + in)) << 19);
    *(2 + out) = ((*(3 + in) & 131071) >> (17 - 4))
    | ((*(4 + in) & 131071) << 4)
    | ((*(5 + in)) << 21);
    *(3 + out) = ((*(5 + in) & 131071) >> (17 - 6))
    | ((*(6 + in) & 131071) << 6)
    | ((*(7 + in)) << 23);
    *(4 + out) = ((*(7 + in) & 131071) >> (17 - 8))
    | ((*(8 + in) & 131071) << 8)
    | ((*(9 + in)) << 25);
    *(5 + out) = ((*(9 + in) & 131071) >> (17 - 10))
    | ((*(10 + in) & 131071) << 10)
    | ((*(11 + in)) << 27);
    *(6 + out) = ((*(11 + in) & 131071) >> (17 - 12))
    | ((*(12 + in) & 131071) << 12)
    | ((*(13 + in)) << 29);
    *(7 + out) = ((*(13 + in) & 131071) >> (17 - 14))
    | ((*(14 + in) & 131071) << 14)
    | ((*(15 + in)) << 31);
    *(8 + out) = ((*(15 + in) & 131071) >> (17 - 16))
    | ((*(16 + in)) << 16);
    *(9 + out) = ((*(16 + in) & 131071) >> (17 - 1))
    | ((*(17 + in) & 131071) << 1)
    | ((*(18 + in)) << 18);
    *(10 + out) = ((*(18 + in) & 131071) >> (17 - 3))
    | ((*(19 + in) & 131071) << 3)
    | ((*(20 + in)) << 20);
    *(11 + out) = ((*(20 + in) & 131071) >> (17 - 5))
    | ((*(21 + in) & 131071) << 5)
    | ((*(22 + in)) << 22);
    *(12 + out) = ((*(22 + in) & 131071) >> (17 - 7))
    | ((*(23 + in) & 131071) << 7)
    | ((*(24 + in)) << 24);
    *(13 + out) = ((*(24 + in) & 131071) >> (17 - 9))
    | ((*(25 + in) & 131071) << 9)
    | ((*(26 + in)) << 26);
    *(14 + out) = ((*(26 + in) & 131071) >> (17 - 11))
    | ((*(27 + in) & 131071) << 11)
    | ((*(28 + in)) << 28);
    *(15 + out) = ((*(28 + in) & 131071) >> (17 - 13))
    | ((*(29 + in) & 131071) << 13)
    | ((*(30 + in)) << 30);
    *(16 + out) = ((*(30 + in) & 131071) >> (17 - 15))
    | ((*(31 + in)) << 15);
}

void BitPacking::fastpack18(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 262143)
    | ((*(1 + in)) << 18);
    *(1 + out) = ((*(1 + in) & 262143) >> (18 - 4))
    | ((*(2 + in) & 262143) << 4)
    | ((*(3 + in)) << 22);
    *(2 + out) = ((*(3 + in) & 262143) >> (18 - 8))
    | ((*(4 + in) & 262143) << 8)
    | ((*(5 + in)) << 26);
    *(3 + out) = ((*(5 + in) & 262143) >> (18 - 12))
    | ((*(6 + in) & 262143) << 12)
    | ((*(7 + in)) << 30);
    *(4 + out) = ((*(7 + in) & 262143) >> (18 - 16))
    | ((*(8 + in)) << 16);
    *(5 + out) = ((*(8 + in) & 262143) >> (18 - 2))
    | ((*(9 + in) & 262143) << 2)
    | ((*(10 + in)) << 20);
    *(6 + out) = ((*(10 + in) & 262143) >> (18 - 6))
    | ((*(11 + in) & 262143) << 6)
    | ((*(12 + in)) << 24);
    *(7 + out) = ((*(12 + in) & 262143) >> (18 - 10))
    | ((*(13 + in) & 262143) << 10)
    | ((*(14 + in)) << 28);
    *(8 + out) = ((*(14 + in) & 262143) >> (18 - 14))
    | ((*(15 + in)) << 14);
    *(9 + out) = (*(16 + in) & 262143)
    | ((*(17 + in)) << 18);
    *(10 + out) = ((*(17 + in) & 262143) >> (18 - 4))
    | ((*(18 + in) & 262143) << 4)
    | ((*(19 + in)) << 22);
    *(11 + out) = ((*(19 + in) & 262143) >> (18 - 8))
    | ((*(20 + in) & 262143) << 8)
    | ((*(21 + in)) << 26);
    *(12 + out) = ((*(21 + in) & 262143) >> (18 - 12))
    | ((*(22 + in) & 262143) << 12)
    | ((*(23 + in)) << 30);
    *(13 + out) = ((*(23 + in) & 262143) >> (18 - 16))
    | ((*(24 + in)) << 16);
    *(14 + out) = ((*(24 + in) & 262143) >> (18 - 2))
    | ((*(25 + in) & 262143) << 2)
    | ((*(26 + in)) << 20);
    *(15 + out) = ((*(26 + in) & 262143) >> (18 - 6))
    | ((*(27 + in) & 262143) << 6)
    | ((*(28 + in)) << 24);
    *(16 + out) = ((*(28 + in) & 262143) >> (18 - 10))
    | ((*(29 + in) & 262143) << 10)
    | ((*(30 + in)) << 28);
    *(17 + out) = ((*(30 + in) & 262143) >> (18 - 14))
    | ((*(31 + in)) << 14);
}

void BitPacking::fastpack19(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 524287)
    | ((*(1 + in)) << 19);
    *(1 + out) = ((*(1 + in) & 524287) >> (19 - 6))
    | ((*(2 + in) & 524287) << 6)
    | ((*(3 + in)) << 25);
    *(2 + out) = ((*(3 + in) & 524287) >> (19 - 12))
    | ((*(4 + in) & 524287) << 12)
    | ((*(5 + in)) << 31);
    *(3 + out) = ((*(5 + in) & 524287) >> (19 - 18))
    | ((*(6 + in)) << 18);
    *(4 + out) = ((*(6 + in) & 524287) >> (19 - 5))
    | ((*(7 + in) & 524287) << 5)
    | ((*(8 + in)) << 24);
    *(5 + out) = ((*(8 + in) & 524287) >> (19 - 11))
    | ((*(9 + in) & 524287) << 11)
    | ((*(10 + in)) << 30);
    *(6 + out) = ((*(10 + in) & 524287) >> (19 - 17))
    | ((*(11 + in)) << 17);
    *(7 + out) = ((*(11 + in) & 524287) >> (19 - 4))
    | ((*(12 + in) & 524287) << 4)
    | ((*(13 + in)) << 23);
    *(8 + out) = ((*(13 + in) & 524287) >> (19 - 10))
    | ((*(14 + in) & 524287) << 10)
    | ((*(15 + in)) << 29);
    *(9 + out) = ((*(15 + in) & 524287) >> (19 - 16))
    | ((*(16 + in)) << 16);
    *(10 + out) = ((*(16 + in) & 524287) >> (19 - 3))
    | ((*(17 + in) & 524287) << 3)
    | ((*(18 + in)) << 22);
    *(11 + out) = ((*(18 + in) & 524287) >> (19 - 9))
    | ((*(19 + in) & 524287) << 9)
    | ((*(20 + in)) << 28);
    *(12 + out) = ((*(20 + in) & 524287) >> (19 - 15))
    | ((*(21 + in)) << 15);
    *(13 + out) = ((*(21 + in) & 524287) >> (19 - 2))
    | ((*(22 + in) & 524287) << 2)
    | ((*(23 + in)) << 21);
    *(14 + out) = ((*(23 + in) & 524287) >> (19 - 8))
    | ((*(24 + in) & 524287) << 8)
    | ((*(25 + in)) << 27);
    *(15 + out) = ((*(25 + in) & 524287) >> (19 - 14))
    | ((*(26 + in)) << 14);
    *(16 + out) = ((*(26 + in) & 524287) >> (19 - 1))
    | ((*(27 + in) & 524287) << 1)
    | ((*(28 + in)) << 20);
    *(17 + out) = ((*(28 + in) & 524287) >> (19 - 7))
    | ((*(29 + in) & 524287) << 7)
    | ((*(30 + in)) << 26);
    *(18 + out) = ((*(30 + in) & 524287) >> (19 - 13))
    | ((*(31 + in)) << 13);
}

void BitPacking::fastpack2(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 3)
    | ((*(1 + in) & 3) << 2)
    | ((*(2 + in) & 3) << 4)
    | ((*(3 + in) & 3) << 6)
    | ((*(4 + in) & 3) << 8)
    | ((*(5 + in) & 3) << 10)
    | ((*(6 + in) & 3) << 12)
    | ((*(7 + in) & 3) << 14)
    | ((*(8 + in) & 3) << 16)
    | ((*(9 + in) & 3) << 18)
    | ((*(10 + in) & 3) << 20)
    | ((*(11 + in) & 3) << 22)
    | ((*(12 + in) & 3) << 24)
    | ((*(13 + in) & 3) << 26)
    | ((*(14 + in) & 3) << 28)
    | ((*(15 + in)) << 30);
    *(1 + out) = (*(16 + in) & 3)
    | ((*(17 + in) & 3) << 2)
    | ((*(18 + in) & 3) << 4)
    | ((*(19 + in) & 3) << 6)
    | ((*(20 + in) & 3) << 8)
    | ((*(21 + in) & 3) << 10)
    | ((*(22 + in) & 3) << 12)
    | ((*(23 + in) & 3) << 14)
    | ((*(24 + in) & 3) << 16)
    | ((*(25 + in) & 3) << 18)
    | ((*(26 + in) & 3) << 20)
    | ((*(27 + in) & 3) << 22)
    | ((*(28 + in) & 3) << 24)
    | ((*(29 + in) & 3) << 26)
    | ((*(30 + in) & 3) << 28)
    | ((*(31 + in)) << 30);
}

void BitPacking::fastpack20(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 1048575)
    | ((*(1 + in)) << 20);
    *(1 + out) = ((*(1 + in) & 1048575) >> (20 - 8))
    | ((*(2 + in) & 1048575) << 8)
    | ((*(3 + in)) << 28);
    *(2 + out) = ((*(3 + in) & 1048575) >> (20 - 16))
    | ((*(4 + in)) << 16);
    *(3 + out) = ((*(4 + in) & 1048575) >> (20 - 4))
    | ((*(5 + in) & 1048575) << 4)
    | ((*(6 + in)) << 24);
    *(4 + out) = ((*(6 + in) & 1048575) >> (20 - 12))
    | ((*(7 + in)) << 12);
    *(5 + out) = (*(8 + in) & 1048575)
    | ((*(9 + in)) << 20);
    *(6 + out) = ((*(9 + in) & 1048575) >> (20 - 8))
    | ((*(10 + in) & 1048575) << 8)
    | ((*(11 + in)) << 28);
    *(7 + out) = ((*(11 + in) & 1048575) >> (20 - 16))
    | ((*(12 + in)) << 16);
    *(8 + out) = ((*(12 + in) & 1048575) >> (20 - 4))
    | ((*(13 + in) & 1048575) << 4)
    | ((*(14 + in)) << 24);
    *(9 + out) = ((*(14 + in) & 1048575) >> (20 - 12))
    | ((*(15 + in)) << 12);
    *(10 + out) = (*(16 + in) & 1048575)
    | ((*(17 + in)) << 20);
    *(11 + out) = ((*(17 + in) & 1048575) >> (20 - 8))
    | ((*(18 + in) & 1048575) << 8)
    | ((*(19 + in)) << 28);
    *(12 + out) = ((*(19 + in) & 1048575) >> (20 - 16))
    | ((*(20 + in)) << 16);
    *(13 + out) = ((*(20 + in) & 1048575) >> (20 - 4))
    | ((*(21 + in) & 1048575) << 4)
    | ((*(22 + in)) << 24);
    *(14 + out) = ((*(22 + in) & 1048575) >> (20 - 12))
    | ((*(23 + in)) << 12);
    *(15 + out) = (*(24 + in) & 1048575)
    | ((*(25 + in)) << 20);
    *(16 + out) = ((*(25 + in) & 1048575) >> (20 - 8))
    | ((*(26 + in) & 1048575) << 8)
    | ((*(27 + in)) << 28);
    *(17 + out) = ((*(27 + in) & 1048575) >> (20 - 16))
    | ((*(28 + in)) << 16);
    *(18 + out) = ((*(28 + in) & 1048575) >> (20 - 4))
    | ((*(29 + in) & 1048575) << 4)
    | ((*(30 + in)) << 24);
    *(19 + out) = ((*(30 + in) & 1048575) >> (20 - 12))
    | ((*(31 + in)) << 12);
}

void BitPacking::fastpack21(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 2097151)
    | ((*(1 + in)) << 21);
    *(1 + out) = ((*(1 + in) & 2097151) >> (21 - 10))
    | ((*(2 + in) & 2097151) << 10)
    | ((*(3 + in)) << 31);
    *(2 + out) = ((*(3 + in) & 2097151) >> (21 - 20))
    | ((*(4 + in)) << 20);
    *(3 + out) = ((*(4 + in) & 2097151) >> (21 - 9))
    | ((*(5 + in) & 2097151) << 9)
    | ((*(6 + in)) << 30);
    *(4 + out) = ((*(6 + in) & 2097151) >> (21 - 19))
    | ((*(7 + in)) << 19);
    *(5 + out) = ((*(7 + in) & 2097151) >> (21 - 8))
    | ((*(8 + in) & 2097151) << 8)
    | ((*(9 + in)) << 29);
    *(6 + out) = ((*(9 + in) & 2097151) >> (21 - 18))
    | ((*(10 + in)) << 18);
    *(7 + out) = ((*(10 + in) & 2097151) >> (21 - 7))
    | ((*(11 + in) & 2097151) << 7)
    | ((*(12 + in)) << 28);
    *(8 + out) = ((*(12 + in) & 2097151) >> (21 - 17))
    | ((*(13 + in)) << 17);
    *(9 + out) = ((*(13 + in) & 2097151) >> (21 - 6))
    | ((*(14 + in) & 2097151) << 6)
    | ((*(15 + in)) << 27);
    *(10 + out) = ((*(15 + in) & 2097151) >> (21 - 16))
    | ((*(16 + in)) << 16);
    *(11 + out) = ((*(16 + in) & 2097151) >> (21 - 5))
    | ((*(17 + in) & 2097151) << 5)
    | ((*(18 + in)) << 26);
    *(12 + out) = ((*(18 + in) & 2097151) >> (21 - 15))
    | ((*(19 + in)) << 15);
    *(13 + out) = ((*(19 + in) & 2097151) >> (21 - 4))
    | ((*(20 + in) & 2097151) << 4)
    | ((*(21 + in)) << 25);
    *(14 + out) = ((*(21 + in) & 2097151) >> (21 - 14))
    | ((*(22 + in)) << 14);
    *(15 + out) = ((*(22 + in) & 2097151) >> (21 - 3))
    | ((*(23 + in) & 2097151) << 3)
    | ((*(24 + in)) << 24);
    *(16 + out) = ((*(24 + in) & 2097151) >> (21 - 13))
    | ((*(25 + in)) << 13);
    *(17 + out) = ((*(25 + in) & 2097151) >> (21 - 2))
    | ((*(26 + in) & 2097151) << 2)
    | ((*(27 + in)) << 23);
    *(18 + out) = ((*(27 + in) & 2097151) >> (21 - 12))
    | ((*(28 + in)) << 12);
    *(19 + out) = ((*(28 + in) & 2097151) >> (21 - 1))
    | ((*(29 + in) & 2097151) << 1)
    | ((*(30 + in)) << 22);
    *(20 + out) = ((*(30 + in) & 2097151) >> (21 - 11))
    | ((*(31 + in)) << 11);
}

void BitPacking::fastpack22(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 4194303)
    | ((*(1 + in)) << 22);
    *(1 + out) = ((*(1 + in) & 4194303) >> (22 - 12))
    | ((*(2 + in)) << 12);
    *(2 + out) = ((*(2 + in) & 4194303) >> (22 - 2))
    | ((*(3 + in) & 4194303) << 2)
    | ((*(4 + in)) << 24);
    *(3 + out) = ((*(4 + in) & 4194303) >> (22 - 14))
    | ((*(5 + in)) << 14);
    *(4 + out) = ((*(5 + in) & 4194303) >> (22 - 4))
    | ((*(6 + in) & 4194303) << 4)
    | ((*(7 + in)) << 26);
    *(5 + out) = ((*(7 + in) & 4194303) >> (22 - 16))
    | ((*(8 + in)) << 16);
    *(6 + out) = ((*(8 + in) & 4194303) >> (22 - 6))
    | ((*(9 + in) & 4194303) << 6)
    | ((*(10 + in)) << 28);
    *(7 + out) = ((*(10 + in) & 4194303) >> (22 - 18))
    | ((*(11 + in)) << 18);
    *(8 + out) = ((*(11 + in) & 4194303) >> (22 - 8))
    | ((*(12 + in) & 4194303) << 8)
    | ((*(13 + in)) << 30);
    *(9 + out) = ((*(13 + in) & 4194303) >> (22 - 20))
    | ((*(14 + in)) << 20);
    *(10 + out) = ((*(14 + in) & 4194303) >> (22 - 10))
    | ((*(15 + in)) << 10);
    *(11 + out) = (*(16 + in) & 4194303)
    | ((*(17 + in)) << 22);
    *(12 + out) = ((*(17 + in) & 4194303) >> (22 - 12))
    | ((*(18 + in)) << 12);
    *(13 + out) = ((*(18 + in) & 4194303) >> (22 - 2))
    | ((*(19 + in) & 4194303) << 2)
    | ((*(20 + in)) << 24);
    *(14 + out) = ((*(20 + in) & 4194303) >> (22 - 14))
    | ((*(21 + in)) << 14);
    *(15 + out) = ((*(21 + in) & 4194303) >> (22 - 4))
    | ((*(22 + in) & 4194303) << 4)
    | ((*(23 + in)) << 26);
    *(16 + out) = ((*(23 + in) & 4194303) >> (22 - 16))
    | ((*(24 + in)) << 16);
    *(17 + out) = ((*(24 + in) & 4194303) >> (22 - 6))
    | ((*(25 + in) & 4194303) << 6)
    | ((*(26 + in)) << 28);
    *(18 + out) = ((*(26 + in) & 4194303) >> (22 - 18))
    | ((*(27 + in)) << 18);
    *(19 + out) = ((*(27 + in) & 4194303) >> (22 - 8))
    | ((*(28 + in) & 4194303) << 8)
    | ((*(29 + in)) << 30);
    *(20 + out) = ((*(29 + in) & 4194303) >> (22 - 20))
    | ((*(30 + in)) << 20);
    *(21 + out) = ((*(30 + in) & 4194303) >> (22 - 10))
    | ((*(31 + in)) << 10);
}

void BitPacking::fastpack23(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 8388607)
    | ((*(1 + in)) << 23);
    *(1 + out) = ((*(1 + in) & 8388607) >> (23 - 14))
    | ((*(2 + in)) << 14);
    *(2 + out) = ((*(2 + in) & 8388607) >> (23 - 5))
    | ((*(3 + in) & 8388607) << 5)
    | ((*(4 + in)) << 28);
    *(3 + out) = ((*(4 + in) & 8388607) >> (23 - 19))
    | ((*(5 + in)) << 19);
    *(4 + out) = ((*(5 + in) & 8388607) >> (23 - 10))
    | ((*(6 + in)) << 10);
    *(5 + out) = ((*(6 + in) & 8388607) >> (23 - 1))
    | ((*(7 + in) & 8388607) << 1)
    | ((*(8 + in)) << 24);
    *(6 + out) = ((*(8 + in) & 8388607) >> (23 - 15))
    | ((*(9 + in)) << 15);
    *(7 + out) = ((*(9 + in) & 8388607) >> (23 - 6))
    | ((*(10 + in) & 8388607) << 6)
    | ((*(11 + in)) << 29);
    *(8 + out) = ((*(11 + in) & 8388607) >> (23 - 20))
    | ((*(12 + in)) << 20);
    *(9 + out) = ((*(12 + in) & 8388607) >> (23 - 11))
    | ((*(13 + in)) << 11);
    *(10 + out) = ((*(13 + in) & 8388607) >> (23 - 2))
    | ((*(14 + in) & 8388607) << 2)
    | ((*(15 + in)) << 25);
    *(11 + out) = ((*(15 + in) & 8388607) >> (23 - 16))
    | ((*(16 + in)) << 16);
    *(12 + out) = ((*(16 + in) & 8388607) >> (23 - 7))
    | ((*(17 + in) & 8388607) << 7)
    | ((*(18 + in)) << 30);
    *(13 + out) = ((*(18 + in) & 8388607) >> (23 - 21))
    | ((*(19 + in)) << 21);
    *(14 + out) = ((*(19 + in) & 8388607) >> (23 - 12))
    | ((*(20 + in)) << 12);
    *(15 + out) = ((*(20 + in) & 8388607) >> (23 - 3))
    | ((*(21 + in) & 8388607) << 3)
    | ((*(22 + in)) << 26);
    *(16 + out) = ((*(22 + in) & 8388607) >> (23 - 17))
    | ((*(23 + in)) << 17);
    *(17 + out) = ((*(23 + in) & 8388607) >> (23 - 8))
    | ((*(24 + in) & 8388607) << 8)
    | ((*(25 + in)) << 31);
    *(18 + out) = ((*(25 + in) & 8388607) >> (23 - 22))
    | ((*(26 + in)) << 22);
    *(19 + out) = ((*(26 + in) & 8388607) >> (23 - 13))
    | ((*(27 + in)) << 13);
    *(20 + out) = ((*(27 + in) & 8388607) >> (23 - 4))
    | ((*(28 + in) & 8388607) << 4)
    | ((*(29 + in)) << 27);
    *(21 + out) = ((*(29 + in) & 8388607) >> (23 - 18))
    | ((*(30 + in)) << 18);
    *(22 + out) = ((*(30 + in) & 8388607) >> (23 - 9))
    | ((*(31 + in)) << 9);
}

void BitPacking::fastpack24(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 16777215)
    | ((*(1 + in)) << 24);
    *(1 + out) = ((*(1 + in) & 16777215) >> (24 - 16))
    | ((*(2 + in)) << 16);
    *(2 + out) = ((*(2 + in) & 16777215) >> (24 - 8))
    | ((*(3 + in)) << 8);
    *(3 + out) = (*(4 + in) & 16777215)
    | ((*(5 + in)) << 24);
    *(4 + out) = ((*(5 + in) & 16777215) >> (24 - 16))
    | ((*(6 + in)) << 16);
    *(5 + out) = ((*(6 + in) & 16777215) >> (24 - 8))
    | ((*(7 + in)) << 8);
    *(6 + out) = (*(8 + in) & 16777215)
    | ((*(9 + in)) << 24);
    *(7 + out) = ((*(9 + in) & 16777215) >> (24 - 16))
    | ((*(10 + in)) << 16);
    *(8 + out) = ((*(10 + in) & 16777215) >> (24 - 8))
    | ((*(11 + in)) << 8);
    *(9 + out) = (*(12 + in) & 16777215)
    | ((*(13 + in)) << 24);
    *(10 + out) = ((*(13 + in) & 16777215) >> (24 - 16))
    | ((*(14 + in)) << 16);
    *(11 + out) = ((*(14 + in) & 16777215) >> (24 - 8))
    | ((*(15 + in)) << 8);
    *(12 + out) = (*(16 + in) & 16777215)
    | ((*(17 + in)) << 24);
    *(13 + out) = ((*(17 + in) & 16777215) >> (24 - 16))
    | ((*(18 + in)) << 16);
    *(14 + out) = ((*(18 + in) & 16777215) >> (24 - 8))
    | ((*(19 + in)) << 8);
    *(15 + out) = (*(20 + in) & 16777215)
    | ((*(21 + in)) << 24);
    *(16 + out) = ((*(21 + in) & 16777215) >> (24 - 16))
    | ((*(22 + in)) << 16);
    *(17 + out) = ((*(22 + in) & 16777215) >> (24 - 8))
    | ((*(23 + in)) << 8);
    *(18 + out) = (*(24 + in) & 16777215)
    | ((*(25 + in)) << 24);
    *(19 + out) = ((*(25 + in) & 16777215) >> (24 - 16))
    | ((*(26 + in)) << 16);
    *(20 + out) = ((*(26 + in) & 16777215) >> (24 - 8))
    | ((*(27 + in)) << 8);
    *(21 + out) = (*(28 + in) & 16777215)
    | ((*(29 + in)) << 24);
    *(22 + out) = ((*(29 + in) & 16777215) >> (24 - 16))
    | ((*(30 + in)) << 16);
    *(23 + out) = ((*(30 + in) & 16777215) >> (24 - 8))
    | ((*(31 + in)) << 8);
}

void BitPacking::fastpack25(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 33554431)
    | ((*(1 + in)) << 25);
    *(1 + out) = ((*(1 + in) & 33554431) >> (25 - 18))
    | ((*(2 + in)) << 18);
    *(2 + out) = ((*(2 + in) & 33554431) >> (25 - 11))
    | ((*(3 + in)) << 11);
    *(3 + out) = ((*(3 + in) & 33554431) >> (25 - 4))
    | ((*(4 + in) & 33554431) << 4)
    | ((*(5 + in)) << 29);
    *(4 + out) = ((*(5 + in) & 33554431) >> (25 - 22))
    | ((*(6 + in)) << 22);
    *(5 + out) = ((*(6 + in) & 33554431) >> (25 - 15))
    | ((*(7 + in)) << 15);
    *(6 + out) = ((*(7 + in) & 33554431) >> (25 - 8))
    | ((*(8 + in)) << 8);
    *(7 + out) = ((*(8 + in) & 33554431) >> (25 - 1))
    | ((*(9 + in) & 33554431) << 1)
    | ((*(10 + in)) << 26);
    *(8 + out) = ((*(10 + in) & 33554431) >> (25 - 19))
    | ((*(11 + in)) << 19);
    *(9 + out) = ((*(11 + in) & 33554431) >> (25 - 12))
    | ((*(12 + in)) << 12);
    *(10 + out) = ((*(12 + in) & 33554431) >> (25 - 5))
    | ((*(13 + in) & 33554431) << 5)
    | ((*(14 + in)) << 30);
    *(11 + out) = ((*(14 + in) & 33554431) >> (25 - 23))
    | ((*(15 + in)) << 23);
    *(12 + out) = ((*(15 + in) & 33554431) >> (25 - 16))
    | ((*(16 + in)) << 16);
    *(13 + out) = ((*(16 + in) & 33554431) >> (25 - 9))
    | ((*(17 + in)) << 9);
    *(14 + out) = ((*(17 + in) & 33554431) >> (25 - 2))
    | ((*(18 + in) & 33554431) << 2)
    | ((*(19 + in)) << 27);
    *(15 + out) = ((*(19 + in) & 33554431) >> (25 - 20))
    | ((*(20 + in)) << 20);
    *(16 + out) = ((*(20 + in) & 33554431) >> (25 - 13))
    | ((*(21 + in)) << 13);
    *(17 + out) = ((*(21 + in) & 33554431) >> (25 - 6))
    | ((*(22 + in) & 33554431) << 6)
    | ((*(23 + in)) << 31);
    *(18 + out) = ((*(23 + in) & 33554431) >> (25 - 24))
    | ((*(24 + in)) << 24);
    *(19 + out) = ((*(24 + in) & 33554431) >> (25 - 17))
    | ((*(25 + in)) << 17);
    *(20 + out) = ((*(25 + in) & 33554431) >> (25 - 10))
    | ((*(26 + in)) << 10);
    *(21 + out) = ((*(26 + in) & 33554431) >> (25 - 3))
    | ((*(27 + in) & 33554431) << 3)
    | ((*(28 + in)) << 28);
    *(22 + out) = ((*(28 + in) & 33554431) >> (25 - 21))
    | ((*(29 + in)) << 21);
    *(23 + out) = ((*(29 + in) & 33554431) >> (25 - 14))
    | ((*(30 + in)) << 14);
    *(24 + out) = ((*(30 + in) & 33554431) >> (25 - 7))
    | ((*(31 + in)) << 7);
}

void BitPacking::fastpack26(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 67108863)
    | ((*(1 + in)) << 26);
    *(1 + out) = ((*(1 + in) & 67108863) >> (26 - 20))
    | ((*(2 + in)) << 20);
    *(2 + out) = ((*(2 + in) & 67108863) >> (26 - 14))
    | ((*(3 + in)) << 14);
    *(3 + out) = ((*(3 + in) & 67108863) >> (26 - 8))
    | ((*(4 + in)) << 8);
    *(4 + out) = ((*(4 + in) & 67108863) >> (26 - 2))
    | ((*(5 + in) & 67108863) << 2)
    | ((*(6 + in)) << 28);
    *(5 + out) = ((*(6 + in) & 67108863) >> (26 - 22))
    | ((*(7 + in)) << 22);
    *(6 + out) = ((*(7 + in) & 67108863) >> (26 - 16))
    | ((*(8 + in)) << 16);
    *(7 + out) = ((*(8 + in) & 67108863) >> (26 - 10))
    | ((*(9 + in)) << 10);
    *(8 + out) = ((*(9 + in) & 67108863) >> (26 - 4))
    | ((*(10 + in) & 67108863) << 4)
    | ((*(11 + in)) << 30);
    *(9 + out) = ((*(11 + in) & 67108863) >> (26 - 24))
    | ((*(12 + in)) << 24);
    *(10 + out) = ((*(12 + in) & 67108863) >> (26 - 18))
    | ((*(13 + in)) << 18);
    *(11 + out) = ((*(13 + in) & 67108863) >> (26 - 12))
    | ((*(14 + in)) << 12);
    *(12 + out) = ((*(14 + in) & 67108863) >> (26 - 6))
    | ((*(15 + in)) << 6);
    *(13 + out) = (*(16 + in) & 67108863)
    | ((*(17 + in)) << 26);
    *(14 + out) = ((*(17 + in) & 67108863) >> (26 - 20))
    | ((*(18 + in)) << 20);
    *(15 + out) = ((*(18 + in) & 67108863) >> (26 - 14))
    | ((*(19 + in)) << 14);
    *(16 + out) = ((*(19 + in) & 67108863) >> (26 - 8))
    | ((*(20 + in)) << 8);
    *(17 + out) = ((*(20 + in) & 67108863) >> (26 - 2))
    | ((*(21 + in) & 67108863) << 2)
    | ((*(22 + in)) << 28);
    *(18 + out) = ((*(22 + in) & 67108863) >> (26 - 22))
    | ((*(23 + in)) << 22);
    *(19 + out) = ((*(23 + in) & 67108863) >> (26 - 16))
    | ((*(24 + in)) << 16);
    *(20 + out) = ((*(24 + in) & 67108863) >> (26 - 10))
    | ((*(25 + in)) << 10);
    *(21 + out) = ((*(25 + in) & 67108863) >> (26 - 4))
    | ((*(26 + in) & 67108863) << 4)
    | ((*(27 + in)) << 30);
    *(22 + out) = ((*(27 + in) & 67108863) >> (26 - 24))
    | ((*(28 + in)) << 24);
    *(23 + out) = ((*(28 + in) & 67108863) >> (26 - 18))
    | ((*(29 + in)) << 18);
    *(24 + out) = ((*(29 + in) & 67108863) >> (26 - 12))
    | ((*(30 + in)) << 12);
    *(25 + out) = ((*(30 + in) & 67108863) >> (26 - 6))
    | ((*(31 + in)) << 6);
}

void BitPacking::fastpack27(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 134217727)
    | ((*(1 + in)) << 27);
    *(1 + out) = ((*(1 + in) & 134217727) >> (27 - 22))
    | ((*(2 + in)) << 22);
    *(2 + out) = ((*(2 + in) & 134217727) >> (27 - 17))
    | ((*(3 + in)) << 17);
    *(3 + out) = ((*(3 + in) & 134217727) >> (27 - 12))
    | ((*(4 + in)) << 12);
    *(4 + out) = ((*(4 + in) & 134217727) >> (27 - 7))
    | ((*(5 + in)) << 7);
    *(5 + out) = ((*(5 + in) & 134217727) >> (27 - 2))
    | ((*(6 + in) & 134217727) << 2)
    | ((*(7 + in)) << 29);
    *(6 + out) = ((*(7 + in) & 134217727) >> (27 - 24))
    | ((*(8 + in)) << 24);
    *(7 + out) = ((*(8 + in) & 134217727) >> (27 - 19))
    | ((*(9 + in)) << 19);
    *(8 + out) = ((*(9 + in) & 134217727) >> (27 - 14))
    | ((*(10 + in)) << 14);
    *(9 + out) = ((*(10 + in) & 134217727) >> (27 - 9))
    | ((*(11 + in)) << 9);
    *(10 + out) = ((*(11 + in) & 134217727) >> (27 - 4))
    | ((*(12 + in) & 134217727) << 4)
    | ((*(13 + in)) << 31);
    *(11 + out) = ((*(13 + in) & 134217727) >> (27 - 26))
    | ((*(14 + in)) << 26);
    *(12 + out) = ((*(14 + in) & 134217727) >> (27 - 21))
    | ((*(15 + in)) << 21);
    *(13 + out) = ((*(15 + in) & 134217727) >> (27 - 16))
    | ((*(16 + in)) << 16);
    *(14 + out) = ((*(16 + in) & 134217727) >> (27 - 11))
    | ((*(17 + in)) << 11);
    *(15 + out) = ((*(17 + in) & 134217727) >> (27 - 6))
    | ((*(18 + in)) << 6);
    *(16 + out) = ((*(18 + in) & 134217727) >> (27 - 1))
    | ((*(19 + in) & 134217727) << 1)
    | ((*(20 + in)) << 28);
    *(17 + out) = ((*(20 + in) & 134217727) >> (27 - 23))
    | ((*(21 + in)) << 23);
    *(18 + out) = ((*(21 + in) & 134217727) >> (27 - 18))
    | ((*(22 + in)) << 18);
    *(19 + out) = ((*(22 + in) & 134217727) >> (27 - 13))
    | ((*(23 + in)) << 13);
    *(20 + out) = ((*(23 + in) & 134217727) >> (27 - 8))
    | ((*(24 + in)) << 8);
    *(21 + out) = ((*(24 + in) & 134217727) >> (27 - 3))
    | ((*(25 + in) & 134217727) << 3)
    | ((*(26 + in)) << 30);
    *(22 + out) = ((*(26 + in) & 134217727) >> (27 - 25))
    | ((*(27 + in)) << 25);
    *(23 + out) = ((*(27 + in) & 134217727) >> (27 - 20))
    | ((*(28 + in)) << 20);
    *(24 + out) = ((*(28 + in) & 134217727) >> (27 - 15))
    | ((*(29 + in)) << 15);
    *(25 + out) = ((*(29 + in) & 134217727) >> (27 - 10))
    | ((*(30 + in)) << 10);
    *(26 + out) = ((*(30 + in) & 134217727) >> (27 - 5))
    | ((*(31 + in)) << 5);
}

void BitPacking::fastpack28(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 268435455)
    | ((*(1 + in)) << 28);
    *(1 + out) = ((*(1 + in) & 268435455) >> (28 - 24))
    | ((*(2 + in)) << 24);
    *(2 + out) = ((*(2 + in) & 268435455) >> (28 - 20))
    | ((*(3 + in)) << 20);
    *(3 + out) = ((*(3 + in) & 268435455) >> (28 - 16))
    | ((*(4 + in)) << 16);
    *(4 + out) = ((*(4 + in) & 268435455) >> (28 - 12))
    | ((*(5 + in)) << 12);
    *(5 + out) = ((*(5 + in) & 268435455) >> (28 - 8))
    | ((*(6 + in)) << 8);
    *(6 + out) = ((*(6 + in) & 268435455) >> (28 - 4))
    | ((*(7 + in)) << 4);
    *(7 + out) = (*(8 + in) & 268435455)
    | ((*(9 + in)) << 28);
    *(8 + out) = ((*(9 + in) & 268435455) >> (28 - 24))
    | ((*(10 + in)) << 24);
    *(9 + out) = ((*(10 + in) & 268435455) >> (28 - 20))
    | ((*(11 + in)) << 20);
    *(10 + out) = ((*(11 + in) & 268435455) >> (28 - 16))
    | ((*(12 + in)) << 16);
    *(11 + out) = ((*(12 + in) & 268435455) >> (28 - 12))
    | ((*(13 + in)) << 12);
    *(12 + out) = ((*(13 + in) & 268435455) >> (28 - 8))
    | ((*(14 + in)) << 8);
    *(13 + out) = ((*(14 + in) & 268435455) >> (28 - 4))
    | ((*(15 + in)) << 4);
    *(14 + out) = (*(16 + in) & 268435455)
    | ((*(17 + in)) << 28);
    *(15 + out) = ((*(17 + in) & 268435455) >> (28 - 24))
    | ((*(18 + in)) << 24);
    *(16 + out) = ((*(18 + in) & 268435455) >> (28 - 20))
    | ((*(19 + in)) << 20);
    *(17 + out) = ((*(19 + in) & 268435455) >> (28 - 16))
    | ((*(20 + in)) << 16);
    *(18 + out) = ((*(20 + in) & 268435455) >> (28 - 12))
    | ((*(21 + in)) << 12);
    *(19 + out) = ((*(21 + in) & 268435455) >> (28 - 8))
    | ((*(22 + in)) << 8);
    *(20 + out) = ((*(22 + in) & 268435455) >> (28 - 4))
    | ((*(23 + in)) << 4);
    *(21 + out) = (*(24 + in) & 268435455)
    | ((*(25 + in)) << 28);
    *(22 + out) = ((*(25 + in) & 268435455) >> (28 - 24))
    | ((*(26 + in)) << 24);
    *(23 + out) = ((*(26 + in) & 268435455) >> (28 - 20))
    | ((*(27 + in)) << 20);
    *(24 + out) = ((*(27 + in) & 268435455) >> (28 - 16))
    | ((*(28 + in)) << 16);
    *(25 + out) = ((*(28 + in) & 268435455) >> (28 - 12))
    | ((*(29 + in)) << 12);
    *(26 + out) = ((*(29 + in) & 268435455) >> (28 - 8))
    | ((*(30 + in)) << 8);
    *(27 + out) = ((*(30 + in) & 268435455) >> (28 - 4))
    | ((*(31 + in)) << 4);
}

void BitPacking::fastpack29(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 536870911)
    | ((*(1 + in)) << 29);
    *(1 + out) = ((*(1 + in) & 536870911) >> (29 - 26))
    | ((*(2 + in)) << 26);
    *(2 + out) = ((*(2 + in) & 536870911) >> (29 - 23))
    | ((*(3 + in)) << 23);
    *(3 + out) = ((*(3 + in) & 536870911) >> (29 - 20))
    | ((*(4 + in)) << 20);
    *(4 + out) = ((*(4 + in) & 536870911) >> (29 - 17))
    | ((*(5 + in)) << 17);
    *(5 + out) = ((*(5 + in) & 536870911) >> (29 - 14))
    | ((*(6 + in)) << 14);
    *(6 + out) = ((*(6 + in) & 536870911) >> (29 - 11))
    | ((*(7 + in)) << 11);
    *(7 + out) = ((*(7 + in) & 536870911) >> (29 - 8))
    | ((*(8 + in)) << 8);
    *(8 + out) = ((*(8 + in) & 536870911) >> (29 - 5))
    | ((*(9 + in)) << 5);
    *(9 + out) = ((*(9 + in) & 536870911) >> (29 - 2))
    | ((*(10 + in) & 536870911) << 2)
    | ((*(11 + in)) << 31);
    *(10 + out) = ((*(11 + in) & 536870911) >> (29 - 28))
    | ((*(12 + in)) << 28);
    *(11 + out) = ((*(12 + in) & 536870911) >> (29 - 25))
    | ((*(13 + in)) << 25);
    *(12 + out) = ((*(13 + in) & 536870911) >> (29 - 22))
    | ((*(14 + in)) << 22);
    *(13 + out) = ((*(14 + in) & 536870911) >> (29 - 19))
    | ((*(15 + in)) << 19);
    *(14 + out) = ((*(15 + in) & 536870911) >> (29 - 16))
    | ((*(16 + in)) << 16);
    *(15 + out) = ((*(16 + in) & 536870911) >> (29 - 13))
    | ((*(17 + in)) << 13);
    *(16 + out) = ((*(17 + in) & 536870911) >> (29 - 10))
    | ((*(18 + in)) << 10);
    *(17 + out) = ((*(18 + in) & 536870911) >> (29 - 7))
    | ((*(19 + in)) << 7);
    *(18 + out) = ((*(19 + in) & 536870911) >> (29 - 4))
    | ((*(20 + in)) << 4);
    *(19 + out) = ((*(20 + in) & 536870911) >> (29 - 1))
    | ((*(21 + in) & 536870911) << 1)
    | ((*(22 + in)) << 30);
    *(20 + out) = ((*(22 + in) & 536870911) >> (29 - 27))
    | ((*(23 + in)) << 27);
    *(21 + out) = ((*(23 + in) & 536870911) >> (29 - 24))
    | ((*(24 + in)) << 24);
    *(22 + out) = ((*(24 + in) & 536870911) >> (29 - 21))
    | ((*(25 + in)) << 21);
    *(23 + out) = ((*(25 + in) & 536870911) >> (29 - 18))
    | ((*(26 + in)) << 18);
    *(24 + out) = ((*(26 + in) & 536870911) >> (29 - 15))
    | ((*(27 + in)) << 15);
    *(25 + out) = ((*(27 + in) & 536870911) >> (29 - 12))
    | ((*(28 + in)) << 12);
    *(26 + out) = ((*(28 + in) & 536870911) >> (29 - 9))
    | ((*(29 + in)) << 9);
    *(27 + out) = ((*(29 + in) & 536870911) >> (29 - 6))
    | ((*(30 + in)) << 6);
    *(28 + out) = ((*(30 + in) & 536870911) >> (29 - 3))
    | ((*(31 + in)) << 3);
}

void BitPacking::fastpack3(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 7)
    | ((*(1 + in) & 7) << 3)
    | ((*(2 + in) & 7) << 6)
    | ((*(3 + in) & 7) << 9)
    | ((*(4 + in) & 7) << 12)
    | ((*(5 + in) & 7) << 15)
    | ((*(6 + in) & 7) << 18)
    | ((*(7 + in) & 7) << 21)
    | ((*(8 + in) & 7) << 24)
    | ((*(9 + in) & 7) << 27)
    | ((*(10 + in)) << 30);
    *(1 + out) = ((*(10 + in) & 7) >> (3 - 1))
    | ((*(11 + in) & 7) << 1)
    | ((*(12 + in) & 7) << 4)
    | ((*(13 + in) & 7) << 7)
    | ((*(14 + in) & 7) << 10)
    | ((*(15 + in) & 7) << 13)
    | ((*(16 + in) & 7) << 16)
    | ((*(17 + in) & 7) << 19)
    | ((*(18 + in) & 7) << 22)
    | ((*(19 + in) & 7) << 25)
    | ((*(20 + in) & 7) << 28)
    | ((*(21 + in)) << 31);
    *(2 + out) = ((*(21 + in) & 7) >> (3 - 2))
    | ((*(22 + in) & 7) << 2)
    | ((*(23 + in) & 7) << 5)
    | ((*(24 + in) & 7) << 8)
    | ((*(25 + in) & 7) << 11)
    | ((*(26 + in) & 7) << 14)
    | ((*(27 + in) & 7) << 17)
    | ((*(28 + in) & 7) << 20)
    | ((*(29 + in) & 7) << 23)
    | ((*(30 + in) & 7) << 26)
    | ((*(31 + in)) << 29);
}

void BitPacking::fastpack30(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 1073741823)
    | ((*(1 + in)) << 30);
    *(1 + out) = ((*(1 + in) & 1073741823) >> (30 - 28))
    | ((*(2 + in)) << 28);
    *(2 + out) = ((*(2 + in) & 1073741823) >> (30 - 26))
    | ((*(3 + in)) << 26);
    *(3 + out) = ((*(3 + in) & 1073741823) >> (30 - 24))
    | ((*(4 + in)) << 24);
    *(4 + out) = ((*(4 + in) & 1073741823) >> (30 - 22))
    | ((*(5 + in)) << 22);
    *(5 + out) = ((*(5 + in) & 1073741823) >> (30 - 20))
    | ((*(6 + in)) << 20);
    *(6 + out) = ((*(6 + in) & 1073741823) >> (30 - 18))
    | ((*(7 + in)) << 18);
    *(7 + out) = ((*(7 + in) & 1073741823) >> (30 - 16))
    | ((*(8 + in)) << 16);
    *(8 + out) = ((*(8 + in) & 1073741823) >> (30 - 14))
    | ((*(9 + in)) << 14);
    *(9 + out) = ((*(9 + in) & 1073741823) >> (30 - 12))
    | ((*(10 + in)) << 12);
    *(10 + out) = ((*(10 + in) & 1073741823) >> (30 - 10))
    | ((*(11 + in)) << 10);
    *(11 + out) = ((*(11 + in) & 1073741823) >> (30 - 8))
    | ((*(12 + in)) << 8);
    *(12 + out) = ((*(12 + in) & 1073741823) >> (30 - 6))
    | ((*(13 + in)) << 6);
    *(13 + out) = ((*(13 + in) & 1073741823) >> (30 - 4))
    | ((*(14 + in)) << 4);
    *(14 + out) = ((*(14 + in) & 1073741823) >> (30 - 2))
    | ((*(15 + in)) << 2);
    *(15 + out) = (*(16 + in) & 1073741823)
    | ((*(17 + in)) << 30);
    *(16 + out) = ((*(17 + in) & 1073741823) >> (30 - 28))
    | ((*(18 + in)) << 28);
    *(17 + out) = ((*(18 + in) & 1073741823) >> (30 - 26))
    | ((*(19 + in)) << 26);
    *(18 + out) = ((*(19 + in) & 1073741823) >> (30 - 24))
    | ((*(20 + in)) << 24);
    *(19 + out) = ((*(20 + in) & 1073741823) >> (30 - 22))
    | ((*(21 + in)) << 22);
    *(20 + out) = ((*(21 + in) & 1073741823) >> (30 - 20))
    | ((*(22 + in)) << 20);
    *(21 + out) = ((*(22 + in) & 1073741823) >> (30 - 18))
    | ((*(23 + in)) << 18);
    *(22 + out) = ((*(23 + in) & 1073741823) >> (30 - 16))
    | ((*(24 + in)) << 16);
    *(23 + out) = ((*(24 + in) & 1073741823) >> (30 - 14))
    | ((*(25 + in)) << 14);
    *(24 + out) = ((*(25 + in) & 1073741823) >> (30 - 12))
    | ((*(26 + in)) << 12);
    *(25 + out) = ((*(26 + in) & 1073741823) >> (30 - 10))
    | ((*(27 + in)) << 10);
    *(26 + out) = ((*(27 + in) & 1073741823) >> (30 - 8))
    | ((*(28 + in)) << 8);
    *(27 + out) = ((*(28 + in) & 1073741823) >> (30 - 6))
    | ((*(29 + in)) << 6);
    *(28 + out) = ((*(29 + in) & 1073741823) >> (30 - 4))
    | ((*(30 + in)) << 4);
    *(29 + out) = ((*(30 + in) & 1073741823) >> (30 - 2))
    | ((*(31 + in)) << 2);
}

void BitPacking::fastpack31(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 2147483647)
    | ((*(1 + in)) << 31);
    *(1 + out) = ((*(1 + in) & 2147483647) >> (31 - 30))
    | ((*(2 + in)) << 30);
    *(2 + out) = ((*(2 + in) & 2147483647) >> (31 - 29))
    | ((*(3 + in)) << 29);
    *(3 + out) = ((*(3 + in) & 2147483647) >> (31 - 28))
    | ((*(4 + in)) << 28);
    *(4 + out) = ((*(4 + in) & 2147483647) >> (31 - 27))
    | ((*(5 + in)) << 27);
    *(5 + out) = ((*(5 + in) & 2147483647) >> (31 - 26))
    | ((*(6 + in)) << 26);
    *(6 + out) = ((*(6 + in) & 2147483647) >> (31 - 25))
    | ((*(7 + in)) << 25);
    *(7 + out) = ((*(7 + in) & 2147483647) >> (31 - 24))
    | ((*(8 + in)) << 24);
    *(8 + out) = ((*(8 + in) & 2147483647) >> (31 - 23))
    | ((*(9 + in)) << 23);
    *(9 + out) = ((*(9 + in) & 2147483647) >> (31 - 22))
    | ((*(10 + in)) << 22);
    *(10 + out) = ((*(10 + in) & 2147483647) >> (31 - 21))
    | ((*(11 + in)) << 21);
    *(11 + out) = ((*(11 + in) & 2147483647) >> (31 - 20))
    | ((*(12 + in)) << 20);
    *(12 + out) = ((*(12 + in) & 2147483647) >> (31 - 19))
    | ((*(13 + in)) << 19);
    *(13 + out) = ((*(13 + in) & 2147483647) >> (31 - 18))
    | ((*(14 + in)) << 18);
    *(14 + out) = ((*(14 + in) & 2147483647) >> (31 - 17))
    | ((*(15 + in)) << 17);
    *(15 + out) = ((*(15 + in) & 2147483647) >> (31 - 16))
    | ((*(16 + in)) << 16);
    *(16 + out) = ((*(16 + in) & 2147483647) >> (31 - 15))
    | ((*(17 + in)) << 15);
    *(17 + out) = ((*(17 + in) & 2147483647) >> (31 - 14))
    | ((*(18 + in)) << 14);
    *(18 + out) = ((*(18 + in) & 2147483647) >> (31 - 13))
    | ((*(19 + in)) << 13);
    *(19 + out) = ((*(19 + in) & 2147483647) >> (31 - 12))
    | ((*(20 + in)) << 12);
    *(20 + out) = ((*(20 + in) & 2147483647) >> (31 - 11))
    | ((*(21 + in)) << 11);
    *(21 + out) = ((*(21 + in) & 2147483647) >> (31 - 10))
    | ((*(22 + in)) << 10);
    *(22 + out) = ((*(22 + in) & 2147483647) >> (31 - 9))
    | ((*(23 + in)) << 9);
    *(23 + out) = ((*(23 + in) & 2147483647) >> (31 - 8))
    | ((*(24 + in)) << 8);
    *(24 + out) = ((*(24 + in) & 2147483647) >> (31 - 7))
    | ((*(25 + in)) << 7);
    *(25 + out) = ((*(25 + in) & 2147483647) >> (31 - 6))
    | ((*(26 + in)) << 6);
    *(26 + out) = ((*(26 + in) & 2147483647) >> (31 - 5))
    | ((*(27 + in)) << 5);
    *(27 + out) = ((*(27 + in) & 2147483647) >> (31 - 4))
    | ((*(28 + in)) << 4);
    *(28 + out) = ((*(28 + in) & 2147483647) >> (31 - 3))
    | ((*(29 + in)) << 3);
    *(29 + out) = ((*(29 + in) & 2147483647) >> (31 - 2))
    | ((*(30 + in)) << 2);
    *(30 + out) = ((*(30 + in) & 2147483647) >> (31 - 1))
    | ((*(31 + in)) << 1);
}

void BitPacking::fastpack32(const unsigned int* in, unsigned int* out) {
    //std::memcpy(out, in , 32);
    for(int i =0; i< 32; i++)
        out[i] = in[i];
}

void BitPacking::fastpack4(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 15)
    | ((*(1 + in) & 15) << 4)
    | ((*(2 + in) & 15) << 8)
    | ((*(3 + in) & 15) << 12)
    | ((*(4 + in) & 15) << 16)
    | ((*(5 + in) & 15) << 20)
    | ((*(6 + in) & 15) << 24)
    | ((*(7 + in)) << 28);
    *(1 + out) = (*(8 + in) & 15)
    | ((*(9 + in) & 15) << 4)
    | ((*(10 + in) & 15) << 8)
    | ((*(11 + in) & 15) << 12)
    | ((*(12 + in) & 15) << 16)
    | ((*(13 + in) & 15) << 20)
    | ((*(14 + in) & 15) << 24)
    | ((*(15 + in)) << 28);
    *(2 + out) = (*(16 + in) & 15)
    | ((*(17 + in) & 15) << 4)
    | ((*(18 + in) & 15) << 8)
    | ((*(19 + in) & 15) << 12)
    | ((*(20 + in) & 15) << 16)
    | ((*(21 + in) & 15) << 20)
    | ((*(22 + in) & 15) << 24)
    | ((*(23 + in)) << 28);
    *(3 + out) = (*(24 + in) & 15)
    | ((*(25 + in) & 15) << 4)
    | ((*(26 + in) & 15) << 8)
    | ((*(27 + in) & 15) << 12)
    | ((*(28 + in) & 15) << 16)
    | ((*(29 + in) & 15) << 20)
    | ((*(30 + in) & 15) << 24)
    | ((*(31 + in)) << 28);
}

void BitPacking::fastpack5(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 31)
    | ((*(1 + in) & 31) << 5)
    | ((*(2 + in) & 31) << 10)
    | ((*(3 + in) & 31) << 15)
    | ((*(4 + in) & 31) << 20)
    | ((*(5 + in) & 31) << 25)
    | ((*(6 + in)) << 30);
    *(1 + out) = ((*(6 + in) & 31) >> (5 - 3))
    | ((*(7 + in) & 31) << 3)
    | ((*(8 + in) & 31) << 8)
    | ((*(9 + in) & 31) << 13)
    | ((*(10 + in) & 31) << 18)
    | ((*(11 + in) & 31) << 23)
    | ((*(12 + in)) << 28);
    *(2 + out) = ((*(12 + in) & 31) >> (5 - 1))
    | ((*(13 + in) & 31) << 1)
    | ((*(14 + in) & 31) << 6)
    | ((*(15 + in) & 31) << 11)
    | ((*(16 + in) & 31) << 16)
    | ((*(17 + in) & 31) << 21)
    | ((*(18 + in) & 31) << 26)
    | ((*(19 + in)) << 31);
    *(3 + out) = ((*(19 + in) & 31) >> (5 - 4))
    | ((*(20 + in) & 31) << 4)
    | ((*(21 + in) & 31) << 9)
    | ((*(22 + in) & 31) << 14)
    | ((*(23 + in) & 31) << 19)
    | ((*(24 + in) & 31) << 24)
    | ((*(25 + in)) << 29);
    *(4 + out) = ((*(25 + in) & 31) >> (5 - 2))
    | ((*(26 + in) & 31) << 2)
    | ((*(27 + in) & 31) << 7)
    | ((*(28 + in) & 31) << 12)
    | ((*(29 + in) & 31) << 17)
    | ((*(30 + in) & 31) << 22)
    | ((*(31 + in)) << 27);
}

void BitPacking::fastpack6(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 63)
    | ((*(1 + in) & 63) << 6)
    | ((*(2 + in) & 63) << 12)
    | ((*(3 + in) & 63) << 18)
    | ((*(4 + in) & 63) << 24)
    | ((*(5 + in)) << 30);
    *(1 + out) = ((*(5 + in) & 63) >> (6 - 4))
    | ((*(6 + in) & 63) << 4)
    | ((*(7 + in) & 63) << 10)
    | ((*(8 + in) & 63) << 16)
    | ((*(9 + in) & 63) << 22)
    | ((*(10 + in)) << 28);
    *(2 + out) = ((*(10 + in) & 63) >> (6 - 2))
    | ((*(11 + in) & 63) << 2)
    | ((*(12 + in) & 63) << 8)
    | ((*(13 + in) & 63) << 14)
    | ((*(14 + in) & 63) << 20)
    | ((*(15 + in)) << 26);
    *(3 + out) = (*(16 + in) & 63)
    | ((*(17 + in) & 63) << 6)
    | ((*(18 + in) & 63) << 12)
    | ((*(19 + in) & 63) << 18)
    | ((*(20 + in) & 63) << 24)
    | ((*(21 + in)) << 30);
    *(4 + out) = ((*(21 + in) & 63) >> (6 - 4))
    | ((*(22 + in) & 63) << 4)
    | ((*(23 + in) & 63) << 10)
    | ((*(24 + in) & 63) << 16)
    | ((*(25 + in) & 63) << 22)
    | ((*(26 + in)) << 28);
    *(5 + out) = ((*(26 + in) & 63) >> (6 - 2))
    | ((*(27 + in) & 63) << 2)
    | ((*(28 + in) & 63) << 8)
    | ((*(29 + in) & 63) << 14)
    | ((*(30 + in) & 63) << 20)
    | ((*(31 + in)) << 26);
}

void BitPacking::fastpack7(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 127)
    | ((*(1 + in) & 127) << 7)
    | ((*(2 + in) & 127) << 14)
    | ((*(3 + in) & 127) << 21)
    | ((*(4 + in)) << 28);
    *(1 + out) = ((*(4 + in) & 127) >> (7 - 3))
    | ((*(5 + in) & 127) << 3)
    | ((*(6 + in) & 127) << 10)
    | ((*(7 + in) & 127) << 17)
    | ((*(8 + in) & 127) << 24)
    | ((*(9 + in)) << 31);
    *(2 + out) = ((*(9 + in) & 127) >> (7 - 6))
    | ((*(10 + in) & 127) << 6)
    | ((*(11 + in) & 127) << 13)
    | ((*(12 + in) & 127) << 20)
    | ((*(13 + in)) << 27);
    *(3 + out) = ((*(13 + in) & 127) >> (7 - 2))
    | ((*(14 + in) & 127) << 2)
    | ((*(15 + in) & 127) << 9)
    | ((*(16 + in) & 127) << 16)
    | ((*(17 + in) & 127) << 23)
    | ((*(18 + in)) << 30);
    *(4 + out) = ((*(18 + in) & 127) >> (7 - 5))
    | ((*(19 + in) & 127) << 5)
    | ((*(20 + in) & 127) << 12)
    | ((*(21 + in) & 127) << 19)
    | ((*(22 + in)) << 26);
    *(5 + out) = ((*(22 + in) & 127) >> (7 - 1))
    | ((*(23 + in) & 127) << 1)
    | ((*(24 + in) & 127) << 8)
    | ((*(25 + in) & 127) << 15)
    | ((*(26 + in) & 127) << 22)
    | ((*(27 + in)) << 29);
    *(6 + out) = ((*(27 + in) & 127) >> (7 - 4))
    | ((*(28 + in) & 127) << 4)
    | ((*(29 + in) & 127) << 11)
    | ((*(30 + in) & 127) << 18)
    | ((*(31 + in)) << 25);
}

void BitPacking::fastpack8(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 255)
    | ((*(1 + in) & 255) << 8)
    | ((*(2 + in) & 255) << 16)
    | ((*(3 + in)) << 24);
    *(1 + out) = (*(4 + in) & 255)
    | ((*(5 + in) & 255) << 8)
    | ((*(6 + in) & 255) << 16)
    | ((*(7 + in)) << 24);
    *(2 + out) = (*(8 + in) & 255)
    | ((*(9 + in) & 255) << 8)
    | ((*(10 + in) & 255) << 16)
    | ((*(11 + in)) << 24);
    *(3 + out) = (*(12 + in) & 255)
    | ((*(13 + in) & 255) << 8)
    | ((*(14 + in) & 255) << 16)
    | ((*(15 + in)) << 24);
    *(4 + out) = (*(16 + in) & 255)
    | ((*(17 + in) & 255) << 8)
    | ((*(18 + in) & 255) << 16)
    | ((*(19 + in)) << 24);
    *(5 + out) = (*(20 + in) & 255)
    | ((*(21 + in) & 255) << 8)
    | ((*(22 + in) & 255) << 16)
    | ((*(23 + in)) << 24);
    *(6 + out) = (*(24 + in) & 255)
    | ((*(25 + in) & 255) << 8)
    | ((*(26 + in) & 255) << 16)
    | ((*(27 + in)) << 24);
    *(7 + out) = (*(28 + in) & 255)
    | ((*(29 + in) & 255) << 8)
    | ((*(30 + in) & 255) << 16)
    | ((*(31 + in)) << 24);
}

void BitPacking::fastpack9(const unsigned int* in, unsigned int* out) {
    *(0 + out) = (*(0 + in) & 511)
    | ((*(1 + in) & 511) << 9)
    | ((*(2 + in) & 511) << 18)
    | ((*(3 + in)) << 27);
    *(1 + out) = ((*(3 + in) & 511) >> (9 - 4))
    | ((*(4 + in) & 511) << 4)
    | ((*(5 + in) & 511) << 13)
    | ((*(6 + in) & 511) << 22)
    | ((*(7 + in)) << 31);
    *(2 + out) = ((*(7 + in) & 511) >> (9 - 8))
    | ((*(8 + in) & 511) << 8)
    | ((*(9 + in) & 511) << 17)
    | ((*(10 + in)) << 26);
    *(3 + out) = ((*(10 + in) & 511) >> (9 - 3))
    | ((*(11 + in) & 511) << 3)
    | ((*(12 + in) & 511) << 12)
    | ((*(13 + in) & 511) << 21)
    | ((*(14 + in)) << 30);
    *(4 + out) = ((*(14 + in) & 511) >> (9 - 7))
    | ((*(15 + in) & 511) << 7)
    | ((*(16 + in) & 511) << 16)
    | ((*(17 + in)) << 25);
    *(5 + out) = ((*(17 + in) & 511) >> (9 - 2))
    | ((*(18 + in) & 511) << 2)
    | ((*(19 + in) & 511) << 11)
    | ((*(20 + in) & 511) << 20)
    | ((*(21 + in)) << 29);
    *(6 + out) = ((*(21 + in) & 511) >> (9 - 6))
    | ((*(22 + in) & 511) << 6)
    | ((*(23 + in) & 511) << 15)
    | ((*(24 + in)) << 24);
    *(7 + out) = ((*(24 + in) & 511) >> (9 - 1))
    | ((*(25 + in) & 511) << 1)
    | ((*(26 + in) & 511) << 10)
    | ((*(27 + in) & 511) << 19)
    | ((*(28 + in)) << 28);
    *(8 + out) = ((*(28 + in) & 511) >> (9 - 5))
    | ((*(29 + in) & 511) << 5)
    | ((*(30 + in) & 511) << 14)
    | ((*(31 + in)) << 23);
}



void BitPacking::fastpackwithoutmask0(const unsigned int* in, unsigned int* out) {
    // nothing
}

void BitPacking::fastpackwithoutmask1(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 1)
    | ((*(2 + in)) << 2) | ((*(3 + in)) << 3)
    | ((*(4 + in)) << 4) | ((*(5 + in)) << 5)
    | ((*(6 + in)) << 6) | ((*(7 + in)) << 7)
    | ((*(8 + in)) << 8) | ((*(9 + in)) << 9)
    | ((*(10 + in)) << 10) | ((*(11 + in)) << 11)
    | ((*(12 + in)) << 12) | ((*(13 + in)) << 13)
    | ((*(14 + in)) << 14) | ((*(15 + in)) << 15)
    | ((*(16 + in)) << 16) | ((*(17 + in)) << 17)
    | ((*(18 + in)) << 18) | ((*(19 + in)) << 19)
    | ((*(20 + in)) << 20) | ((*(21 + in)) << 21)
    | ((*(22 + in)) << 22) | ((*(23 + in)) << 23)
    | ((*(24 + in)) << 24) | ((*(25 + in)) << 25)
    | ((*(26 + in)) << 26) | ((*(27 + in)) << 27)
    | ((*(28 + in)) << 28) | ((*(29 + in)) << 29)
    | ((*(30 + in)) << 30) | ((*(31 + in)) << 31);
}

void BitPacking::fastpackwithoutmask10(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 10)
    | ((*(2 + in)) << 20) | ((*(3 + in)) << 30);
    *(1 + out) = ((*(3 + in)) >> (10 - 8))
    | ((*(4 + in)) << 8) | ((*(5 + in)) << 18)
    | ((*(6 + in)) << 28);
    *(2 + out) = ((*(6 + in)) >> (10 - 6))
    | ((*(7 + in)) << 6) | ((*(8 + in)) << 16)
    | ((*(9 + in)) << 26);
    *(3 + out) = ((*(9 + in)) >> (10 - 4))
    | ((*(10 + in)) << 4) | ((*(11 + in)) << 14)
    | ((*(12 + in)) << 24);
    *(4 + out) = ((*(12 + in)) >> (10 - 2))
    | ((*(13 + in)) << 2) | ((*(14 + in)) << 12)
    | ((*(15 + in)) << 22);
    *(5 + out) = *(16 + in) | ((*(17 + in)) << 10)
    | ((*(18 + in)) << 20) | ((*(19 + in)) << 30);
    *(6 + out) = ((*(19 + in)) >> (10 - 8))
    | ((*(20 + in)) << 8) | ((*(21 + in)) << 18)
    | ((*(22 + in)) << 28);
    *(7 + out) = ((*(22 + in)) >> (10 - 6))
    | ((*(23 + in)) << 6) | ((*(24 + in)) << 16)
    | ((*(25 + in)) << 26);
    *(8 + out) = ((*(25 + in)) >> (10 - 4))
    | ((*(26 + in)) << 4) | ((*(27 + in)) << 14)
    | ((*(28 + in)) << 24);
    *(9 + out) = ((*(28 + in)) >> (10 - 2))
    | ((*(29 + in)) << 2) | ((*(30 + in)) << 12)
    | ((*(31 + in)) << 22);
}

void BitPacking::fastpackwithoutmask11(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 11)
    | ((*(2 + in)) << 22);
    *(1 + out) = ((*(2 + in)) >> (11 - 1))
    | ((*(3 + in)) << 1) | ((*(4 + in)) << 12)
    | ((*(5 + in)) << 23);
    *(2 + out) = ((*(5 + in)) >> (11 - 2))
    | ((*(6 + in)) << 2) | ((*(7 + in)) << 13)
    | ((*(8 + in)) << 24);
    *(3 + out) = ((*(8 + in)) >> (11 - 3))
    | ((*(9 + in)) << 3) | ((*(10 + in)) << 14)
    | ((*(11 + in)) << 25);
    *(4 + out) = ((*(11 + in)) >> (11 - 4))
    | ((*(12 + in)) << 4) | ((*(13 + in)) << 15)
    | ((*(14 + in)) << 26);
    *(5 + out) = ((*(14 + in)) >> (11 - 5))
    | ((*(15 + in)) << 5) | ((*(16 + in)) << 16)
    | ((*(17 + in)) << 27);
    *(6 + out) = ((*(17 + in)) >> (11 - 6))
    | ((*(18 + in)) << 6) | ((*(19 + in)) << 17)
    | ((*(20 + in)) << 28);
    *(7 + out) = ((*(20 + in)) >> (11 - 7))
    | ((*(21 + in)) << 7) | ((*(22 + in)) << 18)
    | ((*(23 + in)) << 29);
    *(8 + out) = ((*(23 + in)) >> (11 - 8))
    | ((*(24 + in)) << 8) | ((*(25 + in)) << 19)
    | ((*(26 + in)) << 30);
    *(9 + out) = ((*(26 + in)) >> (11 - 9))
    | ((*(27 + in)) << 9) | ((*(28 + in)) << 20)
    | ((*(29 + in)) << 31);
    *(10 + out) = ((*(29 + in)) >> (11 - 10))
    | ((*(30 + in)) << 10) | ((*(31 + in)) << 21);
}

void BitPacking::fastpackwithoutmask12(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 12)
    | ((*(2 + in)) << 24);
    *(1 + out) = ((*(2 + in)) >> (12 - 4))
    | ((*(3 + in)) << 4) | ((*(4 + in)) << 16)
    | ((*(5 + in)) << 28);
    *(2 + out) = ((*(5 + in)) >> (12 - 8))
    | ((*(6 + in)) << 8) | ((*(7 + in)) << 20);
    *(3 + out) = *(8 + in) | ((*(9 + in)) << 12)
    | ((*(10 + in)) << 24);
    *(4 + out) = ((*(10 + in)) >> (12 - 4))
    | ((*(11 + in)) << 4) | ((*(12 + in)) << 16)
    | ((*(13 + in)) << 28);
    *(5 + out) = ((*(13 + in)) >> (12 - 8))
    | ((*(14 + in)) << 8) | ((*(15 + in)) << 20);
    *(6 + out) = *(16 + in) | ((*(17 + in)) << 12)
    | ((*(18 + in)) << 24);
    *(7 + out) = ((*(18 + in)) >> (12 - 4))
    | ((*(19 + in)) << 4) | ((*(20 + in)) << 16)
    | ((*(21 + in)) << 28);
    *(8 + out) = ((*(21 + in)) >> (12 - 8))
    | ((*(22 + in)) << 8) | ((*(23 + in)) << 20);
    *(9 + out) = *(24 + in) | ((*(25 + in)) << 12)
    | ((*(26 + in)) << 24);
    *(10 + out) = ((*(26 + in)) >> (12 - 4))
    | ((*(27 + in)) << 4) | ((*(28 + in)) << 16)
    | ((*(29 + in)) << 28);
    *(11 + out) = ((*(29 + in)) >> (12 - 8))
    | ((*(30 + in)) << 8) | ((*(31 + in)) << 20);
}

void BitPacking::fastpackwithoutmask13(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 13)
    | ((*(2 + in)) << 26);
    *(1 + out) = ((*(2 + in)) >> (13 - 7))
    | ((*(3 + in)) << 7) | ((*(4 + in)) << 20);
    *(2 + out) = ((*(4 + in)) >> (13 - 1))
    | ((*(5 + in)) << 1) | ((*(6 + in)) << 14)
    | ((*(7 + in)) << 27);
    *(3 + out) = ((*(7 + in)) >> (13 - 8))
    | ((*(8 + in)) << 8) | ((*(9 + in)) << 21);
    *(4 + out) = ((*(9 + in)) >> (13 - 2))
    | ((*(10 + in)) << 2) | ((*(11 + in)) << 15)
    | ((*(12 + in)) << 28);
    *(5 + out) = ((*(12 + in)) >> (13 - 9))
    | ((*(13 + in)) << 9) | ((*(14 + in)) << 22);
    *(6 + out) = ((*(14 + in)) >> (13 - 3))
    | ((*(15 + in)) << 3) | ((*(16 + in)) << 16)
    | ((*(17 + in)) << 29);
    *(7 + out) = ((*(17 + in)) >> (13 - 10))
    | ((*(18 + in)) << 10) | ((*(19 + in)) << 23);
    *(8 + out) = ((*(19 + in)) >> (13 - 4))
    | ((*(20 + in)) << 4) | ((*(21 + in)) << 17)
    | ((*(22 + in)) << 30);
    *(9 + out) = ((*(22 + in)) >> (13 - 11))
    | ((*(23 + in)) << 11) | ((*(24 + in)) << 24);
    *(10 + out) = ((*(24 + in)) >> (13 - 5))
    | ((*(25 + in)) << 5) | ((*(26 + in)) << 18)
    | ((*(27 + in)) << 31);
    *(11 + out) = ((*(27 + in)) >> (13 - 12))
    | ((*(28 + in)) << 12) | ((*(29 + in)) << 25);
    *(12 + out) = ((*(29 + in)) >> (13 - 6))
    | ((*(30 + in)) << 6) | ((*(31 + in)) << 19);
}

void BitPacking::fastpackwithoutmask14(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 14)
    | ((*(2 + in)) << 28);
    *(1 + out) = ((*(2 + in)) >> (14 - 10))
    | ((*(3 + in)) << 10) | ((*(4 + in)) << 24);
    *(2 + out) = ((*(4 + in)) >> (14 - 6))
    | ((*(5 + in)) << 6) | ((*(6 + in)) << 20);
    *(3 + out) = ((*(6 + in)) >> (14 - 2))
    | ((*(7 + in)) << 2) | ((*(8 + in)) << 16)
    | ((*(9 + in)) << 30);
    *(4 + out) = ((*(9 + in)) >> (14 - 12))
    | ((*(10 + in)) << 12) | ((*(11 + in)) << 26);
    *(5 + out) = ((*(11 + in)) >> (14 - 8))
    | ((*(12 + in)) << 8) | ((*(13 + in)) << 22);
    *(6 + out) = ((*(13 + in)) >> (14 - 4))
    | ((*(14 + in)) << 4) | ((*(15 + in)) << 18);
    *(7 + out) = *(16 + in) | ((*(17 + in)) << 14)
    | ((*(18 + in)) << 28);
    *(8 + out) = ((*(18 + in)) >> (14 - 10))
    | ((*(19 + in)) << 10) | ((*(20 + in)) << 24);
    *(9 + out) = ((*(20 + in)) >> (14 - 6))
    | ((*(21 + in)) << 6) | ((*(22 + in)) << 20);
    *(10 + out) = ((*(22 + in)) >> (14 - 2))
    | ((*(23 + in)) << 2) | ((*(24 + in)) << 16)
    | ((*(25 + in)) << 30);
    *(11 + out) = ((*(25 + in)) >> (14 - 12))
    | ((*(26 + in)) << 12) | ((*(27 + in)) << 26);
    *(12 + out) = ((*(27 + in)) >> (14 - 8))
    | ((*(28 + in)) << 8) | ((*(29 + in)) << 22);
    *(13 + out) = ((*(29 + in)) >> (14 - 4))
    | ((*(30 + in)) << 4) | ((*(31 + in)) << 18);
}

void BitPacking::fastpackwithoutmask15(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 15)
    | ((*(2 + in)) << 30);
    *(1 + out) = ((*(2 + in)) >> (15 - 13))
    | ((*(3 + in)) << 13) | ((*(4 + in)) << 28);
    *(2 + out) = ((*(4 + in)) >> (15 - 11))
    | ((*(5 + in)) << 11) | ((*(6 + in)) << 26);
    *(3 + out) = ((*(6 + in)) >> (15 - 9))
    | ((*(7 + in)) << 9) | ((*(8 + in)) << 24);
    *(4 + out) = ((*(8 + in)) >> (15 - 7))
    | ((*(9 + in)) << 7) | ((*(10 + in)) << 22);
    *(5 + out) = ((*(10 + in)) >> (15 - 5))
    | ((*(11 + in)) << 5) | ((*(12 + in)) << 20);
    *(6 + out) = ((*(12 + in)) >> (15 - 3))
    | ((*(13 + in)) << 3) | ((*(14 + in)) << 18);
    *(7 + out) = ((*(14 + in)) >> (15 - 1))
    | ((*(15 + in)) << 1) | ((*(16 + in)) << 16)
    | ((*(17 + in)) << 31);
    *(8 + out) = ((*(17 + in)) >> (15 - 14))
    | ((*(18 + in)) << 14) | ((*(19 + in)) << 29);
    *(9 + out) = ((*(19 + in)) >> (15 - 12))
    | ((*(20 + in)) << 12) | ((*(21 + in)) << 27);
    *(10 + out) = ((*(21 + in)) >> (15 - 10))
    | ((*(22 + in)) << 10) | ((*(23 + in)) << 25);
    *(11 + out) = ((*(23 + in)) >> (15 - 8))
    | ((*(24 + in)) << 8) | ((*(25 + in)) << 23);
    *(12 + out) = ((*(25 + in)) >> (15 - 6))
    | ((*(26 + in)) << 6) | ((*(27 + in)) << 21);
    *(13 + out) = ((*(27 + in)) >> (15 - 4))
    | ((*(28 + in)) << 4) | ((*(29 + in)) << 19);
    *(14 + out) = ((*(29 + in)) >> (15 - 2))
    | ((*(30 + in)) << 2) | ((*(31 + in)) << 17);
}

void BitPacking::fastpackwithoutmask16(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 16);
    *(1 + out) = *(2 + in) | ((*(3 + in)) << 16);
    *(2 + out) = *(4 + in) | ((*(5 + in)) << 16);
    *(3 + out) = *(6 + in) | ((*(7 + in)) << 16);
    *(4 + out) = *(8 + in) | ((*(9 + in)) << 16);
    *(5 + out) = *(10 + in) | ((*(11 + in)) << 16);
    *(6 + out) = *(12 + in) | ((*(13 + in)) << 16);
    *(7 + out) = *(14 + in) | ((*(15 + in)) << 16);
    *(8 + out) = *(16 + in) | ((*(17 + in)) << 16);
    *(9 + out) = *(18 + in) | ((*(19 + in)) << 16);
    *(10 + out) = *(20 + in) | ((*(21 + in)) << 16);
    *(11 + out) = *(22 + in) | ((*(23 + in)) << 16);
    *(12 + out) = *(24 + in) | ((*(25 + in)) << 16);
    *(13 + out) = *(26 + in) | ((*(27 + in)) << 16);
    *(14 + out) = *(28 + in) | ((*(29 + in)) << 16);
    *(15 + out) = *(30 + in) | ((*(31 + in)) << 16);
}

void BitPacking::fastpackwithoutmask17(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 17);
    *(1 + out) = ((*(1 + in)) >> (17 - 2))
    | ((*(2 + in)) << 2) | ((*(3 + in)) << 19);
    *(2 + out) = ((*(3 + in)) >> (17 - 4))
    | ((*(4 + in)) << 4) | ((*(5 + in)) << 21);
    *(3 + out) = ((*(5 + in)) >> (17 - 6))
    | ((*(6 + in)) << 6) | ((*(7 + in)) << 23);
    *(4 + out) = ((*(7 + in)) >> (17 - 8))
    | ((*(8 + in)) << 8) | ((*(9 + in)) << 25);
    *(5 + out) = ((*(9 + in)) >> (17 - 10))
    | ((*(10 + in)) << 10) | ((*(11 + in)) << 27);
    *(6 + out) = ((*(11 + in)) >> (17 - 12))
    | ((*(12 + in)) << 12) | ((*(13 + in)) << 29);
    *(7 + out) = ((*(13 + in)) >> (17 - 14))
    | ((*(14 + in)) << 14) | ((*(15 + in)) << 31);
    *(8 + out) = ((*(15 + in)) >> (17 - 16))
    | ((*(16 + in)) << 16);
    *(9 + out) = ((*(16 + in)) >> (17 - 1))
    | ((*(17 + in)) << 1) | ((*(18 + in)) << 18);
    *(10 + out) = ((*(18 + in)) >> (17 - 3))
    | ((*(19 + in)) << 3) | ((*(20 + in)) << 20);
    *(11 + out) = ((*(20 + in)) >> (17 - 5))
    | ((*(21 + in)) << 5) | ((*(22 + in)) << 22);
    *(12 + out) = ((*(22 + in)) >> (17 - 7))
    | ((*(23 + in)) << 7) | ((*(24 + in)) << 24);
    *(13 + out) = ((*(24 + in)) >> (17 - 9))
    | ((*(25 + in)) << 9) | ((*(26 + in)) << 26);
    *(14 + out) = ((*(26 + in)) >> (17 - 11))
    | ((*(27 + in)) << 11) | ((*(28 + in)) << 28);
    *(15 + out) = ((*(28 + in)) >> (17 - 13))
    | ((*(29 + in)) << 13) | ((*(30 + in)) << 30);
    *(16 + out) = ((*(30 + in)) >> (17 - 15))
    | ((*(31 + in)) << 15);
}

void BitPacking::fastpackwithoutmask18(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 18);
    *(1 + out) = ((*(1 + in)) >> (18 - 4))
    | ((*(2 + in)) << 4) | ((*(3 + in)) << 22);
    *(2 + out) = ((*(3 + in)) >> (18 - 8))
    | ((*(4 + in)) << 8) | ((*(5 + in)) << 26);
    *(3 + out) = ((*(5 + in)) >> (18 - 12))
    | ((*(6 + in)) << 12) | ((*(7 + in)) << 30);
    *(4 + out) = ((*(7 + in)) >> (18 - 16))
    | ((*(8 + in)) << 16);
    *(5 + out) = ((*(8 + in)) >> (18 - 2))
    | ((*(9 + in)) << 2) | ((*(10 + in)) << 20);
    *(6 + out) = ((*(10 + in)) >> (18 - 6))
    | ((*(11 + in)) << 6) | ((*(12 + in)) << 24);
    *(7 + out) = ((*(12 + in)) >> (18 - 10))
    | ((*(13 + in)) << 10) | ((*(14 + in)) << 28);
    *(8 + out) = ((*(14 + in)) >> (18 - 14))
    | ((*(15 + in)) << 14);
    *(9 + out) = *(16 + in) | ((*(17 + in)) << 18);
    *(10 + out) = ((*(17 + in)) >> (18 - 4))
    | ((*(18 + in)) << 4) | ((*(19 + in)) << 22);
    *(11 + out) = ((*(19 + in)) >> (18 - 8))
    | ((*(20 + in)) << 8) | ((*(21 + in)) << 26);
    *(12 + out) = ((*(21 + in)) >> (18 - 12))
    | ((*(22 + in)) << 12) | ((*(23 + in)) << 30);
    *(13 + out) = ((*(23 + in)) >> (18 - 16))
    | ((*(24 + in)) << 16);
    *(14 + out) = ((*(24 + in)) >> (18 - 2))
    | ((*(25 + in)) << 2) | ((*(26 + in)) << 20);
    *(15 + out) = ((*(26 + in)) >> (18 - 6))
    | ((*(27 + in)) << 6) | ((*(28 + in)) << 24);
    *(16 + out) = ((*(28 + in)) >> (18 - 10))
    | ((*(29 + in)) << 10) | ((*(30 + in)) << 28);
    *(17 + out) = ((*(30 + in)) >> (18 - 14))
    | ((*(31 + in)) << 14);
}

void BitPacking::fastpackwithoutmask19(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 19);
    *(1 + out) = ((*(1 + in)) >> (19 - 6))
    | ((*(2 + in)) << 6) | ((*(3 + in)) << 25);
    *(2 + out) = ((*(3 + in)) >> (19 - 12))
    | ((*(4 + in)) << 12) | ((*(5 + in)) << 31);
    *(3 + out) = ((*(5 + in)) >> (19 - 18))
    | ((*(6 + in)) << 18);
    *(4 + out) = ((*(6 + in)) >> (19 - 5))
    | ((*(7 + in)) << 5) | ((*(8 + in)) << 24);
    *(5 + out) = ((*(8 + in)) >> (19 - 11))
    | ((*(9 + in)) << 11) | ((*(10 + in)) << 30);
    *(6 + out) = ((*(10 + in)) >> (19 - 17))
    | ((*(11 + in)) << 17);
    *(7 + out) = ((*(11 + in)) >> (19 - 4))
    | ((*(12 + in)) << 4) | ((*(13 + in)) << 23);
    *(8 + out) = ((*(13 + in)) >> (19 - 10))
    | ((*(14 + in)) << 10) | ((*(15 + in)) << 29);
    *(9 + out) = ((*(15 + in)) >> (19 - 16))
    | ((*(16 + in)) << 16);
    *(10 + out) = ((*(16 + in)) >> (19 - 3))
    | ((*(17 + in)) << 3) | ((*(18 + in)) << 22);
    *(11 + out) = ((*(18 + in)) >> (19 - 9))
    | ((*(19 + in)) << 9) | ((*(20 + in)) << 28);
    *(12 + out) = ((*(20 + in)) >> (19 - 15))
    | ((*(21 + in)) << 15);
    *(13 + out) = ((*(21 + in)) >> (19 - 2))
    | ((*(22 + in)) << 2) | ((*(23 + in)) << 21);
    *(14 + out) = ((*(23 + in)) >> (19 - 8))
    | ((*(24 + in)) << 8) | ((*(25 + in)) << 27);
    *(15 + out) = ((*(25 + in)) >> (19 - 14))
    | ((*(26 + in)) << 14);
    *(16 + out) = ((*(26 + in)) >> (19 - 1))
    | ((*(27 + in)) << 1) | ((*(28 + in)) << 20);
    *(17 + out) = ((*(28 + in)) >> (19 - 7))
    | ((*(29 + in)) << 7) | ((*(30 + in)) << 26);
    *(18 + out) = ((*(30 + in)) >> (19 - 13))
    | ((*(31 + in)) << 13);
}

void BitPacking::fastpackwithoutmask2(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 2)
    | ((*(2 + in)) << 4) | ((*(3 + in)) << 6)
    | ((*(4 + in)) << 8) | ((*(5 + in)) << 10)
    | ((*(6 + in)) << 12) | ((*(7 + in)) << 14)
    | ((*(8 + in)) << 16) | ((*(9 + in)) << 18)
    | ((*(10 + in)) << 20) | ((*(11 + in)) << 22)
    | ((*(12 + in)) << 24) | ((*(13 + in)) << 26)
    | ((*(14 + in)) << 28) | ((*(15 + in)) << 30);
    *(1 + out) = *(16 + in) | ((*(17 + in)) << 2)
    | ((*(18 + in)) << 4) | ((*(19 + in)) << 6)
    | ((*(20 + in)) << 8) | ((*(21 + in)) << 10)
    | ((*(22 + in)) << 12) | ((*(23 + in)) << 14)
    | ((*(24 + in)) << 16) | ((*(25 + in)) << 18)
    | ((*(26 + in)) << 20) | ((*(27 + in)) << 22)
    | ((*(28 + in)) << 24) | ((*(29 + in)) << 26)
    | ((*(30 + in)) << 28) | ((*(31 + in)) << 30);
}

void BitPacking::fastpackwithoutmask20(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 20);
    *(1 + out) = ((*(1 + in)) >> (20 - 8))
    | ((*(2 + in)) << 8) | ((*(3 + in)) << 28);
    *(2 + out) = ((*(3 + in)) >> (20 - 16))
    | ((*(4 + in)) << 16);
    *(3 + out) = ((*(4 + in)) >> (20 - 4))
    | ((*(5 + in)) << 4) | ((*(6 + in)) << 24);
    *(4 + out) = ((*(6 + in)) >> (20 - 12))
    | ((*(7 + in)) << 12);
    *(5 + out) = *(8 + in) | ((*(9 + in)) << 20);
    *(6 + out) = ((*(9 + in)) >> (20 - 8))
    | ((*(10 + in)) << 8) | ((*(11 + in)) << 28);
    *(7 + out) = ((*(11 + in)) >> (20 - 16))
    | ((*(12 + in)) << 16);
    *(8 + out) = ((*(12 + in)) >> (20 - 4))
    | ((*(13 + in)) << 4) | ((*(14 + in)) << 24);
    *(9 + out) = ((*(14 + in)) >> (20 - 12))
    | ((*(15 + in)) << 12);
    *(10 + out) = *(16 + in) | ((*(17 + in)) << 20);
    *(11 + out) = ((*(17 + in)) >> (20 - 8))
    | ((*(18 + in)) << 8) | ((*(19 + in)) << 28);
    *(12 + out) = ((*(19 + in)) >> (20 - 16))
    | ((*(20 + in)) << 16);
    *(13 + out) = ((*(20 + in)) >> (20 - 4))
    | ((*(21 + in)) << 4) | ((*(22 + in)) << 24);
    *(14 + out) = ((*(22 + in)) >> (20 - 12))
    | ((*(23 + in)) << 12);
    *(15 + out) = *(24 + in) | ((*(25 + in)) << 20);
    *(16 + out) = ((*(25 + in)) >> (20 - 8))
    | ((*(26 + in)) << 8) | ((*(27 + in)) << 28);
    *(17 + out) = ((*(27 + in)) >> (20 - 16))
    | ((*(28 + in)) << 16);
    *(18 + out) = ((*(28 + in)) >> (20 - 4))
    | ((*(29 + in)) << 4) | ((*(30 + in)) << 24);
    *(19 + out) = ((*(30 + in)) >> (20 - 12))
    | ((*(31 + in)) << 12);
}

void BitPacking::fastpackwithoutmask21(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 21);
    *(1 + out) = ((*(1 + in)) >> (21 - 10))
    | ((*(2 + in)) << 10) | ((*(3 + in)) << 31);
    *(2 + out) = ((*(3 + in)) >> (21 - 20))
    | ((*(4 + in)) << 20);
    *(3 + out) = ((*(4 + in)) >> (21 - 9))
    | ((*(5 + in)) << 9) | ((*(6 + in)) << 30);
    *(4 + out) = ((*(6 + in)) >> (21 - 19))
    | ((*(7 + in)) << 19);
    *(5 + out) = ((*(7 + in)) >> (21 - 8))
    | ((*(8 + in)) << 8) | ((*(9 + in)) << 29);
    *(6 + out) = ((*(9 + in)) >> (21 - 18))
    | ((*(10 + in)) << 18);
    *(7 + out) = ((*(10 + in)) >> (21 - 7))
    | ((*(11 + in)) << 7) | ((*(12 + in)) << 28);
    *(8 + out) = ((*(12 + in)) >> (21 - 17))
    | ((*(13 + in)) << 17);
    *(9 + out) = ((*(13 + in)) >> (21 - 6))
    | ((*(14 + in)) << 6) | ((*(15 + in)) << 27);
    *(10 + out) = ((*(15 + in)) >> (21 - 16))
    | ((*(16 + in)) << 16);
    *(11 + out) = ((*(16 + in)) >> (21 - 5))
    | ((*(17 + in)) << 5) | ((*(18 + in)) << 26);
    *(12 + out) = ((*(18 + in)) >> (21 - 15))
    | ((*(19 + in)) << 15);
    *(13 + out) = ((*(19 + in)) >> (21 - 4))
    | ((*(20 + in)) << 4) | ((*(21 + in)) << 25);
    *(14 + out) = ((*(21 + in)) >> (21 - 14))
    | ((*(22 + in)) << 14);
    *(15 + out) = ((*(22 + in)) >> (21 - 3))
    | ((*(23 + in)) << 3) | ((*(24 + in)) << 24);
    *(16 + out) = ((*(24 + in)) >> (21 - 13))
    | ((*(25 + in)) << 13);
    *(17 + out) = ((*(25 + in)) >> (21 - 2))
    | ((*(26 + in)) << 2) | ((*(27 + in)) << 23);
    *(18 + out) = ((*(27 + in)) >> (21 - 12))
    | ((*(28 + in)) << 12);
    *(19 + out) = ((*(28 + in)) >> (21 - 1))
    | ((*(29 + in)) << 1) | ((*(30 + in)) << 22);
    *(20 + out) = ((*(30 + in)) >> (21 - 11))
    | ((*(31 + in)) << 11);
}

void BitPacking::fastpackwithoutmask22(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 22);
    *(1 + out) = ((*(1 + in)) >> (22 - 12))
    | ((*(2 + in)) << 12);
    *(2 + out) = ((*(2 + in)) >> (22 - 2))
    | ((*(3 + in)) << 2) | ((*(4 + in)) << 24);
    *(3 + out) = ((*(4 + in)) >> (22 - 14))
    | ((*(5 + in)) << 14);
    *(4 + out) = ((*(5 + in)) >> (22 - 4))
    | ((*(6 + in)) << 4) | ((*(7 + in)) << 26);
    *(5 + out) = ((*(7 + in)) >> (22 - 16))
    | ((*(8 + in)) << 16);
    *(6 + out) = ((*(8 + in)) >> (22 - 6))
    | ((*(9 + in)) << 6) | ((*(10 + in)) << 28);
    *(7 + out) = ((*(10 + in)) >> (22 - 18))
    | ((*(11 + in)) << 18);
    *(8 + out) = ((*(11 + in)) >> (22 - 8))
    | ((*(12 + in)) << 8) | ((*(13 + in)) << 30);
    *(9 + out) = ((*(13 + in)) >> (22 - 20))
    | ((*(14 + in)) << 20);
    *(10 + out) = ((*(14 + in)) >> (22 - 10))
    | ((*(15 + in)) << 10);
    *(11 + out) = *(16 + in) | ((*(17 + in)) << 22);
    *(12 + out) = ((*(17 + in)) >> (22 - 12))
    | ((*(18 + in)) << 12);
    *(13 + out) = ((*(18 + in)) >> (22 - 2))
    | ((*(19 + in)) << 2) | ((*(20 + in)) << 24);
    *(14 + out) = ((*(20 + in)) >> (22 - 14))
    | ((*(21 + in)) << 14);
    *(15 + out) = ((*(21 + in)) >> (22 - 4))
    | ((*(22 + in)) << 4) | ((*(23 + in)) << 26);
    *(16 + out) = ((*(23 + in)) >> (22 - 16))
    | ((*(24 + in)) << 16);
    *(17 + out) = ((*(24 + in)) >> (22 - 6))
    | ((*(25 + in)) << 6) | ((*(26 + in)) << 28);
    *(18 + out) = ((*(26 + in)) >> (22 - 18))
    | ((*(27 + in)) << 18);
    *(19 + out) = ((*(27 + in)) >> (22 - 8))
    | ((*(28 + in)) << 8) | ((*(29 + in)) << 30);
    *(20 + out) = ((*(29 + in)) >> (22 - 20))
    | ((*(30 + in)) << 20);
    *(21 + out) = ((*(30 + in)) >> (22 - 10))
    | ((*(31 + in)) << 10);
}

void BitPacking::fastpackwithoutmask23(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 23);
    *(1 + out) = ((*(1 + in)) >> (23 - 14))
    | ((*(2 + in)) << 14);
    *(2 + out) = ((*(2 + in)) >> (23 - 5))
    | ((*(3 + in)) << 5) | ((*(4 + in)) << 28);
    *(3 + out) = ((*(4 + in)) >> (23 - 19))
    | ((*(5 + in)) << 19);
    *(4 + out) = ((*(5 + in)) >> (23 - 10))
    | ((*(6 + in)) << 10);
    *(5 + out) = ((*(6 + in)) >> (23 - 1))
    | ((*(7 + in)) << 1) | ((*(8 + in)) << 24);
    *(6 + out) = ((*(8 + in)) >> (23 - 15))
    | ((*(9 + in)) << 15);
    *(7 + out) = ((*(9 + in)) >> (23 - 6))
    | ((*(10 + in)) << 6) | ((*(11 + in)) << 29);
    *(8 + out) = ((*(11 + in)) >> (23 - 20))
    | ((*(12 + in)) << 20);
    *(9 + out) = ((*(12 + in)) >> (23 - 11))
    | ((*(13 + in)) << 11);
    *(10 + out) = ((*(13 + in)) >> (23 - 2))
    | ((*(14 + in)) << 2) | ((*(15 + in)) << 25);
    *(11 + out) = ((*(15 + in)) >> (23 - 16))
    | ((*(16 + in)) << 16);
    *(12 + out) = ((*(16 + in)) >> (23 - 7))
    | ((*(17 + in)) << 7) | ((*(18 + in)) << 30);
    *(13 + out) = ((*(18 + in)) >> (23 - 21))
    | ((*(19 + in)) << 21);
    *(14 + out) = ((*(19 + in)) >> (23 - 12))
    | ((*(20 + in)) << 12);
    *(15 + out) = ((*(20 + in)) >> (23 - 3))
    | ((*(21 + in)) << 3) | ((*(22 + in)) << 26);
    *(16 + out) = ((*(22 + in)) >> (23 - 17))
    | ((*(23 + in)) << 17);
    *(17 + out) = ((*(23 + in)) >> (23 - 8))
    | ((*(24 + in)) << 8) | ((*(25 + in)) << 31);
    *(18 + out) = ((*(25 + in)) >> (23 - 22))
    | ((*(26 + in)) << 22);
    *(19 + out) = ((*(26 + in)) >> (23 - 13))
    | ((*(27 + in)) << 13);
    *(20 + out) = ((*(27 + in)) >> (23 - 4))
    | ((*(28 + in)) << 4) | ((*(29 + in)) << 27);
    *(21 + out) = ((*(29 + in)) >> (23 - 18))
    | ((*(30 + in)) << 18);
    *(22 + out) = ((*(30 + in)) >> (23 - 9))
    | ((*(31 + in)) << 9);
}

void BitPacking::fastpackwithoutmask24(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 24);
    *(1 + out) = ((*(1 + in)) >> (24 - 16))
    | ((*(2 + in)) << 16);
    *(2 + out) = ((*(2 + in)) >> (24 - 8))
    | ((*(3 + in)) << 8);
    *(3 + out) = *(4 + in) | ((*(5 + in)) << 24);
    *(4 + out) = ((*(5 + in)) >> (24 - 16))
    | ((*(6 + in)) << 16);
    *(5 + out) = ((*(6 + in)) >> (24 - 8))
    | ((*(7 + in)) << 8);
    *(6 + out) = *(8 + in) | ((*(9 + in)) << 24);
    *(7 + out) = ((*(9 + in)) >> (24 - 16))
    | ((*(10 + in)) << 16);
    *(8 + out) = ((*(10 + in)) >> (24 - 8))
    | ((*(11 + in)) << 8);
    *(9 + out) = *(12 + in) | ((*(13 + in)) << 24);
    *(10 + out) = ((*(13 + in)) >> (24 - 16))
    | ((*(14 + in)) << 16);
    *(11 + out) = ((*(14 + in)) >> (24 - 8))
    | ((*(15 + in)) << 8);
    *(12 + out) = *(16 + in) | ((*(17 + in)) << 24);
    *(13 + out) = ((*(17 + in)) >> (24 - 16))
    | ((*(18 + in)) << 16);
    *(14 + out) = ((*(18 + in)) >> (24 - 8))
    | ((*(19 + in)) << 8);
    *(15 + out) = *(20 + in) | ((*(21 + in)) << 24);
    *(16 + out) = ((*(21 + in)) >> (24 - 16))
    | ((*(22 + in)) << 16);
    *(17 + out) = ((*(22 + in)) >> (24 - 8))
    | ((*(23 + in)) << 8);
    *(18 + out) = *(24 + in) | ((*(25 + in)) << 24);
    *(19 + out) = ((*(25 + in)) >> (24 - 16))
    | ((*(26 + in)) << 16);
    *(20 + out) = ((*(26 + in)) >> (24 - 8))
    | ((*(27 + in)) << 8);
    *(21 + out) = *(28 + in) | ((*(29 + in)) << 24);
    *(22 + out) = ((*(29 + in)) >> (24 - 16))
    | ((*(30 + in)) << 16);
    *(23 + out) = ((*(30 + in)) >> (24 - 8))
    | ((*(31 + in)) << 8);
}

void BitPacking::fastpackwithoutmask25(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 25);
    *(1 + out) = ((*(1 + in)) >> (25 - 18))
    | ((*(2 + in)) << 18);
    *(2 + out) = ((*(2 + in)) >> (25 - 11))
    | ((*(3 + in)) << 11);
    *(3 + out) = ((*(3 + in)) >> (25 - 4))
    | ((*(4 + in)) << 4) | ((*(5 + in)) << 29);
    *(4 + out) = ((*(5 + in)) >> (25 - 22))
    | ((*(6 + in)) << 22);
    *(5 + out) = ((*(6 + in)) >> (25 - 15))
    | ((*(7 + in)) << 15);
    *(6 + out) = ((*(7 + in)) >> (25 - 8))
    | ((*(8 + in)) << 8);
    *(7 + out) = ((*(8 + in)) >> (25 - 1))
    | ((*(9 + in)) << 1) | ((*(10 + in)) << 26);
    *(8 + out) = ((*(10 + in)) >> (25 - 19))
    | ((*(11 + in)) << 19);
    *(9 + out) = ((*(11 + in)) >> (25 - 12))
    | ((*(12 + in)) << 12);
    *(10 + out) = ((*(12 + in)) >> (25 - 5))
    | ((*(13 + in)) << 5) | ((*(14 + in)) << 30);
    *(11 + out) = ((*(14 + in)) >> (25 - 23))
    | ((*(15 + in)) << 23);
    *(12 + out) = ((*(15 + in)) >> (25 - 16))
    | ((*(16 + in)) << 16);
    *(13 + out) = ((*(16 + in)) >> (25 - 9))
    | ((*(17 + in)) << 9);
    *(14 + out) = ((*(17 + in)) >> (25 - 2))
    | ((*(18 + in)) << 2) | ((*(19 + in)) << 27);
    *(15 + out) = ((*(19 + in)) >> (25 - 20))
    | ((*(20 + in)) << 20);
    *(16 + out) = ((*(20 + in)) >> (25 - 13))
    | ((*(21 + in)) << 13);
    *(17 + out) = ((*(21 + in)) >> (25 - 6))
    | ((*(22 + in)) << 6) | ((*(23 + in)) << 31);
    *(18 + out) = ((*(23 + in)) >> (25 - 24))
    | ((*(24 + in)) << 24);
    *(19 + out) = ((*(24 + in)) >> (25 - 17))
    | ((*(25 + in)) << 17);
    *(20 + out) = ((*(25 + in)) >> (25 - 10))
    | ((*(26 + in)) << 10);
    *(21 + out) = ((*(26 + in)) >> (25 - 3))
    | ((*(27 + in)) << 3) | ((*(28 + in)) << 28);
    *(22 + out) = ((*(28 + in)) >> (25 - 21))
    | ((*(29 + in)) << 21);
    *(23 + out) = ((*(29 + in)) >> (25 - 14))
    | ((*(30 + in)) << 14);
    *(24 + out) = ((*(30 + in)) >> (25 - 7))
    | ((*(31 + in)) << 7);
}

void BitPacking::fastpackwithoutmask26(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 26);
    *(1 + out) = ((*(1 + in)) >> (26 - 20))
    | ((*(2 + in)) << 20);
    *(2 + out) = ((*(2 + in)) >> (26 - 14))
    | ((*(3 + in)) << 14);
    *(3 + out) = ((*(3 + in)) >> (26 - 8))
    | ((*(4 + in)) << 8);
    *(4 + out) = ((*(4 + in)) >> (26 - 2))
    | ((*(5 + in)) << 2) | ((*(6 + in)) << 28);
    *(5 + out) = ((*(6 + in)) >> (26 - 22))
    | ((*(7 + in)) << 22);
    *(6 + out) = ((*(7 + in)) >> (26 - 16))
    | ((*(8 + in)) << 16);
    *(7 + out) = ((*(8 + in)) >> (26 - 10))
    | ((*(9 + in)) << 10);
    *(8 + out) = ((*(9 + in)) >> (26 - 4))
    | ((*(10 + in)) << 4) | ((*(11 + in)) << 30);
    *(9 + out) = ((*(11 + in)) >> (26 - 24))
    | ((*(12 + in)) << 24);
    *(10 + out) = ((*(12 + in)) >> (26 - 18))
    | ((*(13 + in)) << 18);
    *(11 + out) = ((*(13 + in)) >> (26 - 12))
    | ((*(14 + in)) << 12);
    *(12 + out) = ((*(14 + in)) >> (26 - 6))
    | ((*(15 + in)) << 6);
    *(13 + out) = *(16 + in) | ((*(17 + in)) << 26);
    *(14 + out) = ((*(17 + in)) >> (26 - 20))
    | ((*(18 + in)) << 20);
    *(15 + out) = ((*(18 + in)) >> (26 - 14))
    | ((*(19 + in)) << 14);
    *(16 + out) = ((*(19 + in)) >> (26 - 8))
    | ((*(20 + in)) << 8);
    *(17 + out) = ((*(20 + in)) >> (26 - 2))
    | ((*(21 + in)) << 2) | ((*(22 + in)) << 28);
    *(18 + out) = ((*(22 + in)) >> (26 - 22))
    | ((*(23 + in)) << 22);
    *(19 + out) = ((*(23 + in)) >> (26 - 16))
    | ((*(24 + in)) << 16);
    *(20 + out) = ((*(24 + in)) >> (26 - 10))
    | ((*(25 + in)) << 10);
    *(21 + out) = ((*(25 + in)) >> (26 - 4))
    | ((*(26 + in)) << 4) | ((*(27 + in)) << 30);
    *(22 + out) = ((*(27 + in)) >> (26 - 24))
    | ((*(28 + in)) << 24);
    *(23 + out) = ((*(28 + in)) >> (26 - 18))
    | ((*(29 + in)) << 18);
    *(24 + out) = ((*(29 + in)) >> (26 - 12))
    | ((*(30 + in)) << 12);
    *(25 + out) = ((*(30 + in)) >> (26 - 6))
    | ((*(31 + in)) << 6);
}

void BitPacking::fastpackwithoutmask27(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 27);
    *(1 + out) = ((*(1 + in)) >> (27 - 22))
    | ((*(2 + in)) << 22);
    *(2 + out) = ((*(2 + in)) >> (27 - 17))
    | ((*(3 + in)) << 17);
    *(3 + out) = ((*(3 + in)) >> (27 - 12))
    | ((*(4 + in)) << 12);
    *(4 + out) = ((*(4 + in)) >> (27 - 7))
    | ((*(5 + in)) << 7);
    *(5 + out) = ((*(5 + in)) >> (27 - 2))
    | ((*(6 + in)) << 2) | ((*(7 + in)) << 29);
    *(6 + out) = ((*(7 + in)) >> (27 - 24))
    | ((*(8 + in)) << 24);
    *(7 + out) = ((*(8 + in)) >> (27 - 19))
    | ((*(9 + in)) << 19);
    *(8 + out) = ((*(9 + in)) >> (27 - 14))
    | ((*(10 + in)) << 14);
    *(9 + out) = ((*(10 + in)) >> (27 - 9))
    | ((*(11 + in)) << 9);
    *(10 + out) = ((*(11 + in)) >> (27 - 4))
    | ((*(12 + in)) << 4) | ((*(13 + in)) << 31);
    *(11 + out) = ((*(13 + in)) >> (27 - 26))
    | ((*(14 + in)) << 26);
    *(12 + out) = ((*(14 + in)) >> (27 - 21))
    | ((*(15 + in)) << 21);
    *(13 + out) = ((*(15 + in)) >> (27 - 16))
    | ((*(16 + in)) << 16);
    *(14 + out) = ((*(16 + in)) >> (27 - 11))
    | ((*(17 + in)) << 11);
    *(15 + out) = ((*(17 + in)) >> (27 - 6))
    | ((*(18 + in)) << 6);
    *(16 + out) = ((*(18 + in)) >> (27 - 1))
    | ((*(19 + in)) << 1) | ((*(20 + in)) << 28);
    *(17 + out) = ((*(20 + in)) >> (27 - 23))
    | ((*(21 + in)) << 23);
    *(18 + out) = ((*(21 + in)) >> (27 - 18))
    | ((*(22 + in)) << 18);
    *(19 + out) = ((*(22 + in)) >> (27 - 13))
    | ((*(23 + in)) << 13);
    *(20 + out) = ((*(23 + in)) >> (27 - 8))
    | ((*(24 + in)) << 8);
    *(21 + out) = ((*(24 + in)) >> (27 - 3))
    | ((*(25 + in)) << 3) | ((*(26 + in)) << 30);
    *(22 + out) = ((*(26 + in)) >> (27 - 25))
    | ((*(27 + in)) << 25);
    *(23 + out) = ((*(27 + in)) >> (27 - 20))
    | ((*(28 + in)) << 20);
    *(24 + out) = ((*(28 + in)) >> (27 - 15))
    | ((*(29 + in)) << 15);
    *(25 + out) = ((*(29 + in)) >> (27 - 10))
    | ((*(30 + in)) << 10);
    *(26 + out) = ((*(30 + in)) >> (27 - 5))
    | ((*(31 + in)) << 5);
}

void BitPacking::fastpackwithoutmask28(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 28);
    *(1 + out) = ((*(1 + in)) >> (28 - 24))
    | ((*(2 + in)) << 24);
    *(2 + out) = ((*(2 + in)) >> (28 - 20))
    | ((*(3 + in)) << 20);
    *(3 + out) = ((*(3 + in)) >> (28 - 16))
    | ((*(4 + in)) << 16);
    *(4 + out) = ((*(4 + in)) >> (28 - 12))
    | ((*(5 + in)) << 12);
    *(5 + out) = ((*(5 + in)) >> (28 - 8))
    | ((*(6 + in)) << 8);
    *(6 + out) = ((*(6 + in)) >> (28 - 4))
    | ((*(7 + in)) << 4);
    *(7 + out) = *(8 + in) | ((*(9 + in)) << 28);
    *(8 + out) = ((*(9 + in)) >> (28 - 24))
    | ((*(10 + in)) << 24);
    *(9 + out) = ((*(10 + in)) >> (28 - 20))
    | ((*(11 + in)) << 20);
    *(10 + out) = ((*(11 + in)) >> (28 - 16))
    | ((*(12 + in)) << 16);
    *(11 + out) = ((*(12 + in)) >> (28 - 12))
    | ((*(13 + in)) << 12);
    *(12 + out) = ((*(13 + in)) >> (28 - 8))
    | ((*(14 + in)) << 8);
    *(13 + out) = ((*(14 + in)) >> (28 - 4))
    | ((*(15 + in)) << 4);
    *(14 + out) = *(16 + in) | ((*(17 + in)) << 28);
    *(15 + out) = ((*(17 + in)) >> (28 - 24))
    | ((*(18 + in)) << 24);
    *(16 + out) = ((*(18 + in)) >> (28 - 20))
    | ((*(19 + in)) << 20);
    *(17 + out) = ((*(19 + in)) >> (28 - 16))
    | ((*(20 + in)) << 16);
    *(18 + out) = ((*(20 + in)) >> (28 - 12))
    | ((*(21 + in)) << 12);
    *(19 + out) = ((*(21 + in)) >> (28 - 8))
    | ((*(22 + in)) << 8);
    *(20 + out) = ((*(22 + in)) >> (28 - 4))
    | ((*(23 + in)) << 4);
    *(21 + out) = *(24 + in) | ((*(25 + in)) << 28);
    *(22 + out) = ((*(25 + in)) >> (28 - 24))
    | ((*(26 + in)) << 24);
    *(23 + out) = ((*(26 + in)) >> (28 - 20))
    | ((*(27 + in)) << 20);
    *(24 + out) = ((*(27 + in)) >> (28 - 16))
    | ((*(28 + in)) << 16);
    *(25 + out) = ((*(28 + in)) >> (28 - 12))
    | ((*(29 + in)) << 12);
    *(26 + out) = ((*(29 + in)) >> (28 - 8))
    | ((*(30 + in)) << 8);
    *(27 + out) = ((*(30 + in)) >> (28 - 4))
    | ((*(31 + in)) << 4);
}

void BitPacking::fastpackwithoutmask29(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 29);
    *(1 + out) = ((*(1 + in)) >> (29 - 26))
    | ((*(2 + in)) << 26);
    *(2 + out) = ((*(2 + in)) >> (29 - 23))
    | ((*(3 + in)) << 23);
    *(3 + out) = ((*(3 + in)) >> (29 - 20))
    | ((*(4 + in)) << 20);
    *(4 + out) = ((*(4 + in)) >> (29 - 17))
    | ((*(5 + in)) << 17);
    *(5 + out) = ((*(5 + in)) >> (29 - 14))
    | ((*(6 + in)) << 14);
    *(6 + out) = ((*(6 + in)) >> (29 - 11))
    | ((*(7 + in)) << 11);
    *(7 + out) = ((*(7 + in)) >> (29 - 8))
    | ((*(8 + in)) << 8);
    *(8 + out) = ((*(8 + in)) >> (29 - 5))
    | ((*(9 + in)) << 5);
    *(9 + out) = ((*(9 + in)) >> (29 - 2))
    | ((*(10 + in)) << 2) | ((*(11 + in)) << 31);
    *(10 + out) = ((*(11 + in)) >> (29 - 28))
    | ((*(12 + in)) << 28);
    *(11 + out) = ((*(12 + in)) >> (29 - 25))
    | ((*(13 + in)) << 25);
    *(12 + out) = ((*(13 + in)) >> (29 - 22))
    | ((*(14 + in)) << 22);
    *(13 + out) = ((*(14 + in)) >> (29 - 19))
    | ((*(15 + in)) << 19);
    *(14 + out) = ((*(15 + in)) >> (29 - 16))
    | ((*(16 + in)) << 16);
    *(15 + out) = ((*(16 + in)) >> (29 - 13))
    | ((*(17 + in)) << 13);
    *(16 + out) = ((*(17 + in)) >> (29 - 10))
    | ((*(18 + in)) << 10);
    *(17 + out) = ((*(18 + in)) >> (29 - 7))
    | ((*(19 + in)) << 7);
    *(18 + out) = ((*(19 + in)) >> (29 - 4))
    | ((*(20 + in)) << 4);
    *(19 + out) = ((*(20 + in)) >> (29 - 1))
    | ((*(21 + in)) << 1) | ((*(22 + in)) << 30);
    *(20 + out) = ((*(22 + in)) >> (29 - 27))
    | ((*(23 + in)) << 27);
    *(21 + out) = ((*(23 + in)) >> (29 - 24))
    | ((*(24 + in)) << 24);
    *(22 + out) = ((*(24 + in)) >> (29 - 21))
    | ((*(25 + in)) << 21);
    *(23 + out) = ((*(25 + in)) >> (29 - 18))
    | ((*(26 + in)) << 18);
    *(24 + out) = ((*(26 + in)) >> (29 - 15))
    | ((*(27 + in)) << 15);
    *(25 + out) = ((*(27 + in)) >> (29 - 12))
    | ((*(28 + in)) << 12);
    *(26 + out) = ((*(28 + in)) >> (29 - 9))
    | ((*(29 + in)) << 9);
    *(27 + out) = ((*(29 + in)) >> (29 - 6))
    | ((*(30 + in)) << 6);
    *(28 + out) = ((*(30 + in)) >> (29 - 3))
    | ((*(31 + in)) << 3);
}

void BitPacking::fastpackwithoutmask3(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 3)
    | ((*(2 + in)) << 6) | ((*(3 + in)) << 9)
    | ((*(4 + in)) << 12) | ((*(5 + in)) << 15)
    | ((*(6 + in)) << 18) | ((*(7 + in)) << 21)
    | ((*(8 + in)) << 24) | ((*(9 + in)) << 27)
    | ((*(10 + in)) << 30);
    *(1 + out) = ((*(10 + in)) >> (3 - 1))
    | ((*(11 + in)) << 1) | ((*(12 + in)) << 4)
    | ((*(13 + in)) << 7) | ((*(14 + in)) << 10)
    | ((*(15 + in)) << 13) | ((*(16 + in)) << 16)
    | ((*(17 + in)) << 19) | ((*(18 + in)) << 22)
    | ((*(19 + in)) << 25) | ((*(20 + in)) << 28)
    | ((*(21 + in)) << 31);
    *(2 + out) = ((*(21 + in)) >> (3 - 2))
    | ((*(22 + in)) << 2) | ((*(23 + in)) << 5)
    | ((*(24 + in)) << 8) | ((*(25 + in)) << 11)
    | ((*(26 + in)) << 14) | ((*(27 + in)) << 17)
    | ((*(28 + in)) << 20) | ((*(29 + in)) << 23)
    | ((*(30 + in)) << 26) | ((*(31 + in)) << 29);
}

void BitPacking::fastpackwithoutmask30(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 30);
    *(1 + out) = ((*(1 + in)) >> (30 - 28))
    | ((*(2 + in)) << 28);
    *(2 + out) = ((*(2 + in)) >> (30 - 26))
    | ((*(3 + in)) << 26);
    *(3 + out) = ((*(3 + in)) >> (30 - 24))
    | ((*(4 + in)) << 24);
    *(4 + out) = ((*(4 + in)) >> (30 - 22))
    | ((*(5 + in)) << 22);
    *(5 + out) = ((*(5 + in)) >> (30 - 20))
    | ((*(6 + in)) << 20);
    *(6 + out) = ((*(6 + in)) >> (30 - 18))
    | ((*(7 + in)) << 18);
    *(7 + out) = ((*(7 + in)) >> (30 - 16))
    | ((*(8 + in)) << 16);
    *(8 + out) = ((*(8 + in)) >> (30 - 14))
    | ((*(9 + in)) << 14);
    *(9 + out) = ((*(9 + in)) >> (30 - 12))
    | ((*(10 + in)) << 12);
    *(10 + out) = ((*(10 + in)) >> (30 - 10))
    | ((*(11 + in)) << 10);
    *(11 + out) = ((*(11 + in)) >> (30 - 8))
    | ((*(12 + in)) << 8);
    *(12 + out) = ((*(12 + in)) >> (30 - 6))
    | ((*(13 + in)) << 6);
    *(13 + out) = ((*(13 + in)) >> (30 - 4))
    | ((*(14 + in)) << 4);
    *(14 + out) = ((*(14 + in)) >> (30 - 2))
    | ((*(15 + in)) << 2);
    *(15 + out) = *(16 + in) | ((*(17 + in)) << 30);
    *(16 + out) = ((*(17 + in)) >> (30 - 28))
    | ((*(18 + in)) << 28);
    *(17 + out) = ((*(18 + in)) >> (30 - 26))
    | ((*(19 + in)) << 26);
    *(18 + out) = ((*(19 + in)) >> (30 - 24))
    | ((*(20 + in)) << 24);
    *(19 + out) = ((*(20 + in)) >> (30 - 22))
    | ((*(21 + in)) << 22);
    *(20 + out) = ((*(21 + in)) >> (30 - 20))
    | ((*(22 + in)) << 20);
    *(21 + out) = ((*(22 + in)) >> (30 - 18))
    | ((*(23 + in)) << 18);
    *(22 + out) = ((*(23 + in)) >> (30 - 16))
    | ((*(24 + in)) << 16);
    *(23 + out) = ((*(24 + in)) >> (30 - 14))
    | ((*(25 + in)) << 14);
    *(24 + out) = ((*(25 + in)) >> (30 - 12))
    | ((*(26 + in)) << 12);
    *(25 + out) = ((*(26 + in)) >> (30 - 10))
    | ((*(27 + in)) << 10);
    *(26 + out) = ((*(27 + in)) >> (30 - 8))
    | ((*(28 + in)) << 8);
    *(27 + out) = ((*(28 + in)) >> (30 - 6))
    | ((*(29 + in)) << 6);
    *(28 + out) = ((*(29 + in)) >> (30 - 4))
    | ((*(30 + in)) << 4);
    *(29 + out) = ((*(30 + in)) >> (30 - 2))
    | ((*(31 + in)) << 2);
}

void BitPacking::fastpackwithoutmask31(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 31);
    *(1 + out) = ((*(1 + in)) >> (31 - 30))
    | ((*(2 + in)) << 30);
    *(2 + out) = ((*(2 + in)) >> (31 - 29))
    | ((*(3 + in)) << 29);
    *(3 + out) = ((*(3 + in)) >> (31 - 28))
    | ((*(4 + in)) << 28);
    *(4 + out) = ((*(4 + in)) >> (31 - 27))
    | ((*(5 + in)) << 27);
    *(5 + out) = ((*(5 + in)) >> (31 - 26))
    | ((*(6 + in)) << 26);
    *(6 + out) = ((*(6 + in)) >> (31 - 25))
    | ((*(7 + in)) << 25);
    *(7 + out) = ((*(7 + in)) >> (31 - 24))
    | ((*(8 + in)) << 24);
    *(8 + out) = ((*(8 + in)) >> (31 - 23))
    | ((*(9 + in)) << 23);
    *(9 + out) = ((*(9 + in)) >> (31 - 22))
    | ((*(10 + in)) << 22);
    *(10 + out) = ((*(10 + in)) >> (31 - 21))
    | ((*(11 + in)) << 21);
    *(11 + out) = ((*(11 + in)) >> (31 - 20))
    | ((*(12 + in)) << 20);
    *(12 + out) = ((*(12 + in)) >> (31 - 19))
    | ((*(13 + in)) << 19);
    *(13 + out) = ((*(13 + in)) >> (31 - 18))
    | ((*(14 + in)) << 18);
    *(14 + out) = ((*(14 + in)) >> (31 - 17))
    | ((*(15 + in)) << 17);
    *(15 + out) = ((*(15 + in)) >> (31 - 16))
    | ((*(16 + in)) << 16);
    *(16 + out) = ((*(16 + in)) >> (31 - 15))
    | ((*(17 + in)) << 15);
    *(17 + out) = ((*(17 + in)) >> (31 - 14))
    | ((*(18 + in)) << 14);
    *(18 + out) = ((*(18 + in)) >> (31 - 13))
    | ((*(19 + in)) << 13);
    *(19 + out) = ((*(19 + in)) >> (31 - 12))
    | ((*(20 + in)) << 12);
    *(20 + out) = ((*(20 + in)) >> (31 - 11))
    | ((*(21 + in)) << 11);
    *(21 + out) = ((*(21 + in)) >> (31 - 10))
    | ((*(22 + in)) << 10);
    *(22 + out) = ((*(22 + in)) >> (31 - 9))
    | ((*(23 + in)) << 9);
    *(23 + out) = ((*(23 + in)) >> (31 - 8))
    | ((*(24 + in)) << 8);
    *(24 + out) = ((*(24 + in)) >> (31 - 7))
    | ((*(25 + in)) << 7);
    *(25 + out) = ((*(25 + in)) >> (31 - 6))
    | ((*(26 + in)) << 6);
    *(26 + out) = ((*(26 + in)) >> (31 - 5))
    | ((*(27 + in)) << 5);
    *(27 + out) = ((*(27 + in)) >> (31 - 4))
    | ((*(28 + in)) << 4);
    *(28 + out) = ((*(28 + in)) >> (31 - 3))
    | ((*(29 + in)) << 3);
    *(29 + out) = ((*(29 + in)) >> (31 - 2))
    | ((*(30 + in)) << 2);
    *(30 + out) = ((*(30 + in)) >> (31 - 1))
    | ((*(31 + in)) << 1);
}

void BitPacking::fastpackwithoutmask32(const unsigned int* in, unsigned int* out) {
    std::memcpy(out, in, 32);
}

void BitPacking::fastpackwithoutmask4(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 4)
    | ((*(2 + in)) << 8) | ((*(3 + in)) << 12)
    | ((*(4 + in)) << 16) | ((*(5 + in)) << 20)
    | ((*(6 + in)) << 24) | ((*(7 + in)) << 28);
    *(1 + out) = *(8 + in) | ((*(9 + in)) << 4)
    | ((*(10 + in)) << 8) | ((*(11 + in)) << 12)
    | ((*(12 + in)) << 16) | ((*(13 + in)) << 20)
    | ((*(14 + in)) << 24) | ((*(15 + in)) << 28);
    *(2 + out) = *(16 + in) | ((*(17 + in)) << 4)
    | ((*(18 + in)) << 8) | ((*(19 + in)) << 12)
    | ((*(20 + in)) << 16) | ((*(21 + in)) << 20)
    | ((*(22 + in)) << 24) | ((*(23 + in)) << 28);
    *(3 + out) = *(24 + in) | ((*(25 + in)) << 4)
    | ((*(26 + in)) << 8) | ((*(27 + in)) << 12)
    | ((*(28 + in)) << 16) | ((*(29 + in)) << 20)
    | ((*(30 + in)) << 24) | ((*(31 + in)) << 28);
}

void BitPacking::fastpackwithoutmask5(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 5)
    | ((*(2 + in)) << 10) | ((*(3 + in)) << 15)
    | ((*(4 + in)) << 20) | ((*(5 + in)) << 25)
    | ((*(6 + in)) << 30);
    *(1 + out) = ((*(6 + in)) >> (5 - 3))
    | ((*(7 + in)) << 3) | ((*(8 + in)) << 8)
    | ((*(9 + in)) << 13) | ((*(10 + in)) << 18)
    | ((*(11 + in)) << 23) | ((*(12 + in)) << 28);
    *(2 + out) = ((*(12 + in)) >> (5 - 1))
    | ((*(13 + in)) << 1) | ((*(14 + in)) << 6)
    | ((*(15 + in)) << 11) | ((*(16 + in)) << 16)
    | ((*(17 + in)) << 21) | ((*(18 + in)) << 26)
    | ((*(19 + in)) << 31);
    *(3 + out) = ((*(19 + in)) >> (5 - 4))
    | ((*(20 + in)) << 4) | ((*(21 + in)) << 9)
    | ((*(22 + in)) << 14) | ((*(23 + in)) << 19)
    | ((*(24 + in)) << 24) | ((*(25 + in)) << 29);
    *(4 + out) = ((*(25 + in)) >> (5 - 2))
    | ((*(26 + in)) << 2) | ((*(27 + in)) << 7)
    | ((*(28 + in)) << 12) | ((*(29 + in)) << 17)
    | ((*(30 + in)) << 22) | ((*(31 + in)) << 27);
}

void BitPacking::fastpackwithoutmask6(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 6)
    | ((*(2 + in)) << 12) | ((*(3 + in)) << 18)
    | ((*(4 + in)) << 24) | ((*(5 + in)) << 30);
    *(1 + out) = ((*(5 + in)) >> (6 - 4))
    | ((*(6 + in)) << 4) | ((*(7 + in)) << 10)
    | ((*(8 + in)) << 16) | ((*(9 + in)) << 22)
    | ((*(10 + in)) << 28);
    *(2 + out) = ((*(10 + in)) >> (6 - 2))
    | ((*(11 + in)) << 2) | ((*(12 + in)) << 8)
    | ((*(13 + in)) << 14) | ((*(14 + in)) << 20)
    | ((*(15 + in)) << 26);
    *(3 + out) = *(16 + in) | ((*(17 + in)) << 6)
    | ((*(18 + in)) << 12) | ((*(19 + in)) << 18)
    | ((*(20 + in)) << 24) | ((*(21 + in)) << 30);
    *(4 + out) = ((*(21 + in)) >> (6 - 4))
    | ((*(22 + in)) << 4) | ((*(23 + in)) << 10)
    | ((*(24 + in)) << 16) | ((*(25 + in)) << 22)
    | ((*(26 + in)) << 28);
    *(5 + out) = ((*(26 + in)) >> (6 - 2))
    | ((*(27 + in)) << 2) | ((*(28 + in)) << 8)
    | ((*(29 + in)) << 14) | ((*(30 + in)) << 20)
    | ((*(31 + in)) << 26);
}

void BitPacking::fastpackwithoutmask7(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 7)
    | ((*(2 + in)) << 14) | ((*(3 + in)) << 21)
    | ((*(4 + in)) << 28);
    *(1 + out) = ((*(4 + in)) >> (7 - 3))
    | ((*(5 + in)) << 3) | ((*(6 + in)) << 10)
    | ((*(7 + in)) << 17) | ((*(8 + in)) << 24)
    | ((*(9 + in)) << 31);
    *(2 + out) = ((*(9 + in)) >> (7 - 6))
    | ((*(10 + in)) << 6) | ((*(11 + in)) << 13)
    | ((*(12 + in)) << 20) | ((*(13 + in)) << 27);
    *(3 + out) = ((*(13 + in)) >> (7 - 2))
    | ((*(14 + in)) << 2) | ((*(15 + in)) << 9)
    | ((*(16 + in)) << 16) | ((*(17 + in)) << 23)
    | ((*(18 + in)) << 30);
    *(4 + out) = ((*(18 + in)) >> (7 - 5))
    | ((*(19 + in)) << 5) | ((*(20 + in)) << 12)
    | ((*(21 + in)) << 19) | ((*(22 + in)) << 26);
    *(5 + out) = ((*(22 + in)) >> (7 - 1))
    | ((*(23 + in)) << 1) | ((*(24 + in)) << 8)
    | ((*(25 + in)) << 15) | ((*(26 + in)) << 22)
    | ((*(27 + in)) << 29);
    *(6 + out) = ((*(27 + in)) >> (7 - 4))
    | ((*(28 + in)) << 4) | ((*(29 + in)) << 11)
    | ((*(30 + in)) << 18) | ((*(31 + in)) << 25);
}

void BitPacking::fastpackwithoutmask8(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 8)
    | ((*(2 + in)) << 16) | ((*(3 + in)) << 24);
    *(1 + out) = *(4 + in) | ((*(5 + in)) << 8)
    | ((*(6 + in)) << 16) | ((*(7 + in)) << 24);
    *(2 + out) = *(8 + in) | ((*(9 + in)) << 8)
    | ((*(10 + in)) << 16) | ((*(11 + in)) << 24);
    *(3 + out) = *(12 + in) | ((*(13 + in)) << 8)
    | ((*(14 + in)) << 16) | ((*(15 + in)) << 24);
    *(4 + out) = *(16 + in) | ((*(17 + in)) << 8)
    | ((*(18 + in)) << 16) | ((*(19 + in)) << 24);
    *(5 + out) = *(20 + in) | ((*(21 + in)) << 8)
    | ((*(22 + in)) << 16) | ((*(23 + in)) << 24);
    *(6 + out) = *(24 + in) | ((*(25 + in)) << 8)
    | ((*(26 + in)) << 16) | ((*(27 + in)) << 24);
    *(7 + out) = *(28 + in) | ((*(29 + in)) << 8)
    | ((*(30 + in)) << 16) | ((*(31 + in)) << 24);
}

void BitPacking::fastpackwithoutmask9(const unsigned int* in, unsigned int* out) {
    *(0 + out) = *(0 + in) | ((*(1 + in)) << 9)
    | ((*(2 + in)) << 18) | ((*(3 + in)) << 27);
    *(1 + out) = ((*(3 + in)) >> (9 - 4))
    | ((*(4 + in)) << 4) | ((*(5 + in)) << 13)
    | ((*(6 + in)) << 22) | ((*(7 + in)) << 31);
    *(2 + out) = ((*(7 + in)) >> (9 - 8))
    | ((*(8 + in)) << 8) | ((*(9 + in)) << 17)
    | ((*(10 + in)) << 26);
    *(3 + out) = ((*(10 + in)) >> (9 - 3))
    | ((*(11 + in)) << 3) | ((*(12 + in)) << 12)
    | ((*(13 + in)) << 21) | ((*(14 + in)) << 30);
    *(4 + out) = ((*(14 + in)) >> (9 - 7))
    | ((*(15 + in)) << 7) | ((*(16 + in)) << 16)
    | ((*(17 + in)) << 25);
    *(5 + out) = ((*(17 + in)) >> (9 - 2))
    | ((*(18 + in)) << 2) | ((*(19 + in)) << 11)
    | ((*(20 + in)) << 20) | ((*(21 + in)) << 29);
    *(6 + out) = ((*(21 + in)) >> (9 - 6))
    | ((*(22 + in)) << 6) | ((*(23 + in)) << 15)
    | ((*(24 + in)) << 24);
    *(7 + out) = ((*(24 + in)) >> (9 - 1))
    | ((*(25 + in)) << 1) | ((*(26 + in)) << 10)
    | ((*(27 + in)) << 19) | ((*(28 + in)) << 28);
    *(8 + out) = ((*(28 + in)) >> (9 - 5))
    | ((*(29 + in)) << 5) | ((*(30 + in)) << 14)
    | ((*(31 + in)) << 23);
}

void BitPacking::fastunpack0(const unsigned int* in, unsigned int* out) {
    for(unsigned int* i = out; i <= out + 32; i++)
        *out = 0;
}

void BitPacking::fastunpack1(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 1);
    *(1 + out) = ((*(0 + in) >> 1) & 1);
    *(2 + out) = ((*(0 + in) >> 2) & 1);
    *(3 + out) = ((*(0 + in) >> 3) & 1);
    *(4 + out) = ((*(0 + in) >> 4) & 1);
    *(5 + out) = ((*(0 + in) >> 5) & 1);
    *(6 + out) = ((*(0 + in) >> 6) & 1);
    *(7 + out) = ((*(0 + in) >> 7) & 1);
    *(8 + out) = ((*(0 + in) >> 8) & 1);
    *(9 + out) = ((*(0 + in) >> 9) & 1);
    *(10 + out) = ((*(0 + in) >> 10) & 1);
    *(11 + out) = ((*(0 + in) >> 11) & 1);
    *(12 + out) = ((*(0 + in) >> 12) & 1);
    *(13 + out) = ((*(0 + in) >> 13) & 1);
    *(14 + out) = ((*(0 + in) >> 14) & 1);
    *(15 + out) = ((*(0 + in) >> 15) & 1);
    *(16 + out) = ((*(0 + in) >> 16) & 1);
    *(17 + out) = ((*(0 + in) >> 17) & 1);
    *(18 + out) = ((*(0 + in) >> 18) & 1);
    *(19 + out) = ((*(0 + in) >> 19) & 1);
    *(20 + out) = ((*(0 + in) >> 20) & 1);
    *(21 + out) = ((*(0 + in) >> 21) & 1);
    *(22 + out) = ((*(0 + in) >> 22) & 1);
    *(23 + out) = ((*(0 + in) >> 23) & 1);
    *(24 + out) = ((*(0 + in) >> 24) & 1);
    *(25 + out) = ((*(0 + in) >> 25) & 1);
    *(26 + out) = ((*(0 + in) >> 26) & 1);
    *(27 + out) = ((*(0 + in) >> 27) & 1);
    *(28 + out) = ((*(0 + in) >> 28) & 1);
    *(29 + out) = ((*(0 + in) >> 29) & 1);
    *(30 + out) = ((*(0 + in) >> 30) & 1);
    *(31 + out) = (*(0 + in) >> 31);
}

void BitPacking::fastunpack10(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 1023);
    *(1 + out) = ((*(0 + in) >> 10) & 1023);
    *(2 + out) = ((*(0 + in) >> 20) & 1023);
    *(3 + out) = (*(0 + in) >> 30)
    | ((*(1 + in) & 255) << (10 - 8));
    *(4 + out) = ((*(1 + in) >> 8) & 1023);
    *(5 + out) = ((*(1 + in) >> 18) & 1023);
    *(6 + out) = (*(1 + in) >> 28)
    | ((*(2 + in) & 63) << (10 - 6));
    *(7 + out) = ((*(2 + in) >> 6) & 1023);
    *(8 + out) = ((*(2 + in) >> 16) & 1023);
    *(9 + out) = (*(2 + in) >> 26)
    | ((*(3 + in) & 15) << (10 - 4));
    *(10 + out) = ((*(3 + in) >> 4) & 1023);
    *(11 + out) = ((*(3 + in) >> 14) & 1023);
    *(12 + out) = (*(3 + in) >> 24)
    | ((*(4 + in) & 3) << (10 - 2));
    *(13 + out) = ((*(4 + in) >> 2) & 1023);
    *(14 + out) = ((*(4 + in) >> 12) & 1023);
    *(15 + out) = (*(4 + in) >> 22);
    *(16 + out) = ((*(5 + in) >> 0) & 1023);
    *(17 + out) = ((*(5 + in) >> 10) & 1023);
    *(18 + out) = ((*(5 + in) >> 20) & 1023);
    *(19 + out) = (*(5 + in) >> 30)
    | ((*(6 + in) & 255) << (10 - 8));
    *(20 + out) = ((*(6 + in) >> 8) & 1023);
    *(21 + out) = ((*(6 + in) >> 18) & 1023);
    *(22 + out) = (*(6 + in) >> 28)
    | ((*(7 + in) & 63) << (10 - 6));
    *(23 + out) = ((*(7 + in) >> 6) & 1023);
    *(24 + out) = ((*(7 + in) >> 16) & 1023);
    *(25 + out) = (*(7 + in) >> 26)
    | ((*(8 + in) & 15) << (10 - 4));
    *(26 + out) = ((*(8 + in) >> 4) & 1023);
    *(27 + out) = ((*(8 + in) >> 14) & 1023);
    *(28 + out) = (*(8 + in) >> 24)
    | ((*(9 + in) & 3) << (10 - 2));
    *(29 + out) = ((*(9 + in) >> 2) & 1023);
    *(30 + out) = ((*(9 + in) >> 12) & 1023);
    *(31 + out) = (*(9 + in) >> 22);
}

void BitPacking::fastunpack11(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 2047);
    *(1 + out) = ((*(0 + in) >> 11) & 2047);
    *(2 + out) = (*(0 + in) >> 22)
    | ((*(1 + in) & 1) << (11 - 1));
    *(3 + out) = ((*(1 + in) >> 1) & 2047);
    *(4 + out) = ((*(1 + in) >> 12) & 2047);
    *(5 + out) = (*(1 + in) >> 23)
    | ((*(2 + in) & 3) << (11 - 2));
    *(6 + out) = ((*(2 + in) >> 2) & 2047);
    *(7 + out) = ((*(2 + in) >> 13) & 2047);
    *(8 + out) = (*(2 + in) >> 24)
    | ((*(3 + in) & 7) << (11 - 3));
    *(9 + out) = ((*(3 + in) >> 3) & 2047);
    *(10 + out) = ((*(3 + in) >> 14) & 2047);
    *(11 + out) = (*(3 + in) >> 25)
    | ((*(4 + in) & 15) << (11 - 4));
    *(12 + out) = ((*(4 + in) >> 4) & 2047);
    *(13 + out) = ((*(4 + in) >> 15) & 2047);
    *(14 + out) = (*(4 + in) >> 26)
    | ((*(5 + in) & 31) << (11 - 5));
    *(15 + out) = ((*(5 + in) >> 5) & 2047);
    *(16 + out) = ((*(5 + in) >> 16) & 2047);
    *(17 + out) = (*(5 + in) >> 27)
    | ((*(6 + in) & 63) << (11 - 6));
    *(18 + out) = ((*(6 + in) >> 6) & 2047);
    *(19 + out) = ((*(6 + in) >> 17) & 2047);
    *(20 + out) = (*(6 + in) >> 28)
    | ((*(7 + in) & 127) << (11 - 7));
    *(21 + out) = ((*(7 + in) >> 7) & 2047);
    *(22 + out) = ((*(7 + in) >> 18) & 2047);
    *(23 + out) = (*(7 + in) >> 29)
    | ((*(8 + in) & 255) << (11 - 8));
    *(24 + out) = ((*(8 + in) >> 8) & 2047);
    *(25 + out) = ((*(8 + in) >> 19) & 2047);
    *(26 + out) = (*(8 + in) >> 30)
    | ((*(9 + in) & 511) << (11 - 9));
    *(27 + out) = ((*(9 + in) >> 9) & 2047);
    *(28 + out) = ((*(9 + in) >> 20) & 2047);
    *(29 + out) = (*(9 + in) >> 31)
    | ((*(10 + in) & 1023) << (11 - 10));
    *(30 + out) = ((*(10 + in) >> 10) & 2047);
    *(31 + out) = (*(10 + in) >> 21);
}

void BitPacking::fastunpack12(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 4095);
    *(1 + out) = ((*(0 + in) >> 12) & 4095);
    *(2 + out) = (*(0 + in) >> 24)
    | ((*(1 + in) & 15) << (12 - 4));
    *(3 + out) = ((*(1 + in) >> 4) & 4095);
    *(4 + out) = ((*(1 + in) >> 16) & 4095);
    *(5 + out) = (*(1 + in) >> 28)
    | ((*(2 + in) & 255) << (12 - 8));
    *(6 + out) = ((*(2 + in) >> 8) & 4095);
    *(7 + out) = (*(2 + in) >> 20);
    *(8 + out) = ((*(3 + in) >> 0) & 4095);
    *(9 + out) = ((*(3 + in) >> 12) & 4095);
    *(10 + out) = (*(3 + in) >> 24)
    | ((*(4 + in) & 15) << (12 - 4));
    *(11 + out) = ((*(4 + in) >> 4) & 4095);
    *(12 + out) = ((*(4 + in) >> 16) & 4095);
    *(13 + out) = (*(4 + in) >> 28)
    | ((*(5 + in) & 255) << (12 - 8));
    *(14 + out) = ((*(5 + in) >> 8) & 4095);
    *(15 + out) = (*(5 + in) >> 20);
    *(16 + out) = ((*(6 + in) >> 0) & 4095);
    *(17 + out) = ((*(6 + in) >> 12) & 4095);
    *(18 + out) = (*(6 + in) >> 24)
    | ((*(7 + in) & 15) << (12 - 4));
    *(19 + out) = ((*(7 + in) >> 4) & 4095);
    *(20 + out) = ((*(7 + in) >> 16) & 4095);
    *(21 + out) = (*(7 + in) >> 28)
    | ((*(8 + in) & 255) << (12 - 8));
    *(22 + out) = ((*(8 + in) >> 8) & 4095);
    *(23 + out) = (*(8 + in) >> 20);
    *(24 + out) = ((*(9 + in) >> 0) & 4095);
    *(25 + out) = ((*(9 + in) >> 12) & 4095);
    *(26 + out) = (*(9 + in) >> 24)
    | ((*(10 + in) & 15) << (12 - 4));
    *(27 + out) = ((*(10 + in) >> 4) & 4095);
    *(28 + out) = ((*(10 + in) >> 16) & 4095);
    *(29 + out) = (*(10 + in) >> 28)
    | ((*(11 + in) & 255) << (12 - 8));
    *(30 + out) = ((*(11 + in) >> 8) & 4095);
    *(31 + out) = (*(11 + in) >> 20);
}

void BitPacking::fastunpack13(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 8191);
    *(1 + out) = ((*(0 + in) >> 13) & 8191);
    *(2 + out) = (*(0 + in) >> 26)
    | ((*(1 + in) & 127) << (13 - 7));
    *(3 + out) = ((*(1 + in) >> 7) & 8191);
    *(4 + out) = (*(1 + in) >> 20)
    | ((*(2 + in) & 1) << (13 - 1));
    *(5 + out) = ((*(2 + in) >> 1) & 8191);
    *(6 + out) = ((*(2 + in) >> 14) & 8191);
    *(7 + out) = (*(2 + in) >> 27)
    | ((*(3 + in) & 255) << (13 - 8));
    *(8 + out) = ((*(3 + in) >> 8) & 8191);
    *(9 + out) = (*(3 + in) >> 21)
    | ((*(4 + in) & 3) << (13 - 2));
    *(10 + out) = ((*(4 + in) >> 2) & 8191);
    *(11 + out) = ((*(4 + in) >> 15) & 8191);
    *(12 + out) = (*(4 + in) >> 28)
    | ((*(5 + in) & 511) << (13 - 9));
    *(13 + out) = ((*(5 + in) >> 9) & 8191);
    *(14 + out) = (*(5 + in) >> 22)
    | ((*(6 + in) & 7) << (13 - 3));
    *(15 + out) = ((*(6 + in) >> 3) & 8191);
    *(16 + out) = ((*(6 + in) >> 16) & 8191);
    *(17 + out) = (*(6 + in) >> 29)
    | ((*(7 + in) & 1023) << (13 - 10));
    *(18 + out) = ((*(7 + in) >> 10) & 8191);
    *(19 + out) = (*(7 + in) >> 23)
    | ((*(8 + in) & 15) << (13 - 4));
    *(20 + out) = ((*(8 + in) >> 4) & 8191);
    *(21 + out) = ((*(8 + in) >> 17) & 8191);
    *(22 + out) = (*(8 + in) >> 30)
    | ((*(9 + in) & 2047) << (13 - 11));
    *(23 + out) = ((*(9 + in) >> 11) & 8191);
    *(24 + out) = (*(9 + in) >> 24)
    | ((*(10 + in) & 31) << (13 - 5));
    *(25 + out) = ((*(10 + in) >> 5) & 8191);
    *(26 + out) = ((*(10 + in) >> 18) & 8191);
    *(27 + out) = (*(10 + in) >> 31)
    | ((*(11 + in) & 4095) << (13 - 12));
    *(28 + out) = ((*(11 + in) >> 12) & 8191);
    *(29 + out) = (*(11 + in) >> 25)
    | ((*(12 + in) & 63) << (13 - 6));
    *(30 + out) = ((*(12 + in) >> 6) & 8191);
    *(31 + out) = (*(12 + in) >> 19);
}

void BitPacking::fastunpack14(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 16383);
    *(1 + out) = ((*(0 + in) >> 14) & 16383);
    *(2 + out) = (*(0 + in) >> 28)
    | ((*(1 + in) & 1023) << (14 - 10));
    *(3 + out) = ((*(1 + in) >> 10) & 16383);
    *(4 + out) = (*(1 + in) >> 24)
    | ((*(2 + in) & 63) << (14 - 6));
    *(5 + out) = ((*(2 + in) >> 6) & 16383);
    *(6 + out) = (*(2 + in) >> 20)
    | ((*(3 + in) & 3) << (14 - 2));
    *(7 + out) = ((*(3 + in) >> 2) & 16383);
    *(8 + out) = ((*(3 + in) >> 16) & 16383);
    *(9 + out) = (*(3 + in) >> 30)
    | ((*(4 + in) & 4095) << (14 - 12));
    *(10 + out) = ((*(4 + in) >> 12) & 16383);
    *(11 + out) = (*(4 + in) >> 26)
    | ((*(5 + in) & 255) << (14 - 8));
    *(12 + out) = ((*(5 + in) >> 8) & 16383);
    *(13 + out) = (*(5 + in) >> 22)
    | ((*(6 + in) & 15) << (14 - 4));
    *(14 + out) = ((*(6 + in) >> 4) & 16383);
    *(15 + out) = (*(6 + in) >> 18);
    *(16 + out) = ((*(7 + in) >> 0) & 16383);
    *(17 + out) = ((*(7 + in) >> 14) & 16383);
    *(18 + out) = (*(7 + in) >> 28)
    | ((*(8 + in) & 1023) << (14 - 10));
    *(19 + out) = ((*(8 + in) >> 10) & 16383);
    *(20 + out) = (*(8 + in) >> 24)
    | ((*(9 + in) & 63) << (14 - 6));
    *(21 + out) = ((*(9 + in) >> 6) & 16383);
    *(22 + out) = (*(9 + in) >> 20)
    | ((*(10 + in) & 3) << (14 - 2));
    *(23 + out) = ((*(10 + in) >> 2) & 16383);
    *(24 + out) = ((*(10 + in) >> 16) & 16383);
    *(25 + out) = (*(10 + in) >> 30)
    | ((*(11 + in) & 4095) << (14 - 12));
    *(26 + out) = ((*(11 + in) >> 12) & 16383);
    *(27 + out) = (*(11 + in) >> 26)
    | ((*(12 + in) & 255) << (14 - 8));
    *(28 + out) = ((*(12 + in) >> 8) & 16383);
    *(29 + out) = (*(12 + in) >> 22)
    | ((*(13 + in) & 15) << (14 - 4));
    *(30 + out) = ((*(13 + in) >> 4) & 16383);
    *(31 + out) = (*(13 + in) >> 18);
}

void BitPacking::fastunpack15(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 32767);
    *(1 + out) = ((*(0 + in) >> 15) & 32767);
    *(2 + out) = (*(0 + in) >> 30)
    | ((*(1 + in) & 8191) << (15 - 13));
    *(3 + out) = ((*(1 + in) >> 13) & 32767);
    *(4 + out) = (*(1 + in) >> 28)
    | ((*(2 + in) & 2047) << (15 - 11));
    *(5 + out) = ((*(2 + in) >> 11) & 32767);
    *(6 + out) = (*(2 + in) >> 26)
    | ((*(3 + in) & 511) << (15 - 9));
    *(7 + out) = ((*(3 + in) >> 9) & 32767);
    *(8 + out) = (*(3 + in) >> 24)
    | ((*(4 + in) & 127) << (15 - 7));
    *(9 + out) = ((*(4 + in) >> 7) & 32767);
    *(10 + out) = (*(4 + in) >> 22)
    | ((*(5 + in) & 31) << (15 - 5));
    *(11 + out) = ((*(5 + in) >> 5) & 32767);
    *(12 + out) = (*(5 + in) >> 20)
    | ((*(6 + in) & 7) << (15 - 3));
    *(13 + out) = ((*(6 + in) >> 3) & 32767);
    *(14 + out) = (*(6 + in) >> 18)
    | ((*(7 + in) & 1) << (15 - 1));
    *(15 + out) = ((*(7 + in) >> 1) & 32767);
    *(16 + out) = ((*(7 + in) >> 16) & 32767);
    *(17 + out) = (*(7 + in) >> 31)
    | ((*(8 + in) & 16383) << (15 - 14));
    *(18 + out) = ((*(8 + in) >> 14) & 32767);
    *(19 + out) = (*(8 + in) >> 29)
    | ((*(9 + in) & 4095) << (15 - 12));
    *(20 + out) = ((*(9 + in) >> 12) & 32767);
    *(21 + out) = (*(9 + in) >> 27)
    | ((*(10 + in) & 1023) << (15 - 10));
    *(22 + out) = ((*(10 + in) >> 10) & 32767);
    *(23 + out) = (*(10 + in) >> 25)
    | ((*(11 + in) & 255) << (15 - 8));
    *(24 + out) = ((*(11 + in) >> 8) & 32767);
    *(25 + out) = (*(11 + in) >> 23)
    | ((*(12 + in) & 63) << (15 - 6));
    *(26 + out) = ((*(12 + in) >> 6) & 32767);
    *(27 + out) = (*(12 + in) >> 21)
    | ((*(13 + in) & 15) << (15 - 4));
    *(28 + out) = ((*(13 + in) >> 4) & 32767);
    *(29 + out) = (*(13 + in) >> 19)
    | ((*(14 + in) & 3) << (15 - 2));
    *(30 + out) = ((*(14 + in) >> 2) & 32767);
    *(31 + out) = (*(14 + in) >> 17);
}

void BitPacking::fastunpack16(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 65535);
    *(1 + out) = (*(0 + in) >> 16);
    *(2 + out) = ((*(1 + in) >> 0) & 65535);
    *(3 + out) = (*(1 + in) >> 16);
    *(4 + out) = ((*(2 + in) >> 0) & 65535);
    *(5 + out) = (*(2 + in) >> 16);
    *(6 + out) = ((*(3 + in) >> 0) & 65535);
    *(7 + out) = (*(3 + in) >> 16);
    *(8 + out) = ((*(4 + in) >> 0) & 65535);
    *(9 + out) = (*(4 + in) >> 16);
    *(10 + out) = ((*(5 + in) >> 0) & 65535);
    *(11 + out) = (*(5 + in) >> 16);
    *(12 + out) = ((*(6 + in) >> 0) & 65535);
    *(13 + out) = (*(6 + in) >> 16);
    *(14 + out) = ((*(7 + in) >> 0) & 65535);
    *(15 + out) = (*(7 + in) >> 16);
    *(16 + out) = ((*(8 + in) >> 0) & 65535);
    *(17 + out) = (*(8 + in) >> 16);
    *(18 + out) = ((*(9 + in) >> 0) & 65535);
    *(19 + out) = (*(9 + in) >> 16);
    *(20 + out) = ((*(10 + in) >> 0) & 65535);
    *(21 + out) = (*(10 + in) >> 16);
    *(22 + out) = ((*(11 + in) >> 0) & 65535);
    *(23 + out) = (*(11 + in) >> 16);
    *(24 + out) = ((*(12 + in) >> 0) & 65535);
    *(25 + out) = (*(12 + in) >> 16);
    *(26 + out) = ((*(13 + in) >> 0) & 65535);
    *(27 + out) = (*(13 + in) >> 16);
    *(28 + out) = ((*(14 + in) >> 0) & 65535);
    *(29 + out) = (*(14 + in) >> 16);
    *(30 + out) = ((*(15 + in) >> 0) & 65535);
    *(31 + out) = (*(15 + in) >> 16);
}

void BitPacking::fastunpack17(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 131071);
    *(1 + out) = (*(0 + in) >> 17)
    | ((*(1 + in) & 3) << (17 - 2));
    *(2 + out) = ((*(1 + in) >> 2) & 131071);
    *(3 + out) = (*(1 + in) >> 19)
    | ((*(2 + in) & 15) << (17 - 4));
    *(4 + out) = ((*(2 + in) >> 4) & 131071);
    *(5 + out) = (*(2 + in) >> 21)
    | ((*(3 + in) & 63) << (17 - 6));
    *(6 + out) = ((*(3 + in) >> 6) & 131071);
    *(7 + out) = (*(3 + in) >> 23)
    | ((*(4 + in) & 255) << (17 - 8));
    *(8 + out) = ((*(4 + in) >> 8) & 131071);
    *(9 + out) = (*(4 + in) >> 25)
    | ((*(5 + in) & 1023) << (17 - 10));
    *(10 + out) = ((*(5 + in) >> 10) & 131071);
    *(11 + out) = (*(5 + in) >> 27)
    | ((*(6 + in) & 4095) << (17 - 12));
    *(12 + out) = ((*(6 + in) >> 12) & 131071);
    *(13 + out) = (*(6 + in) >> 29)
    | ((*(7 + in) & 16383) << (17 - 14));
    *(14 + out) = ((*(7 + in) >> 14) & 131071);
    *(15 + out) = (*(7 + in) >> 31)
    | ((*(8 + in) & 65535) << (17 - 16));
    *(16 + out) = (*(8 + in) >> 16)
    | ((*(9 + in) & 1) << (17 - 1));
    *(17 + out) = ((*(9 + in) >> 1) & 131071);
    *(18 + out) = (*(9 + in) >> 18)
    | ((*(10 + in) & 7) << (17 - 3));
    *(19 + out) = ((*(10 + in) >> 3) & 131071);
    *(20 + out) = (*(10 + in) >> 20)
    | ((*(11 + in) & 31) << (17 - 5));
    *(21 + out) = ((*(11 + in) >> 5) & 131071);
    *(22 + out) = (*(11 + in) >> 22)
    | ((*(12 + in) & 127) << (17 - 7));
    *(23 + out) = ((*(12 + in) >> 7) & 131071);
    *(24 + out) = (*(12 + in) >> 24)
    | ((*(13 + in) & 511) << (17 - 9));
    *(25 + out) = ((*(13 + in) >> 9) & 131071);
    *(26 + out) = (*(13 + in) >> 26)
    | ((*(14 + in) & 2047) << (17 - 11));
    *(27 + out) = ((*(14 + in) >> 11) & 131071);
    *(28 + out) = (*(14 + in) >> 28)
    | ((*(15 + in) & 8191) << (17 - 13));
    *(29 + out) = ((*(15 + in) >> 13) & 131071);
    *(30 + out) = (*(15 + in) >> 30)
    | ((*(16 + in) & 32767) << (17 - 15));
    *(31 + out) = (*(16 + in) >> 15);
}

void BitPacking::fastunpack18(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 262143);
    *(1 + out) = (*(0 + in) >> 18)
    | ((*(1 + in) & 15) << (18 - 4));
    *(2 + out) = ((*(1 + in) >> 4) & 262143);
    *(3 + out) = (*(1 + in) >> 22)
    | ((*(2 + in) & 255) << (18 - 8));
    *(4 + out) = ((*(2 + in) >> 8) & 262143);
    *(5 + out) = (*(2 + in) >> 26)
    | ((*(3 + in) & 4095) << (18 - 12));
    *(6 + out) = ((*(3 + in) >> 12) & 262143);
    *(7 + out) = (*(3 + in) >> 30)
    | ((*(4 + in) & 65535) << (18 - 16));
    *(8 + out) = (*(4 + in) >> 16)
    | ((*(5 + in) & 3) << (18 - 2));
    *(9 + out) = ((*(5 + in) >> 2) & 262143);
    *(10 + out) = (*(5 + in) >> 20)
    | ((*(6 + in) & 63) << (18 - 6));
    *(11 + out) = ((*(6 + in) >> 6) & 262143);
    *(12 + out) = (*(6 + in) >> 24)
    | ((*(7 + in) & 1023) << (18 - 10));
    *(13 + out) = ((*(7 + in) >> 10) & 262143);
    *(14 + out) = (*(7 + in) >> 28)
    | ((*(8 + in) & 16383) << (18 - 14));
    *(15 + out) = (*(8 + in) >> 14);
    *(16 + out) = ((*(9 + in) >> 0) & 262143);
    *(17 + out) = (*(9 + in) >> 18)
    | ((*(10 + in) & 15) << (18 - 4));
    *(18 + out) = ((*(10 + in) >> 4) & 262143);
    *(19 + out) = (*(10 + in) >> 22)
    | ((*(11 + in) & 255) << (18 - 8));
    *(20 + out) = ((*(11 + in) >> 8) & 262143);
    *(21 + out) = (*(11 + in) >> 26)
    | ((*(12 + in) & 4095) << (18 - 12));
    *(22 + out) = ((*(12 + in) >> 12) & 262143);
    *(23 + out) = (*(12 + in) >> 30)
    | ((*(13 + in) & 65535) << (18 - 16));
    *(24 + out) = (*(13 + in) >> 16)
    | ((*(14 + in) & 3) << (18 - 2));
    *(25 + out) = ((*(14 + in) >> 2) & 262143);
    *(26 + out) = (*(14 + in) >> 20)
    | ((*(15 + in) & 63) << (18 - 6));
    *(27 + out) = ((*(15 + in) >> 6) & 262143);
    *(28 + out) = (*(15 + in) >> 24)
    | ((*(16 + in) & 1023) << (18 - 10));
    *(29 + out) = ((*(16 + in) >> 10) & 262143);
    *(30 + out) = (*(16 + in) >> 28)
    | ((*(17 + in) & 16383) << (18 - 14));
    *(31 + out) = (*(17 + in) >> 14);
}

void BitPacking::fastunpack19(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 524287);
    *(1 + out) = (*(0 + in) >> 19)
    | ((*(1 + in) & 63) << (19 - 6));
    *(2 + out) = ((*(1 + in) >> 6) & 524287);
    *(3 + out) = (*(1 + in) >> 25)
    | ((*(2 + in) & 4095) << (19 - 12));
    *(4 + out) = ((*(2 + in) >> 12) & 524287);
    *(5 + out) = (*(2 + in) >> 31)
    | ((*(3 + in) & 262143) << (19 - 18));
    *(6 + out) = (*(3 + in) >> 18)
    | ((*(4 + in) & 31) << (19 - 5));
    *(7 + out) = ((*(4 + in) >> 5) & 524287);
    *(8 + out) = (*(4 + in) >> 24)
    | ((*(5 + in) & 2047) << (19 - 11));
    *(9 + out) = ((*(5 + in) >> 11) & 524287);
    *(10 + out) = (*(5 + in) >> 30)
    | ((*(6 + in) & 131071) << (19 - 17));
    *(11 + out) = (*(6 + in) >> 17)
    | ((*(7 + in) & 15) << (19 - 4));
    *(12 + out) = ((*(7 + in) >> 4) & 524287);
    *(13 + out) = (*(7 + in) >> 23)
    | ((*(8 + in) & 1023) << (19 - 10));
    *(14 + out) = ((*(8 + in) >> 10) & 524287);
    *(15 + out) = (*(8 + in) >> 29)
    | ((*(9 + in) & 65535) << (19 - 16));
    *(16 + out) = (*(9 + in) >> 16)
    | ((*(10 + in) & 7) << (19 - 3));
    *(17 + out) = ((*(10 + in) >> 3) & 524287);
    *(18 + out) = (*(10 + in) >> 22)
    | ((*(11 + in) & 511) << (19 - 9));
    *(19 + out) = ((*(11 + in) >> 9) & 524287);
    *(20 + out) = (*(11 + in) >> 28)
    | ((*(12 + in) & 32767) << (19 - 15));
    *(21 + out) = (*(12 + in) >> 15)
    | ((*(13 + in) & 3) << (19 - 2));
    *(22 + out) = ((*(13 + in) >> 2) & 524287);
    *(23 + out) = (*(13 + in) >> 21)
    | ((*(14 + in) & 255) << (19 - 8));
    *(24 + out) = ((*(14 + in) >> 8) & 524287);
    *(25 + out) = (*(14 + in) >> 27)
    | ((*(15 + in) & 16383) << (19 - 14));
    *(26 + out) = (*(15 + in) >> 14)
    | ((*(16 + in) & 1) << (19 - 1));
    *(27 + out) = ((*(16 + in) >> 1) & 524287);
    *(28 + out) = (*(16 + in) >> 20)
    | ((*(17 + in) & 127) << (19 - 7));
    *(29 + out) = ((*(17 + in) >> 7) & 524287);
    *(30 + out) = (*(17 + in) >> 26)
    | ((*(18 + in) & 8191) << (19 - 13));
    *(31 + out) = (*(18 + in) >> 13);
}

void BitPacking::fastunpack2(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 3);
    *(1 + out) = ((*(0 + in) >> 2) & 3);
    *(2 + out) = ((*(0 + in) >> 4) & 3);
    *(3 + out) = ((*(0 + in) >> 6) & 3);
    *(4 + out) = ((*(0 + in) >> 8) & 3);
    *(5 + out) = ((*(0 + in) >> 10) & 3);
    *(6 + out) = ((*(0 + in) >> 12) & 3);
    *(7 + out) = ((*(0 + in) >> 14) & 3);
    *(8 + out) = ((*(0 + in) >> 16) & 3);
    *(9 + out) = ((*(0 + in) >> 18) & 3);
    *(10 + out) = ((*(0 + in) >> 20) & 3);
    *(11 + out) = ((*(0 + in) >> 22) & 3);
    *(12 + out) = ((*(0 + in) >> 24) & 3);
    *(13 + out) = ((*(0 + in) >> 26) & 3);
    *(14 + out) = ((*(0 + in) >> 28) & 3);
    *(15 + out) = (*(0 + in) >> 30);
    *(16 + out) = ((*(1 + in) >> 0) & 3);
    *(17 + out) = ((*(1 + in) >> 2) & 3);
    *(18 + out) = ((*(1 + in) >> 4) & 3);
    *(19 + out) = ((*(1 + in) >> 6) & 3);
    *(20 + out) = ((*(1 + in) >> 8) & 3);
    *(21 + out) = ((*(1 + in) >> 10) & 3);
    *(22 + out) = ((*(1 + in) >> 12) & 3);
    *(23 + out) = ((*(1 + in) >> 14) & 3);
    *(24 + out) = ((*(1 + in) >> 16) & 3);
    *(25 + out) = ((*(1 + in) >> 18) & 3);
    *(26 + out) = ((*(1 + in) >> 20) & 3);
    *(27 + out) = ((*(1 + in) >> 22) & 3);
    *(28 + out) = ((*(1 + in) >> 24) & 3);
    *(29 + out) = ((*(1 + in) >> 26) & 3);
    *(30 + out) = ((*(1 + in) >> 28) & 3);
    *(31 + out) = (*(1 + in) >> 30);
}

void BitPacking::fastunpack20(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 1048575);
    *(1 + out) = (*(0 + in) >> 20)
    | ((*(1 + in) & 255) << (20 - 8));
    *(2 + out) = ((*(1 + in) >> 8) & 1048575);
    *(3 + out) = (*(1 + in) >> 28)
    | ((*(2 + in) & 65535) << (20 - 16));
    *(4 + out) = (*(2 + in) >> 16)
    | ((*(3 + in) & 15) << (20 - 4));
    *(5 + out) = ((*(3 + in) >> 4) & 1048575);
    *(6 + out) = (*(3 + in) >> 24)
    | ((*(4 + in) & 4095) << (20 - 12));
    *(7 + out) = (*(4 + in) >> 12);
    *(8 + out) = ((*(5 + in) >> 0) & 1048575);
    *(9 + out) = (*(5 + in) >> 20)
    | ((*(6 + in) & 255) << (20 - 8));
    *(10 + out) = ((*(6 + in) >> 8) & 1048575);
    *(11 + out) = (*(6 + in) >> 28)
    | ((*(7 + in) & 65535) << (20 - 16));
    *(12 + out) = (*(7 + in) >> 16)
    | ((*(8 + in) & 15) << (20 - 4));
    *(13 + out) = ((*(8 + in) >> 4) & 1048575);
    *(14 + out) = (*(8 + in) >> 24)
    | ((*(9 + in) & 4095) << (20 - 12));
    *(15 + out) = (*(9 + in) >> 12);
    *(16 + out) = ((*(10 + in) >> 0) & 1048575);
    *(17 + out) = (*(10 + in) >> 20)
    | ((*(11 + in) & 255) << (20 - 8));
    *(18 + out) = ((*(11 + in) >> 8) & 1048575);
    *(19 + out) = (*(11 + in) >> 28)
    | ((*(12 + in) & 65535) << (20 - 16));
    *(20 + out) = (*(12 + in) >> 16)
    | ((*(13 + in) & 15) << (20 - 4));
    *(21 + out) = ((*(13 + in) >> 4) & 1048575);
    *(22 + out) = (*(13 + in) >> 24)
    | ((*(14 + in) & 4095) << (20 - 12));
    *(23 + out) = (*(14 + in) >> 12);
    *(24 + out) = ((*(15 + in) >> 0) & 1048575);
    *(25 + out) = (*(15 + in) >> 20)
    | ((*(16 + in) & 255) << (20 - 8));
    *(26 + out) = ((*(16 + in) >> 8) & 1048575);
    *(27 + out) = (*(16 + in) >> 28)
    | ((*(17 + in) & 65535) << (20 - 16));
    *(28 + out) = (*(17 + in) >> 16)
    | ((*(18 + in) & 15) << (20 - 4));
    *(29 + out) = ((*(18 + in) >> 4) & 1048575);
    *(30 + out) = (*(18 + in) >> 24)
    | ((*(19 + in) & 4095) << (20 - 12));
    *(31 + out) = (*(19 + in) >> 12);
}

void BitPacking::fastunpack21(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 2097151);
    *(1 + out) = (*(0 + in) >> 21)
    | ((*(1 + in) & 1023) << (21 - 10));
    *(2 + out) = ((*(1 + in) >> 10) & 2097151);
    *(3 + out) = (*(1 + in) >> 31)
    | ((*(2 + in) & 1048575) << (21 - 20));
    *(4 + out) = (*(2 + in) >> 20)
    | ((*(3 + in) & 511) << (21 - 9));
    *(5 + out) = ((*(3 + in) >> 9) & 2097151);
    *(6 + out) = (*(3 + in) >> 30)
    | ((*(4 + in) & 524287) << (21 - 19));
    *(7 + out) = (*(4 + in) >> 19)
    | ((*(5 + in) & 255) << (21 - 8));
    *(8 + out) = ((*(5 + in) >> 8) & 2097151);
    *(9 + out) = (*(5 + in) >> 29)
    | ((*(6 + in) & 262143) << (21 - 18));
    *(10 + out) = (*(6 + in) >> 18)
    | ((*(7 + in) & 127) << (21 - 7));
    *(11 + out) = ((*(7 + in) >> 7) & 2097151);
    *(12 + out) = (*(7 + in) >> 28)
    | ((*(8 + in) & 131071) << (21 - 17));
    *(13 + out) = (*(8 + in) >> 17)
    | ((*(9 + in) & 63) << (21 - 6));
    *(14 + out) = ((*(9 + in) >> 6) & 2097151);
    *(15 + out) = (*(9 + in) >> 27)
    | ((*(10 + in) & 65535) << (21 - 16));
    *(16 + out) = (*(10 + in) >> 16)
    | ((*(11 + in) & 31) << (21 - 5));
    *(17 + out) = ((*(11 + in) >> 5) & 2097151);
    *(18 + out) = (*(11 + in) >> 26)
    | ((*(12 + in) & 32767) << (21 - 15));
    *(19 + out) = (*(12 + in) >> 15)
    | ((*(13 + in) & 15) << (21 - 4));
    *(20 + out) = ((*(13 + in) >> 4) & 2097151);
    *(21 + out) = (*(13 + in) >> 25)
    | ((*(14 + in) & 16383) << (21 - 14));
    *(22 + out) = (*(14 + in) >> 14)
    | ((*(15 + in) & 7) << (21 - 3));
    *(23 + out) = ((*(15 + in) >> 3) & 2097151);
    *(24 + out) = (*(15 + in) >> 24)
    | ((*(16 + in) & 8191) << (21 - 13));
    *(25 + out) = (*(16 + in) >> 13)
    | ((*(17 + in) & 3) << (21 - 2));
    *(26 + out) = ((*(17 + in) >> 2) & 2097151);
    *(27 + out) = (*(17 + in) >> 23)
    | ((*(18 + in) & 4095) << (21 - 12));
    *(28 + out) = (*(18 + in) >> 12)
    | ((*(19 + in) & 1) << (21 - 1));
    *(29 + out) = ((*(19 + in) >> 1) & 2097151);
    *(30 + out) = (*(19 + in) >> 22)
    | ((*(20 + in) & 2047) << (21 - 11));
    *(31 + out) = (*(20 + in) >> 11);
}

void BitPacking::fastunpack22(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 4194303);
    *(1 + out) = (*(0 + in) >> 22)
    | ((*(1 + in) & 4095) << (22 - 12));
    *(2 + out) = (*(1 + in) >> 12)
    | ((*(2 + in) & 3) << (22 - 2));
    *(3 + out) = ((*(2 + in) >> 2) & 4194303);
    *(4 + out) = (*(2 + in) >> 24)
    | ((*(3 + in) & 16383) << (22 - 14));
    *(5 + out) = (*(3 + in) >> 14)
    | ((*(4 + in) & 15) << (22 - 4));
    *(6 + out) = ((*(4 + in) >> 4) & 4194303);
    *(7 + out) = (*(4 + in) >> 26)
    | ((*(5 + in) & 65535) << (22 - 16));
    *(8 + out) = (*(5 + in) >> 16)
    | ((*(6 + in) & 63) << (22 - 6));
    *(9 + out) = ((*(6 + in) >> 6) & 4194303);
    *(10 + out) = (*(6 + in) >> 28)
    | ((*(7 + in) & 262143) << (22 - 18));
    *(11 + out) = (*(7 + in) >> 18)
    | ((*(8 + in) & 255) << (22 - 8));
    *(12 + out) = ((*(8 + in) >> 8) & 4194303);
    *(13 + out) = (*(8 + in) >> 30)
    | ((*(9 + in) & 1048575) << (22 - 20));
    *(14 + out) = (*(9 + in) >> 20)
    | ((*(10 + in) & 1023) << (22 - 10));
    *(15 + out) = (*(10 + in) >> 10);
    *(16 + out) = ((*(11 + in) >> 0) & 4194303);
    *(17 + out) = (*(11 + in) >> 22)
    | ((*(12 + in) & 4095) << (22 - 12));
    *(18 + out) = (*(12 + in) >> 12)
    | ((*(13 + in) & 3) << (22 - 2));
    *(19 + out) = ((*(13 + in) >> 2) & 4194303);
    *(20 + out) = (*(13 + in) >> 24)
    | ((*(14 + in) & 16383) << (22 - 14));
    *(21 + out) = (*(14 + in) >> 14)
    | ((*(15 + in) & 15) << (22 - 4));
    *(22 + out) = ((*(15 + in) >> 4) & 4194303);
    *(23 + out) = (*(15 + in) >> 26)
    | ((*(16 + in) & 65535) << (22 - 16));
    *(24 + out) = (*(16 + in) >> 16)
    | ((*(17 + in) & 63) << (22 - 6));
    *(25 + out) = ((*(17 + in) >> 6) & 4194303);
    *(26 + out) = (*(17 + in) >> 28)
    | ((*(18 + in) & 262143) << (22 - 18));
    *(27 + out) = (*(18 + in) >> 18)
    | ((*(19 + in) & 255) << (22 - 8));
    *(28 + out) = ((*(19 + in) >> 8) & 4194303);
    *(29 + out) = (*(19 + in) >> 30)
    | ((*(20 + in) & 1048575) << (22 - 20));
    *(30 + out) = (*(20 + in) >> 20)
    | ((*(21 + in) & 1023) << (22 - 10));
    *(31 + out) = (*(21 + in) >> 10);
}

void BitPacking::fastunpack23(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 8388607);
    *(1 + out) = (*(0 + in) >> 23)
    | ((*(1 + in) & 16383) << (23 - 14));
    *(2 + out) = (*(1 + in) >> 14)
    | ((*(2 + in) & 31) << (23 - 5));
    *(3 + out) = ((*(2 + in) >> 5) & 8388607);
    *(4 + out) = (*(2 + in) >> 28)
    | ((*(3 + in) & 524287) << (23 - 19));
    *(5 + out) = (*(3 + in) >> 19)
    | ((*(4 + in) & 1023) << (23 - 10));
    *(6 + out) = (*(4 + in) >> 10)
    | ((*(5 + in) & 1) << (23 - 1));
    *(7 + out) = ((*(5 + in) >> 1) & 8388607);
    *(8 + out) = (*(5 + in) >> 24)
    | ((*(6 + in) & 32767) << (23 - 15));
    *(9 + out) = (*(6 + in) >> 15)
    | ((*(7 + in) & 63) << (23 - 6));
    *(10 + out) = ((*(7 + in) >> 6) & 8388607);
    *(11 + out) = (*(7 + in) >> 29)
    | ((*(8 + in) & 1048575) << (23 - 20));
    *(12 + out) = (*(8 + in) >> 20)
    | ((*(9 + in) & 2047) << (23 - 11));
    *(13 + out) = (*(9 + in) >> 11)
    | ((*(10 + in) & 3) << (23 - 2));
    *(14 + out) = ((*(10 + in) >> 2) & 8388607);
    *(15 + out) = (*(10 + in) >> 25)
    | ((*(11 + in) & 65535) << (23 - 16));
    *(16 + out) = (*(11 + in) >> 16)
    | ((*(12 + in) & 127) << (23 - 7));
    *(17 + out) = ((*(12 + in) >> 7) & 8388607);
    *(18 + out) = (*(12 + in) >> 30)
    | ((*(13 + in) & 2097151) << (23 - 21));
    *(19 + out) = (*(13 + in) >> 21)
    | ((*(14 + in) & 4095) << (23 - 12));
    *(20 + out) = (*(14 + in) >> 12)
    | ((*(15 + in) & 7) << (23 - 3));
    *(21 + out) = ((*(15 + in) >> 3) & 8388607);
    *(22 + out) = (*(15 + in) >> 26)
    | ((*(16 + in) & 131071) << (23 - 17));
    *(23 + out) = (*(16 + in) >> 17)
    | ((*(17 + in) & 255) << (23 - 8));
    *(24 + out) = ((*(17 + in) >> 8) & 8388607);
    *(25 + out) = (*(17 + in) >> 31)
    | ((*(18 + in) & 4194303) << (23 - 22));
    *(26 + out) = (*(18 + in) >> 22)
    | ((*(19 + in) & 8191) << (23 - 13));
    *(27 + out) = (*(19 + in) >> 13)
    | ((*(20 + in) & 15) << (23 - 4));
    *(28 + out) = ((*(20 + in) >> 4) & 8388607);
    *(29 + out) = (*(20 + in) >> 27)
    | ((*(21 + in) & 262143) << (23 - 18));
    *(30 + out) = (*(21 + in) >> 18)
    | ((*(22 + in) & 511) << (23 - 9));
    *(31 + out) = (*(22 + in) >> 9);
}

void BitPacking::fastunpack24(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 16777215);
    *(1 + out) = (*(0 + in) >> 24)
    | ((*(1 + in) & 65535) << (24 - 16));
    *(2 + out) = (*(1 + in) >> 16)
    | ((*(2 + in) & 255) << (24 - 8));
    *(3 + out) = (*(2 + in) >> 8);
    *(4 + out) = ((*(3 + in) >> 0) & 16777215);
    *(5 + out) = (*(3 + in) >> 24)
    | ((*(4 + in) & 65535) << (24 - 16));
    *(6 + out) = (*(4 + in) >> 16)
    | ((*(5 + in) & 255) << (24 - 8));
    *(7 + out) = (*(5 + in) >> 8);
    *(8 + out) = ((*(6 + in) >> 0) & 16777215);
    *(9 + out) = (*(6 + in) >> 24)
    | ((*(7 + in) & 65535) << (24 - 16));
    *(10 + out) = (*(7 + in) >> 16)
    | ((*(8 + in) & 255) << (24 - 8));
    *(11 + out) = (*(8 + in) >> 8);
    *(12 + out) = ((*(9 + in) >> 0) & 16777215);
    *(13 + out) = (*(9 + in) >> 24)
    | ((*(10 + in) & 65535) << (24 - 16));
    *(14 + out) = (*(10 + in) >> 16)
    | ((*(11 + in) & 255) << (24 - 8));
    *(15 + out) = (*(11 + in) >> 8);
    *(16 + out) = ((*(12 + in) >> 0) & 16777215);
    *(17 + out) = (*(12 + in) >> 24)
    | ((*(13 + in) & 65535) << (24 - 16));
    *(18 + out) = (*(13 + in) >> 16)
    | ((*(14 + in) & 255) << (24 - 8));
    *(19 + out) = (*(14 + in) >> 8);
    *(20 + out) = ((*(15 + in) >> 0) & 16777215);
    *(21 + out) = (*(15 + in) >> 24)
    | ((*(16 + in) & 65535) << (24 - 16));
    *(22 + out) = (*(16 + in) >> 16)
    | ((*(17 + in) & 255) << (24 - 8));
    *(23 + out) = (*(17 + in) >> 8);
    *(24 + out) = ((*(18 + in) >> 0) & 16777215);
    *(25 + out) = (*(18 + in) >> 24)
    | ((*(19 + in) & 65535) << (24 - 16));
    *(26 + out) = (*(19 + in) >> 16)
    | ((*(20 + in) & 255) << (24 - 8));
    *(27 + out) = (*(20 + in) >> 8);
    *(28 + out) = ((*(21 + in) >> 0) & 16777215);
    *(29 + out) = (*(21 + in) >> 24)
    | ((*(22 + in) & 65535) << (24 - 16));
    *(30 + out) = (*(22 + in) >> 16)
    | ((*(23 + in) & 255) << (24 - 8));
    *(31 + out) = (*(23 + in) >> 8);
}

void BitPacking::fastunpack25(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 33554431);
    *(1 + out) = (*(0 + in) >> 25)
    | ((*(1 + in) & 262143) << (25 - 18));
    *(2 + out) = (*(1 + in) >> 18)
    | ((*(2 + in) & 2047) << (25 - 11));
    *(3 + out) = (*(2 + in) >> 11)
    | ((*(3 + in) & 15) << (25 - 4));
    *(4 + out) = ((*(3 + in) >> 4) & 33554431);
    *(5 + out) = (*(3 + in) >> 29)
    | ((*(4 + in) & 4194303) << (25 - 22));
    *(6 + out) = (*(4 + in) >> 22)
    | ((*(5 + in) & 32767) << (25 - 15));
    *(7 + out) = (*(5 + in) >> 15)
    | ((*(6 + in) & 255) << (25 - 8));
    *(8 + out) = (*(6 + in) >> 8)
    | ((*(7 + in) & 1) << (25 - 1));
    *(9 + out) = ((*(7 + in) >> 1) & 33554431);
    *(10 + out) = (*(7 + in) >> 26)
    | ((*(8 + in) & 524287) << (25 - 19));
    *(11 + out) = (*(8 + in) >> 19)
    | ((*(9 + in) & 4095) << (25 - 12));
    *(12 + out) = (*(9 + in) >> 12)
    | ((*(10 + in) & 31) << (25 - 5));
    *(13 + out) = ((*(10 + in) >> 5) & 33554431);
    *(14 + out) = (*(10 + in) >> 30)
    | ((*(11 + in) & 8388607) << (25 - 23));
    *(15 + out) = (*(11 + in) >> 23)
    | ((*(12 + in) & 65535) << (25 - 16));
    *(16 + out) = (*(12 + in) >> 16)
    | ((*(13 + in) & 511) << (25 - 9));
    *(17 + out) = (*(13 + in) >> 9)
    | ((*(14 + in) & 3) << (25 - 2));
    *(18 + out) = ((*(14 + in) >> 2) & 33554431);
    *(19 + out) = (*(14 + in) >> 27)
    | ((*(15 + in) & 1048575) << (25 - 20));
    *(20 + out) = (*(15 + in) >> 20)
    | ((*(16 + in) & 8191) << (25 - 13));
    *(21 + out) = (*(16 + in) >> 13)
    | ((*(17 + in) & 63) << (25 - 6));
    *(22 + out) = ((*(17 + in) >> 6) & 33554431);
    *(23 + out) = (*(17 + in) >> 31)
    | ((*(18 + in) & 16777215) << (25 - 24));
    *(24 + out) = (*(18 + in) >> 24)
    | ((*(19 + in) & 131071) << (25 - 17));
    *(25 + out) = (*(19 + in) >> 17)
    | ((*(20 + in) & 1023) << (25 - 10));
    *(26 + out) = (*(20 + in) >> 10)
    | ((*(21 + in) & 7) << (25 - 3));
    *(27 + out) = ((*(21 + in) >> 3) & 33554431);
    *(28 + out) = (*(21 + in) >> 28)
    | ((*(22 + in) & 2097151) << (25 - 21));
    *(29 + out) = (*(22 + in) >> 21)
    | ((*(23 + in) & 16383) << (25 - 14));
    *(30 + out) = (*(23 + in) >> 14)
    | ((*(24 + in) & 127) << (25 - 7));
    *(31 + out) = (*(24 + in) >> 7);
}

void BitPacking::fastunpack26(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 67108863);
    *(1 + out) = (*(0 + in) >> 26)
    | ((*(1 + in) & 1048575) << (26 - 20));
    *(2 + out) = (*(1 + in) >> 20)
    | ((*(2 + in) & 16383) << (26 - 14));
    *(3 + out) = (*(2 + in) >> 14)
    | ((*(3 + in) & 255) << (26 - 8));
    *(4 + out) = (*(3 + in) >> 8)
    | ((*(4 + in) & 3) << (26 - 2));
    *(5 + out) = ((*(4 + in) >> 2) & 67108863);
    *(6 + out) = (*(4 + in) >> 28)
    | ((*(5 + in) & 4194303) << (26 - 22));
    *(7 + out) = (*(5 + in) >> 22)
    | ((*(6 + in) & 65535) << (26 - 16));
    *(8 + out) = (*(6 + in) >> 16)
    | ((*(7 + in) & 1023) << (26 - 10));
    *(9 + out) = (*(7 + in) >> 10)
    | ((*(8 + in) & 15) << (26 - 4));
    *(10 + out) = ((*(8 + in) >> 4) & 67108863);
    *(11 + out) = (*(8 + in) >> 30)
    | ((*(9 + in) & 16777215) << (26 - 24));
    *(12 + out) = (*(9 + in) >> 24)
    | ((*(10 + in) & 262143) << (26 - 18));
    *(13 + out) = (*(10 + in) >> 18)
    | ((*(11 + in) & 4095) << (26 - 12));
    *(14 + out) = (*(11 + in) >> 12)
    | ((*(12 + in) & 63) << (26 - 6));
    *(15 + out) = (*(12 + in) >> 6);
    *(16 + out) = ((*(13 + in) >> 0) & 67108863);
    *(17 + out) = (*(13 + in) >> 26)
    | ((*(14 + in) & 1048575) << (26 - 20));
    *(18 + out) = (*(14 + in) >> 20)
    | ((*(15 + in) & 16383) << (26 - 14));
    *(19 + out) = (*(15 + in) >> 14)
    | ((*(16 + in) & 255) << (26 - 8));
    *(20 + out) = (*(16 + in) >> 8)
    | ((*(17 + in) & 3) << (26 - 2));
    *(21 + out) = ((*(17 + in) >> 2) & 67108863);
    *(22 + out) = (*(17 + in) >> 28)
    | ((*(18 + in) & 4194303) << (26 - 22));
    *(23 + out) = (*(18 + in) >> 22)
    | ((*(19 + in) & 65535) << (26 - 16));
    *(24 + out) = (*(19 + in) >> 16)
    | ((*(20 + in) & 1023) << (26 - 10));
    *(25 + out) = (*(20 + in) >> 10)
    | ((*(21 + in) & 15) << (26 - 4));
    *(26 + out) = ((*(21 + in) >> 4) & 67108863);
    *(27 + out) = (*(21 + in) >> 30)
    | ((*(22 + in) & 16777215) << (26 - 24));
    *(28 + out) = (*(22 + in) >> 24)
    | ((*(23 + in) & 262143) << (26 - 18));
    *(29 + out) = (*(23 + in) >> 18)
    | ((*(24 + in) & 4095) << (26 - 12));
    *(30 + out) = (*(24 + in) >> 12)
    | ((*(25 + in) & 63) << (26 - 6));
    *(31 + out) = (*(25 + in) >> 6);
}

void BitPacking::fastunpack27(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 134217727);
    *(1 + out) = (*(0 + in) >> 27)
    | ((*(1 + in) & 4194303) << (27 - 22));
    *(2 + out) = (*(1 + in) >> 22)
    | ((*(2 + in) & 131071) << (27 - 17));
    *(3 + out) = (*(2 + in) >> 17)
    | ((*(3 + in) & 4095) << (27 - 12));
    *(4 + out) = (*(3 + in) >> 12)
    | ((*(4 + in) & 127) << (27 - 7));
    *(5 + out) = (*(4 + in) >> 7)
    | ((*(5 + in) & 3) << (27 - 2));
    *(6 + out) = ((*(5 + in) >> 2) & 134217727);
    *(7 + out) = (*(5 + in) >> 29)
    | ((*(6 + in) & 16777215) << (27 - 24));
    *(8 + out) = (*(6 + in) >> 24)
    | ((*(7 + in) & 524287) << (27 - 19));
    *(9 + out) = (*(7 + in) >> 19)
    | ((*(8 + in) & 16383) << (27 - 14));
    *(10 + out) = (*(8 + in) >> 14)
    | ((*(9 + in) & 511) << (27 - 9));
    *(11 + out) = (*(9 + in) >> 9)
    | ((*(10 + in) & 15) << (27 - 4));
    *(12 + out) = ((*(10 + in) >> 4) & 134217727);
    *(13 + out) = (*(10 + in) >> 31)
    | ((*(11 + in) & 67108863) << (27 - 26));
    *(14 + out) = (*(11 + in) >> 26)
    | ((*(12 + in) & 2097151) << (27 - 21));
    *(15 + out) = (*(12 + in) >> 21)
    | ((*(13 + in) & 65535) << (27 - 16));
    *(16 + out) = (*(13 + in) >> 16)
    | ((*(14 + in) & 2047) << (27 - 11));
    *(17 + out) = (*(14 + in) >> 11)
    | ((*(15 + in) & 63) << (27 - 6));
    *(18 + out) = (*(15 + in) >> 6)
    | ((*(16 + in) & 1) << (27 - 1));
    *(19 + out) = ((*(16 + in) >> 1) & 134217727);
    *(20 + out) = (*(16 + in) >> 28)
    | ((*(17 + in) & 8388607) << (27 - 23));
    *(21 + out) = (*(17 + in) >> 23)
    | ((*(18 + in) & 262143) << (27 - 18));
    *(22 + out) = (*(18 + in) >> 18)
    | ((*(19 + in) & 8191) << (27 - 13));
    *(23 + out) = (*(19 + in) >> 13)
    | ((*(20 + in) & 255) << (27 - 8));
    *(24 + out) = (*(20 + in) >> 8)
    | ((*(21 + in) & 7) << (27 - 3));
    *(25 + out) = ((*(21 + in) >> 3) & 134217727);
    *(26 + out) = (*(21 + in) >> 30)
    | ((*(22 + in) & 33554431) << (27 - 25));
    *(27 + out) = (*(22 + in) >> 25)
    | ((*(23 + in) & 1048575) << (27 - 20));
    *(28 + out) = (*(23 + in) >> 20)
    | ((*(24 + in) & 32767) << (27 - 15));
    *(29 + out) = (*(24 + in) >> 15)
    | ((*(25 + in) & 1023) << (27 - 10));
    *(30 + out) = (*(25 + in) >> 10)
    | ((*(26 + in) & 31) << (27 - 5));
    *(31 + out) = (*(26 + in) >> 5);
}

void BitPacking::fastunpack28(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 268435455);
    *(1 + out) = (*(0 + in) >> 28)
    | ((*(1 + in) & 16777215) << (28 - 24));
    *(2 + out) = (*(1 + in) >> 24)
    | ((*(2 + in) & 1048575) << (28 - 20));
    *(3 + out) = (*(2 + in) >> 20)
    | ((*(3 + in) & 65535) << (28 - 16));
    *(4 + out) = (*(3 + in) >> 16)
    | ((*(4 + in) & 4095) << (28 - 12));
    *(5 + out) = (*(4 + in) >> 12)
    | ((*(5 + in) & 255) << (28 - 8));
    *(6 + out) = (*(5 + in) >> 8)
    | ((*(6 + in) & 15) << (28 - 4));
    *(7 + out) = (*(6 + in) >> 4);
    *(8 + out) = ((*(7 + in) >> 0) & 268435455);
    *(9 + out) = (*(7 + in) >> 28)
    | ((*(8 + in) & 16777215) << (28 - 24));
    *(10 + out) = (*(8 + in) >> 24)
    | ((*(9 + in) & 1048575) << (28 - 20));
    *(11 + out) = (*(9 + in) >> 20)
    | ((*(10 + in) & 65535) << (28 - 16));
    *(12 + out) = (*(10 + in) >> 16)
    | ((*(11 + in) & 4095) << (28 - 12));
    *(13 + out) = (*(11 + in) >> 12)
    | ((*(12 + in) & 255) << (28 - 8));
    *(14 + out) = (*(12 + in) >> 8)
    | ((*(13 + in) & 15) << (28 - 4));
    *(15 + out) = (*(13 + in) >> 4);
    *(16 + out) = ((*(14 + in) >> 0) & 268435455);
    *(17 + out) = (*(14 + in) >> 28)
    | ((*(15 + in) & 16777215) << (28 - 24));
    *(18 + out) = (*(15 + in) >> 24)
    | ((*(16 + in) & 1048575) << (28 - 20));
    *(19 + out) = (*(16 + in) >> 20)
    | ((*(17 + in) & 65535) << (28 - 16));
    *(20 + out) = (*(17 + in) >> 16)
    | ((*(18 + in) & 4095) << (28 - 12));
    *(21 + out) = (*(18 + in) >> 12)
    | ((*(19 + in) & 255) << (28 - 8));
    *(22 + out) = (*(19 + in) >> 8)
    | ((*(20 + in) & 15) << (28 - 4));
    *(23 + out) = (*(20 + in) >> 4);
    *(24 + out) = ((*(21 + in) >> 0) & 268435455);
    *(25 + out) = (*(21 + in) >> 28)
    | ((*(22 + in) & 16777215) << (28 - 24));
    *(26 + out) = (*(22 + in) >> 24)
    | ((*(23 + in) & 1048575) << (28 - 20));
    *(27 + out) = (*(23 + in) >> 20)
    | ((*(24 + in) & 65535) << (28 - 16));
    *(28 + out) = (*(24 + in) >> 16)
    | ((*(25 + in) & 4095) << (28 - 12));
    *(29 + out) = (*(25 + in) >> 12)
    | ((*(26 + in) & 255) << (28 - 8));
    *(30 + out) = (*(26 + in) >> 8)
    | ((*(27 + in) & 15) << (28 - 4));
    *(31 + out) = (*(27 + in) >> 4);
}

void BitPacking::fastunpack29(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 536870911);
    *(1 + out) = (*(0 + in) >> 29)
    | ((*(1 + in) & 67108863) << (29 - 26));
    *(2 + out) = (*(1 + in) >> 26)
    | ((*(2 + in) & 8388607) << (29 - 23));
    *(3 + out) = (*(2 + in) >> 23)
    | ((*(3 + in) & 1048575) << (29 - 20));
    *(4 + out) = (*(3 + in) >> 20)
    | ((*(4 + in) & 131071) << (29 - 17));
    *(5 + out) = (*(4 + in) >> 17)
    | ((*(5 + in) & 16383) << (29 - 14));
    *(6 + out) = (*(5 + in) >> 14)
    | ((*(6 + in) & 2047) << (29 - 11));
    *(7 + out) = (*(6 + in) >> 11)
    | ((*(7 + in) & 255) << (29 - 8));
    *(8 + out) = (*(7 + in) >> 8)
    | ((*(8 + in) & 31) << (29 - 5));
    *(9 + out) = (*(8 + in) >> 5)
    | ((*(9 + in) & 3) << (29 - 2));
    *(10 + out) = ((*(9 + in) >> 2) & 536870911);
    *(11 + out) = (*(9 + in) >> 31)
    | ((*(10 + in) & 268435455) << (29 - 28));
    *(12 + out) = (*(10 + in) >> 28)
    | ((*(11 + in) & 33554431) << (29 - 25));
    *(13 + out) = (*(11 + in) >> 25)
    | ((*(12 + in) & 4194303) << (29 - 22));
    *(14 + out) = (*(12 + in) >> 22)
    | ((*(13 + in) & 524287) << (29 - 19));
    *(15 + out) = (*(13 + in) >> 19)
    | ((*(14 + in) & 65535) << (29 - 16));
    *(16 + out) = (*(14 + in) >> 16)
    | ((*(15 + in) & 8191) << (29 - 13));
    *(17 + out) = (*(15 + in) >> 13)
    | ((*(16 + in) & 1023) << (29 - 10));
    *(18 + out) = (*(16 + in) >> 10)
    | ((*(17 + in) & 127) << (29 - 7));
    *(19 + out) = (*(17 + in) >> 7)
    | ((*(18 + in) & 15) << (29 - 4));
    *(20 + out) = (*(18 + in) >> 4)
    | ((*(19 + in) & 1) << (29 - 1));
    *(21 + out) = ((*(19 + in) >> 1) & 536870911);
    *(22 + out) = (*(19 + in) >> 30)
    | ((*(20 + in) & 134217727) << (29 - 27));
    *(23 + out) = (*(20 + in) >> 27)
    | ((*(21 + in) & 16777215) << (29 - 24));
    *(24 + out) = (*(21 + in) >> 24)
    | ((*(22 + in) & 2097151) << (29 - 21));
    *(25 + out) = (*(22 + in) >> 21)
    | ((*(23 + in) & 262143) << (29 - 18));
    *(26 + out) = (*(23 + in) >> 18)
    | ((*(24 + in) & 32767) << (29 - 15));
    *(27 + out) = (*(24 + in) >> 15)
    | ((*(25 + in) & 4095) << (29 - 12));
    *(28 + out) = (*(25 + in) >> 12)
    | ((*(26 + in) & 511) << (29 - 9));
    *(29 + out) = (*(26 + in) >> 9)
    | ((*(27 + in) & 63) << (29 - 6));
    *(30 + out) = (*(27 + in) >> 6)
    | ((*(28 + in) & 7) << (29 - 3));
    *(31 + out) = (*(28 + in) >> 3);
}

void BitPacking::fastunpack3(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 7);
    *(1 + out) = ((*(0 + in) >> 3) & 7);
    *(2 + out) = ((*(0 + in) >> 6) & 7);
    *(3 + out) = ((*(0 + in) >> 9) & 7);
    *(4 + out) = ((*(0 + in) >> 12) & 7);
    *(5 + out) = ((*(0 + in) >> 15) & 7);
    *(6 + out) = ((*(0 + in) >> 18) & 7);
    *(7 + out) = ((*(0 + in) >> 21) & 7);
    *(8 + out) = ((*(0 + in) >> 24) & 7);
    *(9 + out) = ((*(0 + in) >> 27) & 7);
    *(10 + out) = (*(0 + in) >> 30)
    | ((*(1 + in) & 1) << (3 - 1));
    *(11 + out) = ((*(1 + in) >> 1) & 7);
    *(12 + out) = ((*(1 + in) >> 4) & 7);
    *(13 + out) = ((*(1 + in) >> 7) & 7);
    *(14 + out) = ((*(1 + in) >> 10) & 7);
    *(15 + out) = ((*(1 + in) >> 13) & 7);
    *(16 + out) = ((*(1 + in) >> 16) & 7);
    *(17 + out) = ((*(1 + in) >> 19) & 7);
    *(18 + out) = ((*(1 + in) >> 22) & 7);
    *(19 + out) = ((*(1 + in) >> 25) & 7);
    *(20 + out) = ((*(1 + in) >> 28) & 7);
    *(21 + out) = (*(1 + in) >> 31)
    | ((*(2 + in) & 3) << (3 - 2));
    *(22 + out) = ((*(2 + in) >> 2) & 7);
    *(23 + out) = ((*(2 + in) >> 5) & 7);
    *(24 + out) = ((*(2 + in) >> 8) & 7);
    *(25 + out) = ((*(2 + in) >> 11) & 7);
    *(26 + out) = ((*(2 + in) >> 14) & 7);
    *(27 + out) = ((*(2 + in) >> 17) & 7);
    *(28 + out) = ((*(2 + in) >> 20) & 7);
    *(29 + out) = ((*(2 + in) >> 23) & 7);
    *(30 + out) = ((*(2 + in) >> 26) & 7);
    *(31 + out) = (*(2 + in) >> 29);
}

void BitPacking::fastunpack30(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 1073741823);
    *(1 + out) = (*(0 + in) >> 30)
    | ((*(1 + in) & 268435455) << (30 - 28));
    *(2 + out) = (*(1 + in) >> 28)
    | ((*(2 + in) & 67108863) << (30 - 26));
    *(3 + out) = (*(2 + in) >> 26)
    | ((*(3 + in) & 16777215) << (30 - 24));
    *(4 + out) = (*(3 + in) >> 24)
    | ((*(4 + in) & 4194303) << (30 - 22));
    *(5 + out) = (*(4 + in) >> 22)
    | ((*(5 + in) & 1048575) << (30 - 20));
    *(6 + out) = (*(5 + in) >> 20)
    | ((*(6 + in) & 262143) << (30 - 18));
    *(7 + out) = (*(6 + in) >> 18)
    | ((*(7 + in) & 65535) << (30 - 16));
    *(8 + out) = (*(7 + in) >> 16)
    | ((*(8 + in) & 16383) << (30 - 14));
    *(9 + out) = (*(8 + in) >> 14)
    | ((*(9 + in) & 4095) << (30 - 12));
    *(10 + out) = (*(9 + in) >> 12)
    | ((*(10 + in) & 1023) << (30 - 10));
    *(11 + out) = (*(10 + in) >> 10)
    | ((*(11 + in) & 255) << (30 - 8));
    *(12 + out) = (*(11 + in) >> 8)
    | ((*(12 + in) & 63) << (30 - 6));
    *(13 + out) = (*(12 + in) >> 6)
    | ((*(13 + in) & 15) << (30 - 4));
    *(14 + out) = (*(13 + in) >> 4)
    | ((*(14 + in) & 3) << (30 - 2));
    *(15 + out) = (*(14 + in) >> 2);
    *(16 + out) = ((*(15 + in) >> 0) & 1073741823);
    *(17 + out) = (*(15 + in) >> 30)
    | ((*(16 + in) & 268435455) << (30 - 28));
    *(18 + out) = (*(16 + in) >> 28)
    | ((*(17 + in) & 67108863) << (30 - 26));
    *(19 + out) = (*(17 + in) >> 26)
    | ((*(18 + in) & 16777215) << (30 - 24));
    *(20 + out) = (*(18 + in) >> 24)
    | ((*(19 + in) & 4194303) << (30 - 22));
    *(21 + out) = (*(19 + in) >> 22)
    | ((*(20 + in) & 1048575) << (30 - 20));
    *(22 + out) = (*(20 + in) >> 20)
    | ((*(21 + in) & 262143) << (30 - 18));
    *(23 + out) = (*(21 + in) >> 18)
    | ((*(22 + in) & 65535) << (30 - 16));
    *(24 + out) = (*(22 + in) >> 16)
    | ((*(23 + in) & 16383) << (30 - 14));
    *(25 + out) = (*(23 + in) >> 14)
    | ((*(24 + in) & 4095) << (30 - 12));
    *(26 + out) = (*(24 + in) >> 12)
    | ((*(25 + in) & 1023) << (30 - 10));
    *(27 + out) = (*(25 + in) >> 10)
    | ((*(26 + in) & 255) << (30 - 8));
    *(28 + out) = (*(26 + in) >> 8)
    | ((*(27 + in) & 63) << (30 - 6));
    *(29 + out) = (*(27 + in) >> 6)
    | ((*(28 + in) & 15) << (30 - 4));
    *(30 + out) = (*(28 + in) >> 4)
    | ((*(29 + in) & 3) << (30 - 2));
    *(31 + out) = (*(29 + in) >> 2);
}

void BitPacking::fastunpack31(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 2147483647);
    *(1 + out) = (*(0 + in) >> 31)
    | ((*(1 + in) & 1073741823) << (31 - 30));
    *(2 + out) = (*(1 + in) >> 30)
    | ((*(2 + in) & 536870911) << (31 - 29));
    *(3 + out) = (*(2 + in) >> 29)
    | ((*(3 + in) & 268435455) << (31 - 28));
    *(4 + out) = (*(3 + in) >> 28)
    | ((*(4 + in) & 134217727) << (31 - 27));
    *(5 + out) = (*(4 + in) >> 27)
    | ((*(5 + in) & 67108863) << (31 - 26));
    *(6 + out) = (*(5 + in) >> 26)
    | ((*(6 + in) & 33554431) << (31 - 25));
    *(7 + out) = (*(6 + in) >> 25)
    | ((*(7 + in) & 16777215) << (31 - 24));
    *(8 + out) = (*(7 + in) >> 24)
    | ((*(8 + in) & 8388607) << (31 - 23));
    *(9 + out) = (*(8 + in) >> 23)
    | ((*(9 + in) & 4194303) << (31 - 22));
    *(10 + out) = (*(9 + in) >> 22)
    | ((*(10 + in) & 2097151) << (31 - 21));
    *(11 + out) = (*(10 + in) >> 21)
    | ((*(11 + in) & 1048575) << (31 - 20));
    *(12 + out) = (*(11 + in) >> 20)
    | ((*(12 + in) & 524287) << (31 - 19));
    *(13 + out) = (*(12 + in) >> 19)
    | ((*(13 + in) & 262143) << (31 - 18));
    *(14 + out) = (*(13 + in) >> 18)
    | ((*(14 + in) & 131071) << (31 - 17));
    *(15 + out) = (*(14 + in) >> 17)
    | ((*(15 + in) & 65535) << (31 - 16));
    *(16 + out) = (*(15 + in) >> 16)
    | ((*(16 + in) & 32767) << (31 - 15));
    *(17 + out) = (*(16 + in) >> 15)
    | ((*(17 + in) & 16383) << (31 - 14));
    *(18 + out) = (*(17 + in) >> 14)
    | ((*(18 + in) & 8191) << (31 - 13));
    *(19 + out) = (*(18 + in) >> 13)
    | ((*(19 + in) & 4095) << (31 - 12));
    *(20 + out) = (*(19 + in) >> 12)
    | ((*(20 + in) & 2047) << (31 - 11));
    *(21 + out) = (*(20 + in) >> 11)
    | ((*(21 + in) & 1023) << (31 - 10));
    *(22 + out) = (*(21 + in) >> 10)
    | ((*(22 + in) & 511) << (31 - 9));
    *(23 + out) = (*(22 + in) >> 9)
    | ((*(23 + in) & 255) << (31 - 8));
    *(24 + out) = (*(23 + in) >> 8)
    | ((*(24 + in) & 127) << (31 - 7));
    *(25 + out) = (*(24 + in) >> 7)
    | ((*(25 + in) & 63) << (31 - 6));
    *(26 + out) = (*(25 + in) >> 6)
    | ((*(26 + in) & 31) << (31 - 5));
    *(27 + out) = (*(26 + in) >> 5)
    | ((*(27 + in) & 15) << (31 - 4));
    *(28 + out) = (*(27 + in) >> 4)
    | ((*(28 + in) & 7) << (31 - 3));
    *(29 + out) = (*(28 + in) >> 3)
    | ((*(29 + in) & 3) << (31 - 2));
    *(30 + out) = (*(29 + in) >> 2)
    | ((*(30 + in) & 1) << (31 - 1));
    *(31 + out) = (*(30 + in) >> 1);
}

void BitPacking::fastunpack32(const unsigned int* in, unsigned int* out) {
    //std::memcpy(out, in, 32);
    
    for(int i =0; i< 32; i++)
        out[i] = in[i];
}

void BitPacking::fastunpack4(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 15);
    *(1 + out) = ((*(0 + in) >> 4) & 15);
    *(2 + out) = ((*(0 + in) >> 8) & 15);
    *(3 + out) = ((*(0 + in) >> 12) & 15);
    *(4 + out) = ((*(0 + in) >> 16) & 15);
    *(5 + out) = ((*(0 + in) >> 20) & 15);
    *(6 + out) = ((*(0 + in) >> 24) & 15);
    *(7 + out) = (*(0 + in) >> 28);
    *(8 + out) = ((*(1 + in) >> 0) & 15);
    *(9 + out) = ((*(1 + in) >> 4) & 15);
    *(10 + out) = ((*(1 + in) >> 8) & 15);
    *(11 + out) = ((*(1 + in) >> 12) & 15);
    *(12 + out) = ((*(1 + in) >> 16) & 15);
    *(13 + out) = ((*(1 + in) >> 20) & 15);
    *(14 + out) = ((*(1 + in) >> 24) & 15);
    *(15 + out) = (*(1 + in) >> 28);
    *(16 + out) = ((*(2 + in) >> 0) & 15);
    *(17 + out) = ((*(2 + in) >> 4) & 15);
    *(18 + out) = ((*(2 + in) >> 8) & 15);
    *(19 + out) = ((*(2 + in) >> 12) & 15);
    *(20 + out) = ((*(2 + in) >> 16) & 15);
    *(21 + out) = ((*(2 + in) >> 20) & 15);
    *(22 + out) = ((*(2 + in) >> 24) & 15);
    *(23 + out) = (*(2 + in) >> 28);
    *(24 + out) = ((*(3 + in) >> 0) & 15);
    *(25 + out) = ((*(3 + in) >> 4) & 15);
    *(26 + out) = ((*(3 + in) >> 8) & 15);
    *(27 + out) = ((*(3 + in) >> 12) & 15);
    *(28 + out) = ((*(3 + in) >> 16) & 15);
    *(29 + out) = ((*(3 + in) >> 20) & 15);
    *(30 + out) = ((*(3 + in) >> 24) & 15);
    *(31 + out) = (*(3 + in) >> 28);
}

void BitPacking::fastunpack5(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 31);
    *(1 + out) = ((*(0 + in) >> 5) & 31);
    *(2 + out) = ((*(0 + in) >> 10) & 31);
    *(3 + out) = ((*(0 + in) >> 15) & 31);
    *(4 + out) = ((*(0 + in) >> 20) & 31);
    *(5 + out) = ((*(0 + in) >> 25) & 31);
    *(6 + out) = (*(0 + in) >> 30)
    | ((*(1 + in) & 7) << (5 - 3));
    *(7 + out) = ((*(1 + in) >> 3) & 31);
    *(8 + out) = ((*(1 + in) >> 8) & 31);
    *(9 + out) = ((*(1 + in) >> 13) & 31);
    *(10 + out) = ((*(1 + in) >> 18) & 31);
    *(11 + out) = ((*(1 + in) >> 23) & 31);
    *(12 + out) = (*(1 + in) >> 28)
    | ((*(2 + in) & 1) << (5 - 1));
    *(13 + out) = ((*(2 + in) >> 1) & 31);
    *(14 + out) = ((*(2 + in) >> 6) & 31);
    *(15 + out) = ((*(2 + in) >> 11) & 31);
    *(16 + out) = ((*(2 + in) >> 16) & 31);
    *(17 + out) = ((*(2 + in) >> 21) & 31);
    *(18 + out) = ((*(2 + in) >> 26) & 31);
    *(19 + out) = (*(2 + in) >> 31)
    | ((*(3 + in) & 15) << (5 - 4));
    *(20 + out) = ((*(3 + in) >> 4) & 31);
    *(21 + out) = ((*(3 + in) >> 9) & 31);
    *(22 + out) = ((*(3 + in) >> 14) & 31);
    *(23 + out) = ((*(3 + in) >> 19) & 31);
    *(24 + out) = ((*(3 + in) >> 24) & 31);
    *(25 + out) = (*(3 + in) >> 29)
    | ((*(4 + in) & 3) << (5 - 2));
    *(26 + out) = ((*(4 + in) >> 2) & 31);
    *(27 + out) = ((*(4 + in) >> 7) & 31);
    *(28 + out) = ((*(4 + in) >> 12) & 31);
    *(29 + out) = ((*(4 + in) >> 17) & 31);
    *(30 + out) = ((*(4 + in) >> 22) & 31);
    *(31 + out) = (*(4 + in) >> 27);
}

void BitPacking::fastunpack6(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 63);
    *(1 + out) = ((*(0 + in) >> 6) & 63);
    *(2 + out) = ((*(0 + in) >> 12) & 63);
    *(3 + out) = ((*(0 + in) >> 18) & 63);
    *(4 + out) = ((*(0 + in) >> 24) & 63);
    *(5 + out) = (*(0 + in) >> 30)
    | ((*(1 + in) & 15) << (6 - 4));
    *(6 + out) = ((*(1 + in) >> 4) & 63);
    *(7 + out) = ((*(1 + in) >> 10) & 63);
    *(8 + out) = ((*(1 + in) >> 16) & 63);
    *(9 + out) = ((*(1 + in) >> 22) & 63);
    *(10 + out) = (*(1 + in) >> 28)
    | ((*(2 + in) & 3) << (6 - 2));
    *(11 + out) = ((*(2 + in) >> 2) & 63);
    *(12 + out) = ((*(2 + in) >> 8) & 63);
    *(13 + out) = ((*(2 + in) >> 14) & 63);
    *(14 + out) = ((*(2 + in) >> 20) & 63);
    *(15 + out) = (*(2 + in) >> 26);
    *(16 + out) = ((*(3 + in) >> 0) & 63);
    *(17 + out) = ((*(3 + in) >> 6) & 63);
    *(18 + out) = ((*(3 + in) >> 12) & 63);
    *(19 + out) = ((*(3 + in) >> 18) & 63);
    *(20 + out) = ((*(3 + in) >> 24) & 63);
    *(21 + out) = (*(3 + in) >> 30)
    | ((*(4 + in) & 15) << (6 - 4));
    *(22 + out) = ((*(4 + in) >> 4) & 63);
    *(23 + out) = ((*(4 + in) >> 10) & 63);
    *(24 + out) = ((*(4 + in) >> 16) & 63);
    *(25 + out) = ((*(4 + in) >> 22) & 63);
    *(26 + out) = (*(4 + in) >> 28)
    | ((*(5 + in) & 3) << (6 - 2));
    *(27 + out) = ((*(5 + in) >> 2) & 63);
    *(28 + out) = ((*(5 + in) >> 8) & 63);
    *(29 + out) = ((*(5 + in) >> 14) & 63);
    *(30 + out) = ((*(5 + in) >> 20) & 63);
    *(31 + out) = (*(5 + in) >> 26);
}

void BitPacking::fastunpack7(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 127);
    *(1 + out) = ((*(0 + in) >> 7) & 127);
    *(2 + out) = ((*(0 + in) >> 14) & 127);
    *(3 + out) = ((*(0 + in) >> 21) & 127);
    *(4 + out) = (*(0 + in) >> 28)
    | ((*(1 + in) & 7) << (7 - 3));
    *(5 + out) = ((*(1 + in) >> 3) & 127);
    *(6 + out) = ((*(1 + in) >> 10) & 127);
    *(7 + out) = ((*(1 + in) >> 17) & 127);
    *(8 + out) = ((*(1 + in) >> 24) & 127);
    *(9 + out) = (*(1 + in) >> 31)
    | ((*(2 + in) & 63) << (7 - 6));
    *(10 + out) = ((*(2 + in) >> 6) & 127);
    *(11 + out) = ((*(2 + in) >> 13) & 127);
    *(12 + out) = ((*(2 + in) >> 20) & 127);
    *(13 + out) = (*(2 + in) >> 27)
    | ((*(3 + in) & 3) << (7 - 2));
    *(14 + out) = ((*(3 + in) >> 2) & 127);
    *(15 + out) = ((*(3 + in) >> 9) & 127);
    *(16 + out) = ((*(3 + in) >> 16) & 127);
    *(17 + out) = ((*(3 + in) >> 23) & 127);
    *(18 + out) = (*(3 + in) >> 30)
    | ((*(4 + in) & 31) << (7 - 5));
    *(19 + out) = ((*(4 + in) >> 5) & 127);
    *(20 + out) = ((*(4 + in) >> 12) & 127);
    *(21 + out) = ((*(4 + in) >> 19) & 127);
    *(22 + out) = (*(4 + in) >> 26)
    | ((*(5 + in) & 1) << (7 - 1));
    *(23 + out) = ((*(5 + in) >> 1) & 127);
    *(24 + out) = ((*(5 + in) >> 8) & 127);
    *(25 + out) = ((*(5 + in) >> 15) & 127);
    *(26 + out) = ((*(5 + in) >> 22) & 127);
    *(27 + out) = (*(5 + in) >> 29)
    | ((*(6 + in) & 15) << (7 - 4));
    *(28 + out) = ((*(6 + in) >> 4) & 127);
    *(29 + out) = ((*(6 + in) >> 11) & 127);
    *(30 + out) = ((*(6 + in) >> 18) & 127);
    *(31 + out) = (*(6 + in) >> 25);
}

void BitPacking::fastunpack8(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 255);
    *(1 + out) = ((*(0 + in) >> 8) & 255);
    *(2 + out) = ((*(0 + in) >> 16) & 255);
    *(3 + out) = (*(0 + in) >> 24);
    *(4 + out) = ((*(1 + in) >> 0) & 255);
    *(5 + out) = ((*(1 + in) >> 8) & 255);
    *(6 + out) = ((*(1 + in) >> 16) & 255);
    *(7 + out) = (*(1 + in) >> 24);
    *(8 + out) = ((*(2 + in) >> 0) & 255);
    *(9 + out) = ((*(2 + in) >> 8) & 255);
    *(10 + out) = ((*(2 + in) >> 16) & 255);
    *(11 + out) = (*(2 + in) >> 24);
    *(12 + out) = ((*(3 + in) >> 0) & 255);
    *(13 + out) = ((*(3 + in) >> 8) & 255);
    *(14 + out) = ((*(3 + in) >> 16) & 255);
    *(15 + out) = (*(3 + in) >> 24);
    *(16 + out) = ((*(4 + in) >> 0) & 255);
    *(17 + out) = ((*(4 + in) >> 8) & 255);
    *(18 + out) = ((*(4 + in) >> 16) & 255);
    *(19 + out) = (*(4 + in) >> 24);
    *(20 + out) = ((*(5 + in) >> 0) & 255);
    *(21 + out) = ((*(5 + in) >> 8) & 255);
    *(22 + out) = ((*(5 + in) >> 16) & 255);
    *(23 + out) = (*(5 + in) >> 24);
    *(24 + out) = ((*(6 + in) >> 0) & 255);
    *(25 + out) = ((*(6 + in) >> 8) & 255);
    *(26 + out) = ((*(6 + in) >> 16) & 255);
    *(27 + out) = (*(6 + in) >> 24);
    *(28 + out) = ((*(7 + in) >> 0) & 255);
    *(29 + out) = ((*(7 + in) >> 8) & 255);
    *(30 + out) = ((*(7 + in) >> 16) & 255);
    *(31 + out) = (*(7 + in) >> 24);
}

void BitPacking::fastunpack9(const unsigned int* in, unsigned int* out) {
    *(0 + out) = ((*(0 + in) >> 0) & 511);
    *(1 + out) = ((*(0 + in) >> 9) & 511);
    *(2 + out) = ((*(0 + in) >> 18) & 511);
    *(3 + out) = (*(0 + in) >> 27)
    | ((*(1 + in) & 15) << (9 - 4));
    *(4 + out) = ((*(1 + in) >> 4) & 511);
    *(5 + out) = ((*(1 + in) >> 13) & 511);
    *(6 + out) = ((*(1 + in) >> 22) & 511);
    *(7 + out) = (*(1 + in) >> 31)
    | ((*(2 + in) & 255) << (9 - 8));
    *(8 + out) = ((*(2 + in) >> 8) & 511);
    *(9 + out) = ((*(2 + in) >> 17) & 511);
    *(10 + out) = (*(2 + in) >> 26)
    | ((*(3 + in) & 7) << (9 - 3));
    *(11 + out) = ((*(3 + in) >> 3) & 511);
    *(12 + out) = ((*(3 + in) >> 12) & 511);
    *(13 + out) = ((*(3 + in) >> 21) & 511);
    *(14 + out) = (*(3 + in) >> 30)
    | ((*(4 + in) & 127) << (9 - 7));
    *(15 + out) = ((*(4 + in) >> 7) & 511);
    *(16 + out) = ((*(4 + in) >> 16) & 511);
    *(17 + out) = (*(4 + in) >> 25)
    | ((*(5 + in) & 3) << (9 - 2));
    *(18 + out) = ((*(5 + in) >> 2) & 511);
    *(19 + out) = ((*(5 + in) >> 11) & 511);
    *(20 + out) = ((*(5 + in) >> 20) & 511);
    *(21 + out) = (*(5 + in) >> 29)
    | ((*(6 + in) & 63) << (9 - 6));
    *(22 + out) = ((*(6 + in) >> 6) & 511);
    *(23 + out) = ((*(6 + in) >> 15) & 511);
    *(24 + out) = (*(6 + in) >> 24)
    | ((*(7 + in) & 1) << (9 - 1));
    *(25 + out) = ((*(7 + in) >> 1) & 511);
    *(26 + out) = ((*(7 + in) >> 10) & 511);
    *(27 + out) = ((*(7 + in) >> 19) & 511);
    *(28 + out) = (*(7 + in) >> 28)
    | ((*(8 + in) & 31) << (9 - 5));
    *(29 + out) = ((*(8 + in) >> 5) & 511);
    *(30 + out) = ((*(8 + in) >> 14) & 511);
    *(31 + out) = (*(8 + in) >> 23);
}
